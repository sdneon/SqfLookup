{"TOH": {"setBatteryChargeRTD": {"example": "(vehicle player) setBatteryChargeRTD 0.5;", "reviewLevel": 1, "docSyntax": "helicopterRTD setBatteryChargeRTD charge", "description": "Set the actual battery charge of a helicopter.", "syntax": "helicopterRTD setBatteryChargeRTD charge"}, "BIS_fnc_numberText": {"example": "[999999999999] call BIS_fnc_numberText; //Returns \"909 999 995 904\"", "reviewLevel": 2, "docSyntax": "[number, modulo] call BIS_fnc_numberText", "description": "Convert a number into string (avoiding scientific notation). It's very imprecise with larger numbers.", "syntax": "[<scalar>,modulo] call BIS_fnc_numberText"}, "BIS_fnc_kbTopicConfig": {"example": "", "description": ""}, "setThrottleRTD": {"example": "(vehicle player) setThrottleRTD [0.5, 1];", "reviewLevel": 1, "docSyntax": "helicopterRTD setThrottleRTD [value, engineIndex]", "description": "Set the throttle for the given engine(s) of a helicopter.", "syntax": "helicopterRTD setThrottleRTD [<scalar>,engineIndex]"}, "BIS_fnc_overviewTimeTrial": {"example": "\"BIS_someTimeTrail\" call BIS_fnc_overviewTimeTrial;", "reviewLevel": 1, "docSyntax": "class call BIS_fnc_overviewTimeTrial", "description": "Returns the dynamically composed overview text for Time Trial scenarios.", "syntax": "class call BIS_fnc_overviewTimeTrial"}, "BIS_fnc_kbPriority": {"example": "", "description": "Set conversation priority. Conversations with priority not in the list won't be played Parameter(s): _this: ARRAY - List of priorities. Empty array will just return current value. NUMBER >0 - add priority to already existing list <0 - remove priority from already existing list Priority 0 cannot be tempered with Returns: ARRAY - List of priorities"}, "BIS_fnc_GUIhint": {"example": "", "description": "Creates advanced hintC dialog Parameter(s): _this select 0: ARRAY in format [text,picture] * text: STRING - hint text * picture: STRING - picture [item1,item2...] - Listbox item ARRAYs in format [itemText,itemDescription,picture,icon] * itemText: STRING - Text displayed in listbox * itemDescription (Optional): STRING - text displayed after clicking on item * picture (Optional): STRING - picture displayed after clicking on item * icon (Optional): STRING - icon displayed in listbox left from text _this select 1 (Optional): STRING - hint header _this select 2 (Optional): ARRAY - [STRING,CODE,NUMBER] - text on left button (when \"\", button is hidden), code executed upon clicking and fade out delay. If only text is present, button is disabled. _this select 3 (Optional): ARRAY - [STRING,CODE,NUMBER] - STRING - text on right button and code executed upon clicking _this select 4 (Optional): ARRAY - [STRING,CODE,NUMBER] - STRING - text on middle button and code executed upon clicking _this select 5 (Optional): NUMBER or ARRAY - width or [width,height] of picture (in grid coordinates). Width > 17 means only picture is used. Returns: ARRAY - [endState(,lbId)] * endState: NUMBER - 1 when clicked on right button, -1 when clicked on left button, 0 when escaped * lbId: NUMBER - selected listbox item (when listbox was used) */ #define DISPLAY_CLASS 'Hsim_RscDisplayCommonHint_guiHint' #define DISPLAY_CONFIG (configfile >> \"RscDisplayCommonHint\") #define DISPLAY (uinamespace getvariable DISPLAY_CLASS) #define CONTROL (DISPLAY displayctrl _idc) #define CONTROL_FADEINTIME 0.3 #define CONTROL_FADEIN \\ CONTROL ctrlsetfade 1; \\ CONTROL ctrlcommit 0; \\ CONTROL ctrlsetfade 0; \\ CONTROL ctrlcommit CONTROL_FADEINTIME;"}, "isPiPEnabled": {"example": "_PiPState = isPiPEnabled;", "reviewLevel": 2, "docSyntax": "isPiPEnabled", "description": "Returns whether Picture-In-Picture video option is enabled or not.", "syntax": "isPiPEnabled"}, "BIS_fnc_ambientPlanes": {"example": "", "description": ""}, "wingsForcesRTD": {"example": "_wingForce = wingsForcesRTD _rtdHelo", "reviewLevel": 2, "docSyntax": "wingsForcesRTD RTD_helicopter", "description": "Returns force produced by wings.", "syntax": "wingsForcesRTD RTD_helicopter"}, "BIS_fnc_position": {"returns": "array", "reviewLevel": 4, "syntax": "<object> call BIS_fnc_position", "example": "_pos = player call BIS_fnc_position;", "docSyntax": "argument call BIS_fnc_position", "description": "Returns PositionAGL, unless passed argument is Array, then the same array is returned. When position is Object and alternative position is stored in \"BIS_fnc_position_forced\" variable on this object, the stored position is used rather than actual object position."}, "BIS_fnc_getIDD": {"example": "_IDD = [ configFile >> \"display3DENPublishMissionSelectImage\" ] call BIS_fnc_getIDD;", "reviewLevel": 2, "docSyntax": "[config] call BIS_fnc_getIDD", "description": "Returns IDD of given display.", "syntax": "[config] call BIS_fnc_getIDD"}, "BIS_fnc_roundDir": {"example": "player setDir ([getDir player, 45] call BIS_fnc_roundDir);", "reviewLevel": 2, "docSyntax": "[rawDirection, rounding] call BIS_fnc_roundDir", "description": "Round direction to nearest set rounding; used for determining cardinal direction.", "syntax": "[rawDirection,rounding] call BIS_fnc_roundDir"}, "BIS_fnc_errorMsg": {"example": "[\"This is an error message\"] call BIS_fnc_errorMsg;", "reviewLevel": 2, "docSyntax": "[message, otherParameters] call BIS_fnc_errorMsg", "description": "Display error window.", "syntax": "[message,otherParameters] call BIS_fnc_errorMsg"}, "BIS_fnc_isLocalized": {"example": "[\"STR_someLocalizedString\"] call BIS_fnc_isLocalized;", "reviewLevel": 2, "docSyntax": "[localizationString] call BIS_fnc_isLocalized;", "description": "Checks if string is localized. Obsolete variant before isLocalized command was introduced.", "syntax": "[localizationString] call BIS_fnc_isLocalized;"}, "BIS_fnc_wpTransport": {"example": "[player,dude,100] spawn BIS_fnc_wpTransport;", "reviewLevel": 1, "docSyntax": "arguments: none", "description": "TRANSPORT custom waypoint. Player must pick up group of units in their location. Get in AI pathfinding is supressed (to avoid unwanted behaviour on building roofs), units are teleported into player's vehicle instead.", "syntax": "arguments: none"}, "BIS_fnc_helicopterSeat": {"example": "player call BIS_fnc_helicopterSeat;", "reviewLevel": 2, "docSyntax": "unit call BIS_fnc_helicopterSeat", "description": "Check if unit sits on right or left seat.", "syntax": "<objUnit> call BIS_fnc_helicopterSeat"}, "assignAsCargoIndex": {"example": "player assignAsCargoIndex [myHelicopter, 1];", "reviewLevel": 1, "docSyntax": "character assignAsCargoIndex [vehicle, index]", "description": "Assigns the character to a specific cargo / passenger index of the given vehicle.", "syntax": "character assignAsCargoIndex [<objVehicle>,<scalar>]"}, "BIS_fnc_secondsToString": {"example": "hint format [\"Hi, it is currently\u00c2\u00a0%1.\", [time, \"HH:MM\"] call BIS_fnc_secondsToString];", "reviewLevel": 2, "docSyntax": "[totalSeconds, format, returnArray] call BIS_fnc_secondsToString", "description": "Convert seconds to formatted string.", "syntax": "[totalSeconds,format,returnArray] call BIS_fnc_secondsToString"}, "BIS_fnc_GC": {"example": "[dude1] spawn BIS_fnc_GC;", "reviewLevel": 1, "docSyntax": "entity spawn BIS_fnc_GC;", "description": "Sends an entity to the garbage collection queue.", "syntax": "entity spawn BIS_fnc_GC;"}, "BIS_fnc_playerName": {"example": "_myPlayerName = call BIS_fnc_playerName;", "reviewLevel": 2, "docSyntax": "call BIS_fnc_playerName", "description": "Return current profile's name. Deprecated since Arma 3, use profileName instead.", "syntax": "call BIS_fnc_playerName"}, "BIS_fnc_worldArea": {"example": "_bigTrigger = call BIS_fnc_worldArea;", "reviewLevel": 2, "docSyntax": "call BIS_fnc_worldArea", "description": "Creates (or returns if it already exists) trigger with size of map.", "syntax": "call BIS_fnc_worldArea"}, "throttleRTD": {"example": "_throttleValues = throttleRTD (vehicle player);", "reviewLevel": 1, "docSyntax": "throttleRTD helicopterRTD", "description": "Return the current throttle level for all engines of a helicopter.", "syntax": "throttleRTD helicopterRTD"}, "setTrafficGap": {"example": "setTrafficGap [50, 31000, 32500, 28000, 32000];", "reviewLevel": 2, "docSyntax": "setTrafficGap [gap, xMin, xMax, zMin, zMax]", "description": "Set the average gap between ambient cars in a rectangle (in meters).", "syntax": "setTrafficGap [gap,xMin,xMax,zMin,zMax]"}, "BIS_fnc_kbTellLocal": {"example": "[\"sentence\", [player, [BIS_HQ, \"myTopic\", \"playerSentence1\"]]] call BIS_fnc_kbTellLocal;", "reviewLevel": 2, "docSyntax": "[mode, parameters] call BIS_fnc_kbTellLocal", "description": "Play given sentence, disable radio and/or lower sounds. Will use BIS_fnc_showSubtitle for better effects if channel is DIRECT or VEHICLE.", "syntax": "[mode,parameters] call BIS_fnc_kbTellLocal"}, "BIS_fnc_randomPos": {"example": "_randomPosMapNoWater = [] call BIS_fnc_randomPos;", "reviewLevel": 2, "docSyntax": "[whitelist, blacklist, code] call BIS_fnc_randomPos", "description": "Selects random position according to given params within given area", "syntax": "[whitelist,blacklist,<code>] call BIS_fnc_randomPos"}, "enableAutoTrimRTD": {"example": "myHelicopterRTD enableAutoTrimRTD true;", "reviewLevel": 1, "docSyntax": "helicopterRTD enableAutoTrimRTD enable", "description": "Toggle auto-trim for RTD helicopters.", "syntax": "helicopterRTD enableAutoTrimRTD <bool>"}, "setActualCollectiveRTD": {"example": "myHelicopterRTD setActualCollectiveRTD 0.7;", "reviewLevel": 1, "docSyntax": "helicopterRTD setActualCollectiveRTD value", "description": "Sets the collective pitch control to a specific position, regardless of input devices (until those are changed).", "syntax": "helicopterRTD setActualCollectiveRTD <scalar>"}, "BIS_fnc_ambientPostprocess": {"example": "[] call BIS_fnc_ambientPostprocess;", "reviewLevel": 2, "docSyntax": "[terrain, activation] call BIS_fnc_ambientPostprocess", "description": "Initialize terrain-related postprocess effects.", "syntax": "[terrain,activation] call BIS_fnc_ambientPostprocess"}, "BIS_fnc_dbValueRemove": {"example": "", "description": "Remove value from Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if value was removed"}, "setTrafficSpeed": {"example": "setTrafficSpeed [50, _xMin, _xMax, _zMin, _zMax];", "reviewLevel": 2, "docSyntax": "setTrafficSpeed [speed, xMin, xMax, zMin, zMax]", "description": "Set ambient traffic speed in a rectangle (in kilometers per hour).", "syntax": "setTrafficSpeed [<scalar>,xMin,xMax,zMin,zMax]"}, "BIS_fnc_dbClassIndex": {"example": "[5273702, 560561, 10] call BIS_fnc_posUTMToDeg;", "description": "Returns indexes leading to given class. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - List of index values"}, "BIS_fnc_functionsDebug": {"example": "", "description": ""}, "BIS_fnc_shakeGauges": {"example": "", "description": "Shake analogue gauges Parameter(s): _this select 0 (Optional): NUMBER - shake limit (max distance gauges can move on screen from original position) _this select 1 (Optional): NUMBER - number of repeats _this select 2 (Optional): NUMBER - delay between every position change _this select 3 (Optional): ARRAY - list of IDCs Returns: NOTHING"}, "BIS_fnc_genericSentenceInit": {"example": "", "description": ""}, "BIS_fnc_keypointsExport": {"example": "", "description": ""}, "BIS_fnc_wpRestricted": {"example": "[player, objNull, 0, [250, -1, 150, -1], 30, {HSim_RestrictedFlight = false}, true] BIS_fnc_wpFormation;", "reviewLevel": 2, "docSyntax": "arguments: [limits, maxTime, failCode, visualize, warnCode]", "description": "RESTRICTED custom waypoint. Player must fly in given limits.", "syntax": "arguments: [limits,maxTime,failCode,visualize,warnCode]"}, "BIS_fnc_wpSlingLoadAttach": {"example": "[player, dude, 50, 10, {hintC \"You lost the cargo!\"}, 1000] spawn BIS_fnc_wpSlingLoadAttach;", "reviewLevel": 2, "docSyntax": "arguments: [posLimit,failCode,weight]", "description": "ATTACH SLINGLOAD custom waypoint. Load an object to rope.", "syntax": "arguments: [posLimit,failCode,weight]"}, "BIS_fnc_displayName": {"example": "_myDisplayName = [configFile >> \"CfgVehicles\" >> typeOf vehicle player] call BIS_fnc_displayName;", "reviewLevel": 2, "docSyntax": "[config] call BIS_fnc_displayName", "description": "Return given class displayName value. Return base class name if displayName not defined.", "syntax": "[config] call BIS_fnc_displayName"}, "BIS_fnc_dbValueCheck": {"example": "", "description": "Check if value exists Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if value exists"}, "radioChannelSetCallSign": {"example": "4 radioChannelSetCallSign \"%UNIT_NAME\";", "reviewLevel": 1, "docSyntax": "index radioChannelSetCallSign callSign", "description": "Set the custom radio channel's call sign. Available special parameters:", "syntax": "<scalar> radioChannelSetCallSign callSign"}, "BIS_fnc_radioSetChannel": {"example": "", "description": "Set a specific or random music channel. Parameter(s): _this select 0: channel (String) _this select 1: next (Bool) _this select 2: override (Bool) Returns: Bool"}, "BIS_fnc_displayColorGet": {"example": "[\"GUI\",\"BCG_RGB\"] call BIS_fnc_displayColorGet; Returns menu color", "reviewLevel": 2, "docSyntax": "[tag,variable] call BIS_fnc_displayColorGet;", "description": "Loads custom color settings from CfgUIDefault. If variables are not stored in profileNamespace yet, function will declare them.", "syntax": "[tag,variable] call BIS_fnc_displayColorGet;"}, "BIS_fnc_helicopterCanFly": {"example": "", "description": ""}, "BIS_fnc_wpFastRope": {"example": "[player, position dude, 50, 5, 15, 1] spawn BIS_fnc_wpFastRope;", "reviewLevel": 2, "docSyntax": "arguments: [limitHeight,limitSpeed,fastropeID]", "description": "FAST-ROPE custom waypoint. Let everybody in vehicles' cargo space rappel down on a rope.", "syntax": "arguments: [limitHeight,limitSpeed,fastropeID]"}, "BIS_fnc_ambientBoats": {"example": "", "description": ""}, "BIS_fnc_wpCheckpoint": {"example": "[player,position dude,10,2] spawn BIS_fnc_wpCheckpoint;", "reviewLevel": 2, "docSyntax": "arguments: [posLimit]", "description": "CHECKPOINT custom waypoint. Player has to reach waypoint position with certain precisoon (as opposed to normal Move waypoint, which became completed in around 500m).", "syntax": "arguments: [posLimit]"}, "saveProfileNamespace": {"example": "saveProfileNamespace;", "reviewLevel": 2, "docSyntax": "saveProfileNamespace", "description": "Saves the variables stored in profileNamespace to the persistent active user profile.", "syntax": "saveProfileNamespace"}, "BIS_fnc_displayLoading": {"example": "([_this,##ID##] call (uinamespace getvariable 'bis_fnc_displayLoading')", "reviewLevel": 2, "docSyntax": "[onLoad,id] call BIS_fnc_displayLoading;", "description": "Loading Screens init.", "syntax": "[onLoad,<scalar>] call BIS_fnc_displayLoading;"}, "BIS_fnc_GUIgridToProfile": {"example": "", "description": ""}, "batteryChargeRTD": {"example": "_charge = batteryChargeRTD (vehcle player);", "reviewLevel": 1, "docSyntax": "batteryChargeRTD helicopterRTD", "description": "Returns the current charge of a helicopter's batteries.", "syntax": "batteryChargeRTD helicopterRTD"}, "BIS_fnc_wpSteady": {"example": "[ player, position dude, nil, [15,1.3,30], 10, {hintC \"You failed\";}, {hint \"Watch out!\";}, {hint \"Good\";} ] spawn BIS_fnc_wpSteady;", "reviewLevel": 2, "docSyntax": "arguments: [limitArray,failLimit,failCode,warningCode,positiveCode]", "description": "FLY STEADY custom waypoint. Keep helicopter's pitch, bank, relative velocity a relative vector in given limits", "syntax": "arguments: [limitArray,failLimit,failCode,warningCode,positiveCode]"}, "BIS_fnc_titleText": {"example": "\"Stratis, 2035-07-14 0130<br />A dark night ahead\u00e2\u20ac\u00a6\" call BIS_fnc_titleText;", "reviewLevel": 1, "docSyntax": "message call BIS_fnc_titleText", "description": "Display TitleText with structured text", "syntax": "message call BIS_fnc_titleText"}, "profileNamespace": {"example": "_namespace = profileNamespace;", "reviewLevel": 2, "docSyntax": "profileNamespace", "description": "Returns the global namespace attached to the active user profile. Use setVariable and getVariable to save and load data to and from this Namespace. A variable can be deleted by setting its value to nil. By default the variables set in this namespace will exist while the game is running. In order to make variables save permanently, use saveProfileNamespace before the game is over. The variables are stored next to the user profile in a file named myUsername.vars.GAMENAME (e.g. in the My Documents\\Take On Helicopters folder).", "syntax": "profileNamespace"}, "enableAutoStartUpRTD": {"example": "myHelicopterRTD enableAutoStartUpRTD true;", "reviewLevel": 1, "docSyntax": "helicopterRTD enableAutoStartUpRTD enable", "description": "Toggle availability of the automated helicopter start-up and shutdown sequences.", "syntax": "helicopterRTD enableAutoStartUpRTD <bool>"}, "BIS_fnc_ambientBlacklistAdd": {"example": "", "description": "Add a new ambient blacklist trigger Parameter(s): _this select 0: OBJECT - trigger Returns: BOOL - true when added correctly"}, "BIS_fnc_keypointsExportFromKML": {"example": "", "description": "Imports and marks positions from KLM file. Parameter(s): _this: STRING - path to .kml file Returns: STRING - config output (also copied to clipboard)"}, "setHitPointDamage": {"example": "vehicle player setHitPointDamage [\"hitEngine2\", 1.0];", "reviewLevel": 2, "docSyntax": "vehicle setHitPointDamage [hitPointName, damage, useEffects]", "description": "Set the current level of damage for a specific Hit Point (specified by its config class).", "syntax": "<objVehicle> setHitPointDamage [hitPointName,<scalar>,useEffects]"}, "setBrakesRTD": {"example": "myHelicopterRTD setBrakesRTD [1, 3];", "reviewLevel": 1, "docSyntax": "helicopterRTD setBrakesRTD [value, wheelIndex]", "description": "Enable landing gear wheel brakes for a helicopter.", "syntax": "helicopterRTD setBrakesRTD [<scalar>,wheelIndex]"}, "BIS_fnc_displayResize": {"example": "", "description": ""}, "setPiPEffect": {"example": "\"rendersurface\" setPiPEffect [0];", "reviewLevel": 2, "docSyntax": "name setPiPEffect [effect, optionalParam1, ..., optionalParamN]", "description": "Sets Render Target's visual effect (Picture-in-Picture).", "syntax": "<string> setPiPEffect [effect,optionalParam1,...,optionalParamN]"}, "setBatteryRTD": {"example": "(vehicle player) setBatteryRTD false;", "reviewLevel": 1, "docSyntax": "helicopterRTD setBatteryRTD enable", "description": "Toggle a helicopter's electrical systems on and off.", "syntax": "helicopterRTD setBatteryRTD <bool>"}, "setTrafficDistance": {"example": "setTrafficDistance 1000;", "reviewLevel": 2, "docSyntax": "setTrafficDistance distance", "description": "Set maximum ambient traffic draw distance (in 2D).", "syntax": "setTrafficDistance <scalar>"}, "BIS_fnc_kbSkip": {"example": "", "description": "Skip conversation. Currently played sentence will be finished Parameter(s): _this select 0: STRING - Topic name _this select 1 (Optional): STRING - container name (default: current mission ID) Returns: NUMBER"}, "ropeDestroy": {"example": "ropeDestroy myRope;", "reviewLevel": 1, "docSyntax": "ropeDestroy rope", "description": "Destroy a rope.", "syntax": "ropeDestroy rope"}, "BIS_fnc_wpWinchLoad": {"example": "[player, dude, 50, 5, 1, rescuer, {hintC \"Rescuer died!\"}, {hintC \"Dude saved\"}] spawn BIS_fnc_wpWinchLoad;", "reviewLevel": 2, "docSyntax": "arguments: [limitHeight,winchID,crewman,failCode,loadCode]", "description": "WINCH LOAD custom waypoint. Load a group into helicopter cargo using winch.", "syntax": "arguments: [limitHeight,winchID,crewman,failCode,loadCode]"}, "BIS_fnc_markerPath": {"example": "[\"markerStart\", \"markerEnd\"] call BIS_fnc_markerPath;", "reviewLevel": 2, "docSyntax": "[start, end, spacing, params] call BIS_fnc_markerPath", "description": "Creater marker(s) between two points.", "syntax": "[start,end,spacing,<any>] call BIS_fnc_markerPath"}, "BIS_fnc_helicopterDamage": {"example": "myHelicopter addEventHandler [\"Dammaged\", { _this call BIS_fnc_helicopterDamage; }];", "reviewLevel": 2, "docSyntax": "[helicopter, selection, damage] call BIS_fnc_helicopterDamage", "description": "Handling EH-based helicopter damage, event handler in question being Dammagedsic.", "syntax": "[helicopter,selection,<scalar>] call BIS_fnc_helicopterDamage"}, "BIS_fnc_dbSymbolValue": {"example": "", "description": ""}, "BIS_fnc_GUInewsfeed": {"example": "[_display] call BIS_fnc_GUInewsfeed;", "reviewLevel": 2, "docSyntax": "[display] call BIS_fnc_GUInewsfeed", "description": "Load newsfeed.", "syntax": "[<uiDisplay>] call BIS_fnc_GUInewsfeed"}, "BIS_fnc_PIP": {"example": "[\"rendertarget0\",[[heli1,heli1 selectionposition \"slingload0\"],cargo1],heli1,false] call BIS_fnc_PIP;", "reviewLevel": 2, "docSyntax": "[renderTarget, cameraParams, (vehicle, replace)] call bis_fnc_PIP;", "description": "Displays Picture in Picture.", "syntax": "[renderTarget,cameraParams,(<objVehicle>,replace)] call bis_fnc_PIP;"}, "BIS_fnc_helicopterType": {"example": "", "reviewLevel": 2, "docSyntax": "[object] call BIS_fnc_helicopterType", "description": "Returns helicopter type.", "syntax": "[<object>] call BIS_fnc_helicopterType"}, "getHitPointDamage": {"example": "(vehicle player) getHitPointDamage \"hitEngine\";", "reviewLevel": 1, "docSyntax": "vehicle getHitPointDamage hitPointName", "description": "Return current level of damage for a specific Hit Point (specified by its config class). If you need to get damage of a selection instead of hit point, use getHit.", "syntax": "<objVehicle> getHitPointDamage hitPointName"}, "BIS_fnc_ctrlTextHeight": {"example": "[_ctrl] call BIS_fnc_ctrlTextHeight;", "reviewLevel": 2, "docSyntax": "[control] call BIS_fnc_ctrlTextHeight", "description": "Resize control according to it's text.", "syntax": "[<uiControl>] call BIS_fnc_ctrlTextHeight"}, "BIS_fnc_GUIeditor": {"example": "", "description": ""}, "setEngineRPMRTD": {"example": "(vehicle player) setEngineRPMRTD [6500, -1];", "reviewLevel": 1, "docSyntax": "helicopterRTD setEngineRPMRTD [value, engineIndex]", "description": "Instantly set a helicopter's engine RPMs to the given value.", "syntax": "helicopterRTD setEngineRPMRTD [<scalar>,engineIndex]"}, "BIS_fnc_dbConfigPath": {"example": "", "description": ""}, "BIS_fnc_dbClassList": {"example": "", "description": "Returns all classes withing class. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - List of classnames"}, "BIS_fnc_MPexec": {"example": "", "reviewLevel": 2, "docSyntax": "[packet, value] call BIS_fnc_MPexec", "description": "Execute received remote execution.", "syntax": "[packet,<scalar>] call BIS_fnc_MPexec"}, "BIS_fnc_assignPlayerRole": {"example": "[myVehicle, \"turret\", [0, 1]] call BIS_fnc_assignPlayerRole;", "reviewLevel": 2, "docSyntax": "[vehicle, role, path] call BIS_fnc_assignPlayerRole", "description": "Ensures the player can only get in the specific vehicle role.", "syntax": "[<objVehicle>,role,path] call BIS_fnc_assignPlayerRole"}, "BIS_fnc_camFollow": {"example": "_camera = \"camera\" camCreate ((getPos player) vectorAdd [0,0,3]); [_camera, player, -2] call BIS_fnc_camFollow;", "reviewLevel": 2, "docSyntax": "[camera, target, refreshTime] call BIS_fnc_camFollow", "description": "Refresh a camera Field of View according to its distance with the target.", "syntax": "[<objCamera>,<object>,refreshTime] call BIS_fnc_camFollow"}, "radioChannelSetLabel": {"example": "5 radioChannelSetLabel \"Q-dance Radio\";", "reviewLevel": 1, "docSyntax": "index radioChannelSetLabel label", "description": "Set the custom radio channel's label.", "syntax": "<scalar> radioChannelSetLabel label"}, "setTrafficDensity": {"example": "setTrafficDensity [40, 31000, 32000, 30000, 32000];", "reviewLevel": 2, "docSyntax": "setTrafficDensity [density, xMin, xMax, zMin, zMax]", "description": "Set the density of ambient cars in a rectangle (in cars per kilometer).", "syntax": "setTrafficDensity [density,xMin,xMax,zMin,zMax]"}, "BIS_fnc_dbImportConfig": {"example": "", "description": "Copy config classes and adds them to Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path _this select 2: CONFIG - Config path Returns: BOOLEAN - True if copied"}, "setRotorBrakeRTD": {"example": "myHelicopterRTD setRotorBrakeRTD 1;", "reviewLevel": 1, "docSyntax": "helicopterRTD setRotorBrakeRTD enable", "description": "Toggle a helicopter's rotor brake on or off.", "syntax": "helicopterRTD setRotorBrakeRTD <bool>"}, "BIS_fnc_noFlyZone": {"example": "", "description": ""}, "BIS_fnc_kbMenu": {"example": "", "description": "Opens conversation menu. Script terminates itself when menu selection is finished. Parameter(s): _this select 0: ARRAY or STRING - List of responses (of type ARRAY) or Menu name Responses are in format: _response select 0: STRING or ANY - Display name when STRING, otherwise used as default option when menu is closed without selecting anything. _response select 1: STRING - expression ARRAY - BIS_fnc_kbTell params Returns: NUMBER - ID of select option"}, "BIS_fnc_ambientBlacklist": {"example": "", "description": "Check if area is blacklisted. Blacklist triggers are to be named 'bis_ambientBlacklist_#', where # is number from 0 to 99. Parameter(s): _this select 0: BIS_fnc_position compatible position - check if position is blacklisted NUMBER - initialize blacklisted areas Returns: BOOL - true when in blacklisted area"}, "ropeCreate": {"example": "myRope = ropeCreate [vehicle player, \"slingload0\", myCargo, [0, 0, 0], 10]; //A3 example", "reviewLevel": 2, "docSyntax": "ropeCreate [fromObject, fromPoint, toObject, toPoint, segments, length]", "description": "Create a rope (PhysX rope in Arma 3).", "syntax": "ropeCreate [fromObject,fromPoint,toObject,toPoint,segments,length]"}, "BIS_fnc_GCinit": {"example": "", "description": ""}, "BIS_fnc_singleMissionName": {"example": "_missionName = call BIS_fnc_singleMissionName;", "reviewLevel": 2, "docSyntax": "call BIS_fnc_singleMissionName", "description": "Returns name of currently selected single mission.", "syntax": "call BIS_fnc_singleMissionName"}, "BIS_fnc_wpSlingLoadDrop": {"example": "[player, position dude, 50] spawn BIS_fnc_wpSlingLoadDrop;", "reviewLevel": 1, "docSyntax": "arguments: none", "description": "DROP SLINGLOAD custom waypoint. Drop an object which was previously loaded using BIS_fnc_wpSlingLoadAttach", "syntax": "arguments: none"}, "BIS_fnc_dbClassReturn": {"example": "", "description": "Returns content of given class. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - Class content"}, "BIS_fnc_HUDLimits": {"example": "[[0,0,0], [1, 0, 50], [0,0,0]] call BIS_fnc_HUDLimits; // limits altitude on HUD to 50m max", "reviewLevel": 2, "docSyntax": "[speedLimit, altLimit, dirLimit] call BIS_fnc_HUDLimits", "description": "Set helicopter advanced flight model HUD limits and prevents overwriting existing values. See also setHUDMovementLevels.", "syntax": "[speedLimit,altLimit,dirLimit] call BIS_fnc_HUDLimits"}, "enableCoPilot": {"example": "myHelicopter enableCoPilot true;", "reviewLevel": 1, "docSyntax": "helicopter enableCoPilot enable", "description": "Toggles availability of the actions related to copilots (taking over controls, suspending controls, etc.).", "syntax": "helicopter enableCoPilot <bool>"}, "BIS_fnc_kbIsSpeaking": {"example": "player call BIS_fnc_kbIsSpeaking;", "reviewLevel": 2, "docSyntax": "unit call BIS_fnc_kbIsSpeaking", "description": "Check if speaker is locked for different conversation.", "syntax": "<objUnit> call BIS_fnc_kbIsSpeaking"}, "BIS_fnc_animType": {"example": "animType = [\"AmovPsitMstpSrasWrflDnon\"] call BIS_fnc_animType;", "reviewLevel": 1, "docSyntax": "param call BIS_fnc_animType;", "description": "Function that returns a categorized array using a single string with the animation name.", "syntax": "param call BIS_fnc_animType;"}, "BIS_fnc_GUIbackground": {"example": "[1,1,1,1] call BIS_fnc_GUIbackground;", "reviewLevel": 2, "docSyntax": "[position] call BIS_fnc_GUIbackground", "description": "Creates GUI background.", "syntax": "[position] call BIS_fnc_GUIbackground"}, "BIS_fnc_diaryHints": {"example": "", "description": "#define DIARY_CATEGORY \"BIS_fnc_diaryHints\""}, "BIS_fnc_shutdown": {"example": "call BIS_fnc_shutdown", "reviewLevel": 2, "docSyntax": "call BIS_fnc_shutdown", "description": "Shut downs the game.", "syntax": "call BIS_fnc_shutdown"}, "BIS_fnc_overviewTerrain": {"example": "", "description": ""}, "BIS_fnc_singleMissionKeys": {"example": "_activatedKeys = call BIS_fnc_singleMissionKeys;", "reviewLevel": 2, "docSyntax": "call BIS_fnc_singleMissionKeys", "description": "Activate mission related keys.", "syntax": "call BIS_fnc_singleMissionKeys"}, "setAPURTD": {"example": "(vehicle player) setAPURTD [1, 15];", "reviewLevel": 1, "docSyntax": "helicopterRTD setAPURTD [value, time]", "description": "Let the Auxiliary Power Unit (APU) reach a desired state over the given period of time.", "syntax": "helicopterRTD setAPURTD [<scalar>,<scalar>]"}, "BIS_fnc_wpLand": {"example": "[ group player ], [0,0,0], BIS_vehicle ] spawn BIS_fnc_wpLand;", "reviewLevel": 2, "docSyntax": "[group, position, target]] spawn BIS_fnc_wpLand", "description": "Let group members land at the waypoint position.", "syntax": "[<objGroup>,position,<object>]] spawn BIS_fnc_wpLand"}, "BIS_fnc_MP (Take On Helicopters)": {"example": "[\"Imma spamming your log!\",\"BIS_fnc_log\"] call BIS_fnc_MP; Logs a message for every player who's currently joined.", "reviewLevel": 2, "docSyntax": "[params, functionName, target, isSpawn, isPersistent] call BIS_fnc_MP;", "description": "Send function for remote execution (and executes locally if conditions are met).", "syntax": "[<any>,functionName,<object>,isSpawn,isPersistent] call BIS_fnc_MP;"}, "BIS_fnc_helicopterSeatMove": {"example": "[instructor, \"thumbUp\"] call BIS_fnc_helicopterSeatMove;", "reviewLevel": 2, "docSyntax": "[unit, gesture] call BIS_fnc_helicopterSeatMove", "description": "Plays cockpit animation. Take On Helicopters only.", "syntax": "[<objUnit>,gesture] call BIS_fnc_helicopterSeatMove"}, "BIS_fnc_numberDigits": {"example": "12345678 call BIS_fnc_numberDigits; // returns [1,2,3,4,5,6,7,8]", "reviewLevel": 2, "docSyntax": "number call BIS_fnc_numberDigits", "description": "Break number into array of digits.", "syntax": "<scalar> call BIS_fnc_numberDigits"}, "systemOfUnits": {"example": "_system = systemOfUnits;", "reviewLevel": 2, "docSyntax": "systemOfUnits", "description": "Returns the currently selected system of units.", "syntax": "systemOfUnits"}, "ropeSetCargoMass": {"example": "ropeSetCargoMass [myRope, myCargo, 1138];", "reviewLevel": 2, "docSyntax": "ropeSetCargoMass [rope, cargo, mass];", "description": "Set the simulated mass of an object attached to a rope.", "syntax": "ropeSetCargoMass [rope,<objVehicle>,mass];"}, "BIS_fnc_onEnd": {"example": "_onEndIndex = { player addRating 10000; } call BIS_fnc_onEnd;", "reviewLevel": 1, "docSyntax": "argument call BIS_fnc_onEnd", "description": "Register code to be executed after mission end.", "syntax": "argument call BIS_fnc_onEnd"}, "BIS_fnc_wpFormation": {"example": "[player, dude, 80, {HSim_keptFormation = false}, -60, [80,160], 20, true] call BIS_fnc_wpFormation;", "reviewLevel": 2, "docSyntax": "[failCode, maxTime, relPos, diffAlt, visualize] call BIS_fnc_wpFormation;", "description": "Player must stay within certain radius and angle towards followed vehicle.", "syntax": "[failCode,maxTime,relPos,diffAlt,visualize] call BIS_fnc_wpFormation;"}, "BIS_fnc_dbisClass": {"example": "", "description": "Checks if string is class definition. Parameter(s): _this select 0: STRING Returns: BOOLEAN"}, "BIS_fnc_spawnVehicle": {"example": "[getPos mySpawnPos, 180, \"BMP3\", EAST] call bis_fnc_spawnvehicle", "reviewLevel": 1, "docSyntax": "[position,direction,type,side or group] call BIS_fnc_spawnVehicle", "description": "Function to spawn a certain vehicle type with all crew (including turrets). The vehicle can either become part of an existing group or create a new group.", "syntax": "[position,direction,type,<objSide> or <objGroup>] call BIS_fnc_spawnVehicle"}, "HUDMovementLevels": {"example": "HUDMovementLevels;//[0,0,0,0,0,0,[0,0,0]]", "reviewLevel": 2, "docSyntax": "HUDMovementLevels", "description": "Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]", "syntax": "HUDMovementLevels"}, "BIS_fnc_diaryMaps": {"example": "", "description": "#define DIARY_CATEGORY \"BIS_fnc_diaryMaps\""}, "ropeDetach": {"example": "vehicle player ropeDetach myRope;", "reviewLevel": 2, "docSyntax": "vehicle ropeDetach rope;", "description": "Detach a rope from an object.", "syntax": "<objVehicle> ropeDetach rope;"}, "BIS_fnc_dbValueList": {"example": "", "description": "Returns all values withing class. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - List of value names"}, "BIS_fnc_posDegToUTM": {"example": "_utmZone = [47.63959,-122.127249] call BIS_fnc_posDegToUTM;", "reviewLevel": 2, "docSyntax": "[longitude, latitude, zone] call BIS_fnc_posDegToUTM", "description": "Generate a UTM Zone, Easting and Northing from lat and long fields. It uses NAD83 constants.", "syntax": "[longitude,latitude,zone] call BIS_fnc_posDegToUTM"}, "BIS_fnc_wpHover": {"example": "[player, position dude, 10, 10, false, -1, true] spawn BIS_fnc_wpLand;", "reviewLevel": 2, "docSyntax": "arguments: [minTime, reset, altDiff, visualize]", "description": "HOVER custom waypoint. Hover on specific spot.", "syntax": "arguments: [minTime,reset,altDiff,visualize]"}, "BIS_fnc_dbPrint": {"example": "", "description": "Copy Scripted Database content into clipboard for evaluation. Text will be formatted as config. Parameter(s): _this select 0: ARRAY - Database array _this select 1: NUMBER (optional) - Number of tabs Returns: STRING - printed text"}, "BIS_fnc_kbCreateDummy": {"example": "", "description": ""}, "BIS_fnc_getIDC": {"example": "_IDC = [ [configFile]] >> \"Display3DENPlace\",\"ButtonCancel\"] call BIS_fnc_getIDC;", "reviewLevel": 2, "docSyntax": "[config,ctrlName] call BIS_fnc_getIDC", "description": "Returns IDD of given display.", "syntax": "[config,ctrlName] call BIS_fnc_getIDC"}, "BIS_fnc_helicopterGetHitpoints": {"example": "[BIS_helicopter] call BIS_fnc_helicopterGetHitpoints;", "reviewLevel": 2, "docSyntax": "object call BIS_fnc_helicopterGetHitpoints", "description": "Return all hitpoints for a helicopter.", "syntax": "<object> call BIS_fnc_helicopterGetHitpoints"}, "radioChannelRemove": {"example": "3 radioChannelRemove [blufor_unit_1, blufor_unit_2];", "reviewLevel": 1, "docSyntax": "index radioChannelRemove units", "description": "Remove the units from the custom radio channel.", "syntax": "<scalar> radioChannelRemove units"}, "BIS_fnc_dbClassId": {"example": "", "description": "Converts string to class definition. Parameter(s): _this: STRING (converts to) or _this select 0: STRING (converts from) Returns: STRING"}, "BIS_fnc_noFlyZonesCreate": {"example": "", "description": ""}, "BIS_fnc_ambientHelicopters": {"example": "", "description": ""}, "BIS_fnc_displayControls": {"example": "", "description": "Return all controls of given display class Parameter(s): _this select 0: CONFIG - display config _this select 1: NUMBER or CONFIG or STRING - type of returned values (control configs, their names or IDCs; default: configfile)) _this select 2: BOOL - true to search content of controls group (default: true) Returns: ARRAY"}, "BIS_fnc_dbClassCheck": {"example": "", "description": "Check if class exists Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if class exists"}, "BIS_fnc_singleMissionConfig": {"example": "_config = call BIS_fnc_singleMissionConfig;", "reviewLevel": 2, "docSyntax": "call BIS_fnc_singleMissionConfig", "description": "Returns config of current single mission.", "syntax": "call BIS_fnc_singleMissionConfig"}, "BIS_fnc_guiMessage": {"example": "[\"Hello World\"] spawn BIS_fnc_guiMessage;", "reviewLevel": 2, "docSyntax": "[message, (header, position, isCancel, parent, pause)] call BIS_fnc_guiMessage;", "description": "Shows customized native message box to user", "syntax": "[message,(header,position,isCancel,parent,pause)] call BIS_fnc_guiMessage;"}, "BIS_fnc_kbSentence": {"example": "", "description": ""}, "BIS_fnc_dbImportXML": {"example": "_xmlDB = \"myFile.xml\" call BIS_fnc_dbImportXML;", "reviewLevel": 1, "docSyntax": "xmlFile call BIS_fnc_dbImportXML", "description": "Import XML file into Scripted Database.", "syntax": "xmlFile call BIS_fnc_dbImportXML"}, "BIS_fnc_wpAngle": {"example": "[ player, position dude, 250, 60 1, 45 {alive dude}, \"Spotted:\u00c2\u00a0%1%2\" ] spawn BIS_fnc_wpAngle;", "reviewLevel": 2, "docSyntax": "arguments: [circleLimit, circleBorder, circleDir, customCond, hint]", "description": "CIRCLE custom waypoint. Keep helicopter rotated in given vector toward target.", "syntax": "arguments: [circleLimit,circleBorder,circleDir,customCond,hint]"}, "BIS_fnc_markerCreate": {"example": "", "description": "Creates marker with given params. Reads config to recognize settings - use for quick debugging only. Parameter(s): _this: ARRAY of values: STRING - one of type, color, brush or shape. If no corresponding class is found, value is used as marker text ARRAY [STRING(,ANY,ANY,...)] - marker name with optional arguments [NUMBER] - marker size [a,a] [NUMBER,NUMBER] - marker size [x,y] [NUMBER,NUMBER,NUMBER] - marker position [x,y,z] OBJECT - object's position NUMBER - marker dir BOOL - marker locality (true if global) Returns: STRING - created marker"}, "BIS_fnc_dbisValue": {"example": "", "description": "Checks if string is value definition. Parameter(s): _this select 0: STRING Returns: BOOLEAN"}, "BIS_fnc_selectRandom": {"example": "_bestShooter = [_rento, _ben, _trit] call BIS_fnc_selectRandom; //returns one of the variables _bestSeries = [[\"halo1\",\"halo2\"],[\"ofp\",\"arma2\"]] call BIS_fnc_selectRandom; //returns one of the arrays", "reviewLevel": 2, "docSyntax": "var1 call BIS_fnc_selectRandom", "description": "Selects one of the arguments at random. There is now a dedicated script command selectRandom, use that instead.", "syntax": "var1 call BIS_fnc_selectRandom"}, "BIS_fnc_nearestHelipad": {"example": "", "description": ""}, "BIS_fnc_dbValueSet": {"example": "", "description": "Add value to Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path _this select 2: ARRAY - Value Returns: BOOLEAN - True if value was added"}, "BIS_fnc_wpSlingLoadDetach": {"example": "[player, position dude, 50, 10, [42, 52]] spawn BIS_fnc_wpSlingLoadDetach;", "reviewLevel": 2, "docSyntax": "arguments: [posLimit,limitDir]", "description": "DETACH SLINGLOAD custom waypoint. Unload an object which was previously loaded using BIS_fnc_wpSlingLoadAttach", "syntax": "arguments: [posLimit,limitDir]"}, "BIS_fnc_setHeight": {"example": "// will place player's vehicle on \"myHeightMarker\", 50m above terrain [vehicle player, 50, getMarkerPos \"myHeightMarker\", \"ATL\"]]] call BIS_fnc_setHeight;", "reviewLevel": 2, "docSyntax": "[target, height, position, mode] call BIS_fnc_setHeight", "description": "Set an object height.", "syntax": "[<object>,height,position,mode] call BIS_fnc_setHeight"}, "BIS_fnc_dbValueReturn": {"example": "", "description": "Returns content of given value. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - Value content"}, "BIS_fnc_overviewAuthor": {"example": "hint format [\"%1,\u00c2\u00a0%2\", briefingName, call BIS_fnc_overviewAuthor];", "reviewLevel": 2, "docSyntax": "[config, control] call BIS_fnc_overviewAuthor", "description": "Returns the mission author's name preceded by , e.g \"by Username\". See Description.ext/author.", "syntax": "[config,<uiControl>] call BIS_fnc_overviewAuthor"}, "BIS_fnc_displayClouds": {"example": "", "description": "#define DISPLAY (uinamespace getvariable 'hsim_RscClouds') #define CONTROL (DISPLAY displayctrl _idc) #define RSC_LAYER 759"}, "BIS_fnc_posDegToWorld": {"example": "[47.63959,-122.127249] call BIS_fnc_posDegToWorld;", "reviewLevel": 2, "docSyntax": "[longitude, latitude, world] call BIS_fnc_posDegToWorld", "description": "Convert latitude/longtitude coordinates into game world position.", "syntax": "[longitude,latitude,world] call BIS_fnc_posDegToWorld"}, "BIS_fnc_paramIn": {"example": "_array = [_this,0,[],[[]]] call BIS_fnc_param; _item = [_array,0,true,[true]] call BIS_fnc_paramIn;", "reviewLevel": 1, "docSyntax": "See BIS_fnc_param", "description": "See BIS_fnc_param. Overloading default values is disabled in this variant. It's intended to be used where _this is not used as an input param.", "syntax": "See BIS_fnc_param"}, "BIS_fnc_saveGame": {"example": "[ [unit_1,unit_2] ] call BIS_fnc_saveGame;", "reviewLevel": 2, "docSyntax": "[objects] call BIS_fnc_saveGame", "description": "Evaluates the current battlefield situation and saves the game when appropriate.", "syntax": "[objects] call BIS_fnc_saveGame"}, "BIS_fnc_genericSentence": {"example": "[\"FeedbackFlightNegativeHeightTooHigh\"] call bis_fnc_genericSentence;", "reviewLevel": 2, "docSyntax": "[class,(speaker,delay,canRepeat)] call BIS_fnc_genericSentence;", "description": "Play generic sentence with probablity set by bis_genericSentenceMode variable (0.5 = 50%, 1 = 100%)", "syntax": "[class,(speaker,<scalar>,canRepeat)] call BIS_fnc_genericSentence;"}, "BIS_fnc_credits": {"example": "0 = [] spawn BIS_fnc_credits;", "reviewLevel": 2, "docSyntax": "[] spawn BIS_fnc_credits;", "description": "Opens credits, identical to those found in main menu (Arma 3). Present in Arma 3.", "syntax": "[] spawn BIS_fnc_credits;"}, "setCustomWeightRTD": {"example": "myHelicopterRTD setCustomWeightRTD 120;", "reviewLevel": 1, "docSyntax": "helicopterRTD setCustomWeightRTD weight", "description": "Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model.", "syntax": "helicopterRTD setCustomWeightRTD weight"}, "BIS_fnc_functionPath": {"example": "_path = \"BIS_fnc_wpLand\" call BIS_fnc_functionPath;", "reviewLevel": 1, "docSyntax": "functionName call BIS_fnc_functionPath;", "description": "Returns path to function file.", "syntax": "functionName call BIS_fnc_functionPath;"}, "BIS_fnc_posDegtoUTM": {"example": "_utmZone = [47.63959,-122.127249] call BIS_fnc_posDegToUTM;", "reviewLevel": 2, "docSyntax": "[longitude, latitude, zone] call BIS_fnc_posDegToUTM", "description": "Generate a UTM Zone, Easting and Northing from lat and long fields. It uses NAD83 constants.", "syntax": "[longitude,latitude,zone] call BIS_fnc_posDegToUTM"}, "BIS_fnc_dbValueId": {"example": "", "description": "Converts string to value definition."}, "BIS_fnc_radioSetPlaylist": {"example": "call BIS_fnc_radioSetPlaylist;", "reviewLevel": 2, "docSyntax": "call BIS_fnc_radioSetPlaylist", "description": "Set a random music playlist for the current set channel (default \"Rock\"). Musics with \"genre\" set in CfgMusic are selected and shuffled.", "syntax": "call BIS_fnc_radioSetPlaylist"}, "BIS_fnc_kbCanSpeak": {"example": "_canPlayerTalk = player call BIS_fnc_kbCanSpeak;", "reviewLevel": 2, "docSyntax": "unit call BIS_fnc_kbCanSpeak", "description": "Check if person is not locked by some conversation.", "syntax": "<objUnit> call BIS_fnc_kbCanSpeak"}, "BIS_fnc_KMLimport": {"example": "_data = \"subDir\\myFile.kml\" call BIS_fnc_KMLimport;", "reviewLevel": 1, "docSyntax": "filePath call BIS_fnc_KMLimport", "description": "Read positions from a KML file.", "syntax": "filePath call BIS_fnc_KMLimport"}, "BIS_fnc_help": {"example": "[] call bis_fnc_help", "reviewLevel": 2, "docSyntax": "[] call BIS_fnc_help", "description": "Shows Function Library viewer, which contains list of all available functions, both official and unofficial.", "syntax": "[] call BIS_fnc_help"}, "BIS_fnc_counter": {"example": "", "description": "Modify the given counter (create it if doesn't exist) Parameter(s): _this select 0: STRING - variable name of counter ARRAY in format [variableName,nameSpace], where nameSpace can be object, group or missionNameSpace/uiNameSpace _this select 1 (Optional): NUMBER - added value _this select 2 (Optional): NUMBER - modulo value Returns: NUMBER - counter's value"}, "numberOfEnginesRTD": {"example": "_engineCount = numberOfEnginesRTD (vehicle player);", "reviewLevel": 1, "docSyntax": "numberOfEnginesRTD helicopterRTD", "description": "Returns the number of engines a helicopter has.", "syntax": "numberOfEnginesRTD helicopterRTD"}, "BIS_fnc_noFlyZonesExport": {"example": "", "description": ""}, "BIS_fnc_randomPosTrigger": {"example": "marker1 call BIS_fnc_randomPosTrigger;", "reviewLevel": 1, "docSyntax": "param call BIS_fnc_randomPosTrigger", "description": "Selects random position within trigger, marker, location area or area defined by array", "syntax": "param call BIS_fnc_randomPosTrigger"}, "BIS_fnc_dbValueIndex": {"example": "", "description": "Returns indexes leading to given value. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - List of index values"}, "enableTraffic": {"example": "enableTraffic true;", "reviewLevel": 2, "docSyntax": "enableTraffic enable", "description": "Enable ambient traffic.", "syntax": "enableTraffic <bool>"}, "BIS_fnc_radioSetTrack": {"example": "", "description": "Set a specific or random music track. Parameter(s): _this select 0: track (String) _this select 1: override (Bool) _this select 2: Bool (first track? -> start randomly within the track) Returns: Array (duration (s): Scalar, start time (s): Scalar)"}, "BIS_fnc_displayColorSet": {"example": "[configFile >> (GUI_classes select _foreachindex),_x] call bis_fnc_displayColorSet;", "reviewLevel": 2, "docSyntax": "[displayClass,display,commitTime,code] call BIS_fnc_displayColorSet;", "description": "Applies custom color settings to given Display. Display must be already using color macros, function will just refresh the values according to current color settings.", "syntax": "[displayClass,<uiDisplay>,commitTime,<code>] call BIS_fnc_displayColorSet;"}, "radioChannelAdd": {"example": "2 radioChannelAdd [player, unit1];", "reviewLevel": 1, "docSyntax": "index radioChannelAdd units", "description": "Add the units to the custom radio channel.", "syntax": "<scalar> radioChannelAdd units"}, "BIS_fnc_dbClassSet": {"example": "", "description": "Add class to Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if class was added"}, "BIS_fnc_markerParams": {"example": "_params = \"marker_1\" call BIS_fnc_markerParams;", "reviewLevel": 1, "docSyntax": "varName call BIS_fnc_markerParams", "description": "Returns marker params in format compatible with BIS_fnc_markerCreate.", "syntax": "varName call BIS_fnc_markerParams"}, "BIS_fnc_spawnGroup": {"example": "Spawn five random EAST units at aPos: [ getPos aPos, EAST, 5] call BIS_fnc_spawnGroup", "reviewLevel": 1, "docSyntax": "[position, side, character details, relative positions, list of ranks, skill range, ammo count range, randomization controls, azimuth] call BIS_fnc_spawnGroup", "description": "Function which handles the spawning of a dynamic group of characters. The composition of the group can be passed to the function. Alternatively a number can be passed and the function will spawn that amount of characters with a random type. A side's Center must have been created before a group may be spawned. Either by using createCenter or an editor placed (0% Probability of Presence is fine) unit of the appropriate side.", "syntax": "[position,<objSide>,character details,relative positions,list of ranks,skill range,ammo count range,randomization controls,azimuth] call BIS_fnc_spawnGroup"}, "BIS_fnc_overviewDifficulty": {"example": "", "description": ""}, "BIS_fnc_moveIn": {"example": "[myCar, player, \"cargo\"] [call]] BIS_fnc_moveIn;", "reviewLevel": 2, "docSyntax": "[vehicle, unit, role] call BIS_fnc_moveIn", "description": "Moves a unit into vehicle. Compatible with assignedVehicleRole output.", "syntax": "[<objVehicle>,<objUnit>,role] call BIS_fnc_moveIn"}, "BIS_fnc_kbTell": {"example": "[\"01_Wave\", \"A_in\", nil, \"SIDE\", nil, nil, 1, false] spawn BIS_fnc_kbTell;", "reviewLevel": 2, "docSyntax": "[topic, container, section, radioMode, code, speakers, soundVolume, radioProtocol] spawn BIS_fnc_kbTell", "description": "Play given sentence/conversation. Script terminates itself when conversation is finished.", "syntax": "[topic,container,section,radioMode,<code>,speakers,soundVolume,radioProtocol] spawn BIS_fnc_kbTell"}, "collectiveRTD": {"example": "_collective = collectiveRTD (vehicle player);", "reviewLevel": 1, "docSyntax": "collectiveRTD helicopterRTD", "description": "Returns the current position of a helicopter's collective pitch control.", "syntax": "collectiveRTD helicopterRTD"}, "BIS_fnc_wpTimed": {"example": "[player,position dude,100,{hintC \"You failed!\"},42,true] spawn BIS_fnc_wpTimed;", "reviewLevel": 2, "docSyntax": "arguments: [failCode,timeLimit,showHint]", "description": "COUNTDOWN custom waypoint. Player has to reach waypoint area before time runs out.", "syntax": "arguments: [failCode,timeLimit,showHint]"}, "BIS_fnc_posUTMToDeg": {"example": "", "reviewLevel": 2, "docSyntax": "[easting, northing, zone, hemisphere] call BIS_fnc_posUTMToDeg", "description": "Generate Lat and Long fields from UTM Zone, Easting and Northing. It uses NAD83 constants.", "syntax": "[easting,northing,zone,hemisphere] call BIS_fnc_posUTMToDeg"}, "BIS_fnc_dbSymbolClass": {"example": "", "description": ""}, "BIS_fnc_GUIgrid": {"example": "", "description": "/* Author: Karel Moricky Description: Returns grid params and stores it into uiNameSpace Parameter(s): _this select 0: STRING - category name _this select 1: STRING - grid name Returns: ARRAY - format [[x,y,w,h],gridW,gridH]"}, "BIS_fnc_dbClassRemove": {"example": "", "description": "Remove class from Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if class was removed"}, "BIS_fnc_halt": {"example": "[\"You are now supposed to be\u00c2\u00a0%1\",rank player] call bis_fnc_halt;", "reviewLevel": 2, "docSyntax": "[param1,param2,...,param10] call bis_fnc_halt;", "description": "Halts current function and all it's parents and logs an error message.", "syntax": "[param1,param2,...,param10] call bis_fnc_halt;"}, "BIS_fnc_onLoad": {"example": "_codeIndex = { hint \"Welcome back!\"; } call BIS_fnc_onLoad;", "reviewLevel": 1, "docSyntax": "parameter call BIS_fnc_onLoad", "description": "Register code to be executed after a mission load (from a save, for example).", "syntax": "parameter call BIS_fnc_onLoad"}, "BIS_fnc_convertUnits": {"example": "_distString = [500, 0, 5, 1, -1] call BIS_fnc_convertUnits;", "reviewLevel": 2, "docSyntax": "[value, from, to, mode, precision] call BIS_fnc_convertUnits", "description": "Converts values to a target system of units.", "syntax": "[<scalar>,from,to,mode,precision] call BIS_fnc_convertUnits"}, "BIS_fnc_overviewMission": {"example": "", "description": "#define CONTROL_SHOW(CONTROL) \\ CONTROL ctrlshow true; \\ CONTROL ctrlsetfade 0; \\ CONTROL ctrlcommit 0; #define CONTROL_HIDE(CONTROL) \\ CONTROL ctrlshow false; \\ CONTROL ctrlsetfade 1; \\ CONTROL ctrlcommit 0;"}, "setStarterRTD": {"example": "(vehicle player) setStarterRTD [true, -1];", "reviewLevel": 1, "docSyntax": "helicopterRTD setStarterRTD [enable, engineIndex]", "description": "Toggle the starter for the given helicopter engine(s) on or off.", "syntax": "helicopterRTD setStarterRTD [<bool>,engineIndex]"}, "BIS_fnc_displayMission": {"example": "_mainDisplay = call BIS_fnc_displayMission;", "reviewLevel": 2, "docSyntax": "call BIS_fnc_displayMission", "description": "Returns main display of current mission/intro/outro. A cleaner alternative to findDisplay 46.", "syntax": "call BIS_fnc_displayMission"}, "setWantedRPMRTD": {"example": "(vehicle player) setWantedRPMRTD [2500, 30, 0];", "reviewLevel": 1, "docSyntax": "helicopterRTD setWantedRPMRTD [value, time, engineIndex]", "description": "Tell the helicopter engine RPMs to reach the given value within a period of time. The simulation will try to reach the RPMs, but it does not guarantee it will reach the precise value!", "syntax": "helicopterRTD setWantedRPMRTD [<scalar>,<scalar>,engineIndex]"}, "radioChannelCreate": {"example": "_index = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [player1, player2]];", "reviewLevel": 2, "docSyntax": "radioChannelCreate [color, label, callSign, units, sentenceType]", "description": "Create a custom radio channel with the given color, label, call sign and registered characters. The index returned can be used to manipulate the created channel later. There are 10 slots for custom radio channels which would correspond to channels 6-15 (see getPlayerChannel). The command will find an unused index in this range and create it when found. Server only.", "syntax": "radioChannelCreate [<scalar>,label,callSign,units,sentenceType]"}}, "ARMA": {"setTriggerStatements": {"reviewLevel": 2, "syntax": "<objTrigger> setTriggerStatements [condition,activation,deactivation]", "local": false, "example": "_trg setTriggerStatements [\"this\", \"hint 'trigger on'\", \"hint 'trigger off'\"]", "docSyntax": "trigger setTriggerStatements [condition, activation, deactivation]", "broadcasted": false, "description": "Defines trigger condition, activation and deactivation statements. Trigger condition has to return Boolean. true will activate the trigger, false will deactivate it (only if activation is set to repeat). thisList returns the same result as list command, which includes all entities in the trigger area that are capable of activating the trigger. Dead entities are excluded as well as crew in vehicles, vehicles themselves are included.", "server": true}, "scriptDone": {"reviewLevel": 1, "syntax": "scriptDone handle", "local": false, "example": "_p = execVM 'file.sqf'; scriptDone _p;", "docSyntax": "scriptDone handle", "broadcasted": false, "description": "Check if a script is finished running using the Script_(Handle) returned by execVM or spawn.", "server": false}, "camPrepareFov": {"reviewLevel": 1, "syntax": "<objCamera> camPrepareFov fieldOfView", "local": false, "example": "_camera camPrepareFov 0.1", "docSyntax": "camera camPrepareFov fieldOfView", "broadcasted": false, "description": "Prepares the camera field of view (zoom). The default zoom level is 0.75, 0.01 is the nearest and 2 the furthest zoom value. The angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio. Needs the call of camCommitPrepared to be conducted.", "server": false}, "setWaypointDescription": {"reviewLevel": 1, "syntax": "waypoint setWaypointDescription <string>", "local": false, "example": "[_grp, 2] setWaypointDescription \"Move here.\";", "docSyntax": "waypoint setWaypointDescription text", "broadcasted": false, "description": "Sets the description shown in the HUD while the waypoint is active.", "server": false}, "triggerAttachObject": {"reviewLevel": 1, "syntax": "triggerName triggerAttachObject <scalar>", "local": false, "example": "_trigger triggerAttachObject 1234;", "docSyntax": "triggerName triggerAttachObject objectId", "broadcasted": false, "description": "Assigns a static object to the trigger. The activation source is changed to \"STATIC\".", "server": false}, "getText": {"reviewLevel": 1, "syntax": "<string> = getText config", "local": false, "example": "_text = getText (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"icon\");", "docSyntax": "String = getText config", "broadcasted": false, "description": "Extract text from config entry.", "server": false}, "cameraOn": {"reviewLevel": 2, "syntax": "<object> = cameraOn", "local": false, "example": "_object = cameraOn;", "docSyntax": "Object = cameraOn", "broadcasted": false, "description": "Returns the vehicle to which the camera is attached.", "server": false}, "ctrlMapAnimAdd": {"reviewLevel": 2, "syntax": "<objMap> ctrlMapAnimAdd [<scalar>,<scalar>,position]", "local": true, "example": "_map ctrlMapAnimAdd [1, 0.1, getMarkerPos \"anim1\"]; ctrlMapAnimCommit _map;", "docSyntax": "map ctrlMapAnimAdd [time, zoom, position]", "broadcasted": false, "description": "Adds the next frame to the map animation.", "server": false}, "moveToCompleted": {"reviewLevel": 2, "syntax": "<bool> = moveToCompleted <objUnit>", "local": false, "example": "", "docSyntax": "Boolean = moveToCompleted person", "broadcasted": false, "description": "Check if latest low level moveTo command is finished.", "server": false}, "typeName": {"reviewLevel": 1, "syntax": "typeName anything", "local": false, "example": "_msg = \"hello\"; _result = typeName _msg; //_result will be \"STRING\"", "docSyntax": "typeName anything", "broadcasted": false, "description": "Returns the data type of an expression. The type is returned as on of the following all-uppercase strings:", "server": false}, "ctrlSetStructuredText": {"reviewLevel": 1, "syntax": "<uiControl> ctrlSetStructuredText structuredText", "local": false, "example": "_control ctrlSetStructuredText parseText \"First line<img image=data\\isniper.paa /><br />Second line\"", "docSyntax": "control ctrlSetStructuredText structuredText", "broadcasted": false, "description": "Set the structured text which will be displayed in structured text control.", "server": false}, "setDate": {"reviewLevel": 2, "syntax": "setDate [year,month,day,hour,minute]", "local": true, "example": "setDate [1986, 2, 25, 16, 0]; //(4:00pm February 25, 1986)", "docSyntax": "setDate [year, month, day, hour, minute]", "broadcasted": false, "description": "Sets the actual mission date and time. This command is JIP compatible. Players joining after mission start will get current server date set up.", "server": false}, "airportSide": {"reviewLevel": 2, "syntax": "airportSide <scalar>", "local": false, "example": "airportSide 0;", "docSyntax": "airportSide id", "broadcasted": false, "description": "Checks a side of the airport. ID is the number to identify which airport on the island you want to check. Possible values for sara are:", "server": false}, "initAmbientLife": {"reviewLevel": 2, "syntax": "initAmbientLife", "local": false, "example": "initAmbientLife;", "docSyntax": "initAmbientLife", "broadcasted": false, "description": "Initialises the ambient life on local client from CfgWorlds >> worldName >> AmbientA3. Has no effect on dedicated server or headless client.", "server": false}, "setEffectCondition": {"reviewLevel": 1, "syntax": "<objTrigger> setEffectCondition statement", "local": false, "example": "_triggerObj setEffectCondition \"thisList\";", "docSyntax": "trigger setEffectCondition statement", "broadcasted": false, "description": "The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.", "server": false}, "from": {"reviewLevel": 1, "syntax": "for from b", "local": false, "example": "for \"_x\" from 10 to 20 do {..code..}", "docSyntax": "for from b", "broadcasted": false, "description": "Continue sequence of for var construct. It sets the start value of the index variable.", "server": false}, "setVectorDirAndUp": {"reviewLevel": 2, "syntax": "<objVehicle> setVectorDirAndUp [[x1,y1,z1],[x2,y2,z2]]", "local": true, "example": "// set exact yaw, pitch, and roll _y = 45; _p = -80; _r = 0; BRICK setVectorDirAndUp [ [ sin _y * cos _p,cos _y * cos _p,sin _p], [ [ sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D ];", "docSyntax": "vehicle setVectorDirAndUp [[x1, y1, z1],[x2, y2, z2]]", "broadcasted": true, "description": "Sets orientation of an object. The command takes 2 vector arrays, one for vectorDir and one for vectorUp. Default object orientation will always have vectorDir pointing forward (North) along Y axis and vectorUp pointing up along Z axis - [[0,1,0],[0,0,1]], as shown on the diagram below.", "server": false}, "deleteMarker": {"reviewLevel": 2, "syntax": "deleteMarker <string>", "local": false, "example": "deleteMarker \"Marker1\"", "docSyntax": "deleteMarker name", "broadcasted": false, "description": "Destroys the given marker.", "server": false}, "setVehicleInit": {"reviewLevel": 1, "syntax": "<objUnit> setVehicleInit statement", "local": false, "example": "_soldier3 setVehicleInit \"this allowfleeing 0\"", "docSyntax": "unitName setVehicleInit statement", "broadcasted": true, "description": "Attach a statement to a unit. The statement is propagated over the network in MP games, it can be executed by invoking processInitCommands.", "server": false}, "setWaypointTimeout": {"reviewLevel": 1, "syntax": "waypoint setWaypointTimeout [min,mid,max]", "local": false, "example": "[_grp, 2] setWaypointTimeout [5, 10, 6];", "docSyntax": "waypoint setWaypointTimeout [min, mid, max]", "broadcasted": false, "description": "Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid).", "server": false}, "lightAttachObject": {"reviewLevel": 1, "syntax": "light lightAttachObject [<object>,position]", "local": false, "example": "myLight lightAttachObject [myVehicle, [-0.5,-0.25,1]];", "docSyntax": "light lightAttachObject [object, position]", "broadcasted": false, "description": "Attach light to given object at given position on object.", "server": true}, "enableEnvironment": {"reviewLevel": 2, "syntax": "enableEnvironment <bool>", "local": false, "example": "enableEnvironment false;", "docSyntax": "enableEnvironment enabled", "broadcasted": false, "description": "Enable/disable environmental effects: ambient life and/or ambient sound.", "server": false}, "ctrlMapAnimDone": {"reviewLevel": 1, "syntax": "<bool> = ctrlMapAnimDone controlName", "local": true, "example": "", "docSyntax": "Boolean = ctrlMapAnimDone controlName", "broadcasted": false, "description": "Checks whether the map animation has finished.", "server": false}, "setWaypointStatements": {"reviewLevel": 1, "syntax": "waypoint setWaypointStatements [condition,statement]", "local": false, "example": "new_wp setWaypointStatements [\"true\", \"hint 'hello'; hint 'goodbye'\"];", "docSyntax": "waypoint setWaypointStatements [condition, statement]", "broadcasted": false, "description": "The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed.", "server": false}, "rectangular": {"reviewLevel": 1, "syntax": "rectangular location", "local": false, "example": "_isRect = rectangular myLocation;", "docSyntax": "rectangular location", "broadcasted": false, "description": "Checks if a location is rectangular (returns true) or elliptical (returns false).", "server": false}, "setPlayable": {"reviewLevel": 2, "syntax": "setPlayable <objUnit>", "local": false, "example": "setPlayable _aPerson", "docSyntax": "setPlayable unitName", "broadcasted": false, "description": "Create MP role for the unit. The roles created this way are used for Join In Progress and Team Switch. NOTE: Currently in Arma 3 this command does nothing.", "server": false}, "switchableUnits": {"reviewLevel": 2, "syntax": "switchableUnits", "local": false, "example": "", "docSyntax": "switchableUnits", "broadcasted": false, "description": "Returns a list of playable units available for switching to. Command is relative to the client on which it is executed and will only show playable units for the same side as player's group + player himself. The playableUnits command on the other hand will show all playable units regardless of the side. Exception is SP, where playable units from all sides will be accessible via this command. Dead units are automatically removed from the resulting array. Playable units that are already occupied by other human players will also not show in the results.", "server": false}, "ctrlCommitted": {"reviewLevel": 1, "syntax": "<bool> = ctrlCommitted controlName", "local": false, "example": "_done = ctrlCommitted _control", "docSyntax": "Boolean = ctrlCommitted controlName", "broadcasted": false, "description": "Check if the control animation is finished.", "server": false}, "setMarkerSizeLocal": {"reviewLevel": 2, "syntax": "<string> setMarkerSizeLocal [a-axis,b-axis]", "local": false, "example": "\"MarkerOne\" setMarkerSizeLocal [100, 200];", "docSyntax": "markerName setMarkerSizeLocal [a-axis, b-axis]", "broadcasted": false, "description": "Set marker size. Size is in format [a-axis, b-axis].", "server": false}, "ctrlCommit": {"reviewLevel": 2, "syntax": "<uiControl> ctrlCommit <scalar>", "local": false, "example": "_control ctrlCommit 2; // make animation last approx. 2 seconds", "docSyntax": "control ctrlCommit time", "broadcasted": false, "description": "Commits control animation to last specified duration.", "server": false}, "displayCtrl": {"reviewLevel": 2, "syntax": "<uiControl> = <uiDisplay> displayCtrl <scalar>", "local": false, "example": "_ChildControl = _ParentDisplay displayCtrl 101;", "docSyntax": "Control = display displayCtrl idc", "broadcasted": false, "description": "Return child control with specified idc.", "server": false}, "isKindOf": {"reviewLevel": 1, "syntax": "<object> isKindOf typeName", "local": false, "example": "vehicle player isKindOf \"Tank\";", "docSyntax": "object isKindOf typeName", "broadcasted": false, "description": "Checks whether the object is (a subtype) of the given type. While main syntax and alt syntax support only CfgVehicles, CfgAmmo and CfgNonAIVehicles, alt syntax 2 allows to specify any config, including mission config.", "server": false}, "scopeName": {"reviewLevel": 2, "syntax": "scopeName <string>", "local": false, "example": "scopeName \"main\"; while {true} do { scopeName \"loop1\"; while {true} do { scopeName \"loop2\"; ... }; };", "docSyntax": "scopeName name", "broadcasted": false, "description": "Defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands like breakOut and breakTo. Scope name should be defined only once per scope. Trying to set a different name on the scope that has already defined scope name will result in error.", "server": false}, "htmlLoad": {"reviewLevel": 1, "syntax": "<uiControl> htmlLoad filename", "local": false, "example": "_control htmlLoad \"briefing.html\";", "docSyntax": "control htmlLoad filename", "broadcasted": false, "description": "Load HTML-Files from file or Uri using given control. File path is relative to current mission dir or an absolute path (with drive letter etc.). The command is subject to restrictions, imposed by CfgCommands class.", "server": false}, "text": {"reviewLevel": 2, "syntax": "<string> <string>", "local": false, "example": "_stxt2 = text \"Hello world.\";", "docSyntax": "text string", "broadcasted": false, "description": "Creates a structured text containing the given plain text if argument is String or returns location's text value if argument is Location (see Alt Syntax)", "server": false}, "camPrepareFovRange": {"reviewLevel": 1, "syntax": "<objCamera> camPrepareFovRange fovRange", "local": false, "example": "_camera camPrepareFovRange [0.1, 0.5]", "docSyntax": "camera camPrepareFovRange fovRange", "broadcasted": false, "description": "Prepares the camera field of view range for auto zooming.", "server": false}, "ctrlShown": {"reviewLevel": 1, "syntax": "<bool> = ctrlShown controlName", "local": false, "example": "_bool = ctrlShown _ctrl;", "docSyntax": "Boolean = ctrlShown controlName", "broadcasted": false, "description": "Returns whether given control is shown.", "server": false}, "setVehicleVarName": {"reviewLevel": 2, "syntax": "<object> setVehicleVarName <string>", "local": false, "example": "player setVehicleVarName \"aP\"; aP = player;", "docSyntax": "object setVehicleVarName name", "broadcasted": false, "description": "Sets string representation of an object to a custom string. For example it is possible to return \"MyFerrari\" instead of default \"ce06b00# 164274: offroad_01_unarmed_f.p3d\" when querying object as string: hint str _offroad; //MyFerrari When a vehicle is created and named in the editor, the name becomes both the variable containing the vehicle object and the string representation of the vehicle object. vehicleVarName on the other hand is only string representation of the object. So if you want to refer to the actual object by its vehicleVarName, an extra step needed to assign the object to a variable of the same name. For example to see and refer to offroad as myFerrari: _offroad setVehicleVarName \"MyFerrari\"; MyFerrari = _offroad; In multiplayer environment setVehicleVarName has to be executed on every PC if you want the custom name to be known everywhere. If vehicle is created and named in the editor, the vehicle name will be known globally automatically.", "server": true}, "isHidden": {"reviewLevel": 2, "syntax": "isHidden <objUnit>", "local": false, "example": "_bobIsHidden = isHidden bob;", "docSyntax": "isHidden person", "broadcasted": false, "description": "Return whether the person is hidden (reached the hiding position). For command that tests general visibility of an object use isObjectHidden", "server": true}, "createTrigger": {"reviewLevel": 2, "syntax": "createTrigger [type,position,makeGlobal]", "local": false, "example": "_trg = createTrigger [\"EmptyDetector\", getPos player]; _trg setTriggerArea [5, 5, 0, false]; _trg setTriggerActivation [\"CIV\", \"PRESENT\", true]; _trg setTriggerStatements [\"this\", \"hint 'Civilian near player'\", \"hint 'no civilian near'\"];", "docSyntax": "createTrigger [type, position, makeGlobal]", "broadcasted": true, "description": "Creates a sensor (trigger) of the given type and at the given position. The type must be a class name in CfgNonAIVehicles or CfgVehicles with simulation = detector. An array containing all units that have activated the trigger is available via list triggerobj. Created triggers can be deleted using deleteVehicle.", "server": false}, "deleteGroup": {"reviewLevel": 2, "syntax": "deleteGroup <objGroup>", "local": true, "example": "deleteGroup _groupname", "docSyntax": "deleteGroup group", "broadcasted": true, "description": "Destroys the given group. Group must be empty and local to the machine executing command.", "server": false}, "clearRadio": {"reviewLevel": 2, "syntax": "clearRadio", "local": false, "example": "clearRadio;", "docSyntax": "clearRadio", "broadcasted": false, "description": "Clean up the content of radio protocol history.", "server": false}, "setTargetAge": {"reviewLevel": 1, "syntax": "<object> setTargetAge age", "local": false, "example": "player setTargetAge \"10 MIN\"", "docSyntax": "object setTargetAge age", "broadcasted": false, "description": "Sets how the target is known to the other centers. They behave like the target was seen age seconds ago. Possible age values are: \"ACTUAL\", \"5 MIN\", \"10 MIN\", \"15 MIN\", \"30 MIN\", \"60 MIN\", \"120 MIN\" or \"UNKNOWN\".", "server": false}, "ctrlSetTooltipColorBox": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetTooltipColorBox <scalar>", "local": false, "example": "_control ctrlSetTooltipColorBox [1, 0, 0, 1];", "docSyntax": "control ctrlSetTooltipColorBox color", "broadcasted": false, "description": "Sets tooltip border color of given control. Color is in format Color.", "server": false}, "ctrlSetFontH5": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH5 fontName", "local": false, "example": "_control ctrlSetFontH5 \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH5 fontName", "broadcasted": false, "description": "Sets H5 font of given HTML control.", "server": false}, "setUnitAbility": {"reviewLevel": 2, "syntax": "<objUnit> setUnitAbility <scalar>", "local": false, "example": "_unit setUnitAbility 1;", "docSyntax": "unit setUnitAbility value", "broadcasted": false, "description": "Sets skill of given unit. Unlike setSkill, setUnitAbility can set values > 1. Even though the skill command will correctly return set value, the actual unit ability will be capped to max available.", "server": false}, "parseText": {"reviewLevel": 1, "syntax": "Structured <string> = parseText <string>", "local": false, "example": "_Stxt = parseText \"First line<img image='data\\isniper.paa'/><br/>Second line\";", "docSyntax": "Structured Text = parseText text", "broadcasted": false, "description": "Creates a structured text by parsing the given XML description. Do not use parseText when displaying a localized text from stringtable.xml (see notes below).", "server": false}, "ctrlSetFontH1": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH1 fontName", "local": false, "example": "_control ctrlSetFontH1 \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH1 fontName", "broadcasted": false, "description": "Sets H1 font of given HTML control.", "server": false}, "setTriggerActivation": {"reviewLevel": 2, "syntax": "<objTrigger> setTriggerActivation [by,type,repeating]", "local": false, "example": "_trigger setTriggerActivation [\"WEST\", \"EAST D\", true]", "docSyntax": "trigger setTriggerActivation [by, type, repeating]", "broadcasted": false, "description": "Defines the trigger activation type. See ArmA:Mission Editor - Triggers for a thorough overview of triggers and its fields for activation, effects, etc. Since Arma 3 v1.67, \"ANYPLAYER\" activation can be used to detect any player.", "server": true}, "currentCommand": {"reviewLevel": 1, "syntax": "currentCommand vehicleName", "local": false, "example": "_command = currentCommand player;", "docSyntax": "currentCommand vehicleName", "broadcasted": false, "description": "Return the current command type (empty string when no command) for the commander of given vehicle (or for a given soldier). Returned value can be one of:", "server": false}, "nearTargets": {"reviewLevel": 1, "syntax": "<objUnit> nearTargets range", "local": false, "example": "player nearTargets 100;could return something like this:", "docSyntax": "unit nearTargets range", "broadcasted": false, "description": "Returns a list of targets within the defined range. \"Targets\" are not restricted to enemy units.", "server": false}, "createDisplay": {"reviewLevel": 1, "syntax": "parent createDisplay resourceName", "local": false, "example": "findDisplay 46 createDisplay \"RscCredits\";", "docSyntax": "parent createDisplay resourceName", "broadcasted": false, "description": "Creates child display of given display and loads from \"resourceName\". The notable difference between createDisplay and createDialog is that with createDisplay the player would be able to move whilst having control of the mouse pointer.", "server": false}, "throw": {"reviewLevel": 1, "syntax": "throw expression", "local": false, "example": "try {throw \"invalid argument\"} catch {hint str _exception};", "docSyntax": "throw expression", "broadcasted": false, "description": "Throws an exception. The exception is processed by first catch block. This command will terminate further execution of the code.", "server": false}, "deleteLocation": {"reviewLevel": 1, "syntax": "deleteLocation location", "local": false, "example": "deleteLocation myLocation;", "docSyntax": "deleteLocation location", "broadcasted": false, "description": "Deletes scripted location.", "server": false}, "hideBehindScripted": {"reviewLevel": 1, "syntax": "<object> hideBehindScripted scriptedHideBehind", "local": false, "example": "_unit hideBehindScripted true", "docSyntax": "object hideBehindScripted scriptedHideBehind", "broadcasted": false, "description": "When set to true it disables the default engine hiding behavior.", "server": false}, "setWaypointScript": {"reviewLevel": 1, "syntax": "waypoint setWaypointScript command", "local": false, "example": "[_grp, 2] setWaypointScript \"find.sqs player\";", "docSyntax": "waypoint setWaypointScript command", "broadcasted": false, "description": "Attaches a script to a scripted waypoint. In early versions of Arma, command consisted of a script name and additional script arguments and the script had to use SQS-Syntax. The script receives the following arguments in _this variable: [group, position, target] + [the optional passed arguments]. The optional arguments are appended to the end of the return array.", "server": false}, "step": {"reviewLevel": 1, "syntax": "for step stepSize", "local": false, "example": "for \"_x\" from 20 to 10 step -2 do {..code..}", "docSyntax": "for step stepSize", "broadcasted": false, "description": "Optionally can set step. If you want to count down, step must be specified, and set negative. Default value is 1.", "server": false}, "findDisplay": {"reviewLevel": 1, "syntax": "<uiDisplay> = findDisplay idd", "local": false, "example": "_display = findDisplay 1;", "docSyntax": "Display = findDisplay idd", "broadcasted": false, "description": "Find display by its IDD (which is defined in the description.ext or config).", "server": false}, "createSoundSource": {"reviewLevel": 2, "syntax": "createSoundSource [type,position,markers,placement]", "local": false, "example": "_soundSource = createSoundSource [\"LittleDog\", position player, [], 0]", "docSyntax": "createSoundSource [type, position, markers, placement]", "broadcasted": true, "description": "Creates a sound source of the given type (type is the name of the subclass of CfgVehicles which is pointing to the sound defined in CfgSFX). The actual sound object created is of type \"#dynamicsound\" and could be detected with allMissionObjects. If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The sound source is placed inside a circle with this position as its center and placement as its radius. Some of the vanilla classes pre-configured in Arma 3:", "server": true}, "size": {"reviewLevel": 1, "syntax": "size location", "local": false, "example": "_locSize = size myLocation", "docSyntax": "size location", "broadcasted": false, "description": "Returns a location's size.", "server": false}, "camPreloaded": {"reviewLevel": 2, "syntax": "<bool> = camPreloaded <objCamera>", "local": false, "example": "?(camPreloaded _camera)\u00c2\u00a0: exit", "docSyntax": "Boolean = camPreloaded camera", "broadcasted": false, "description": "Checks whether the camera has finished preloading.", "server": false}, "sendSimpleCommand": {"reviewLevel": 1, "syntax": "vehicleName sendSimpleCommand command", "local": false, "example": "vehicle player sendSimpleCommand \"STOP\";", "docSyntax": "vehicleName sendSimpleCommand command", "broadcasted": false, "description": "Sends a simple command to the vehicle's driver / gunner. The player executing command should be in the vehicle.", "server": false}, "rain": {"reviewLevel": 2, "syntax": "rain", "local": false, "example": "_rainLevel = rain;", "docSyntax": "rain", "broadcasted": false, "description": "Returns the current value of rain density in range 1...0", "server": false}, "vectorDir": {"reviewLevel": 1, "syntax": "vectorDir objectName", "local": false, "example": "_dirVector = vectorDir _unit;", "docSyntax": "vectorDir objectName", "broadcasted": false, "description": "Return object's normalized direction vector in world space ([x,y,z]).", "server": true}, "findNearestEnemy": {"reviewLevel": 1, "syntax": "<object> findNearestEnemy position", "local": false, "example": "_myNearestEnemy = (units _myGroup select 0) findNearestEnemy player;", "docSyntax": "object findNearestEnemy position", "broadcasted": false, "description": "Finds the nearest enemy to the specified position. Returns a null object if the object's group does not know about any enemies. This command will return nearest object that is known to the unit and is considered enemy. An empty vehicle that is part of enemy group assets (see addVehicle) can be returned as valid nearest target.", "server": false}, "boundingBox": {"reviewLevel": 1, "syntax": "boundingBox model", "local": false, "example": "_box = boundingBox _abrams", "docSyntax": "boundingBox model", "broadcasted": false, "description": "Returns a bounding box of given object in model coordinate space. This command is rather generous on the size estimation, for more precise coordinates use boundingBoxReal", "server": false}, "finite": {"reviewLevel": 1, "syntax": "<bool> = finite x", "local": false, "example": "?!finite 10/0\u00c2\u00a0: hint \"Infinite\"", "docSyntax": "Boolean = finite x", "broadcasted": false, "description": "True, if number is finite (not infinite and a valid number)", "server": false}, "doGetOut": {"reviewLevel": 2, "syntax": "doGetOut <objUnit>(s)", "local": true, "example": "doGetOut _unitOne", "docSyntax": "doGetOut unit(s)", "broadcasted": true, "description": "Orders a unit or units to get out from the vehicle (silently).", "server": false}, "synchronizeWaypoint trigger": {"reviewLevel": 1, "syntax": "<objTrigger> synchronizeWaypoint [waypoint1,waypoint2,...]", "local": false, "example": "_myTrigger synchronizeWaypoint [ [_group2, 3] ];", "docSyntax": "trigger synchronizeWaypoint [waypoint1, waypoint2, ...]", "broadcasted": false, "description": "Synchronizes a trigger with other waypoints. Each waypoint is given as an array [group, index].", "server": false}, "exportLandscapeXYZ": {"reviewLevel": 1, "syntax": "exportLandscapeXYZ filename", "local": false, "example": "exportLandscapeXYZ \"myLandscape.txt\"", "docSyntax": "exportLandscapeXYZ filename", "broadcasted": false, "description": "Exports landscape as XYZ file. Note: Not available in Retail Version", "server": false}, "waypointAttachObject": {"reviewLevel": 1, "syntax": "waypoint waypointAttachObject <scalar>", "local": false, "example": "[_grp, 2] waypointAttachObject 1234", "docSyntax": "waypoint waypointAttachObject objectID", "broadcasted": false, "description": "Attaches a static object via it's numeric ID to the given waypoint.", "server": false}, "setMarkerBrush": {"reviewLevel": 1, "syntax": "<string> setMarkerBrush brush", "local": false, "example": "\"Marker1\" setMarkerBrush \"DIAGGRID\";", "docSyntax": "markerName setMarkerBrush brush", "broadcasted": true, "description": "Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.", "server": false}, "ctrlSetFontH2B": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH2B fontName", "local": false, "example": "_control ctrlSetFontH2B \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH2B fontName", "broadcasted": false, "description": "Sets H2 bold font of given HTML control.", "server": false}, "activateKey": {"reviewLevel": 1, "syntax": "activateKey keyname", "local": false, "example": "activateKey \"Mission04Key\";", "docSyntax": "activateKey keyname", "broadcasted": false, "description": "Activates the given keyname for the current user profile. The keys are used to unlock missions or campaigns. See keys, keysLimit and doneKeys in the description.ext file of the missions.", "server": false}, "nextWeatherChange": {"reviewLevel": 2, "syntax": "<scalar> = nextWeatherChange", "local": false, "example": "_seconds = nextWeatherChange;", "docSyntax": "Number = nextWeatherChange", "broadcasted": false, "description": "Return the remaining time (in seconds) over which the current weather change will occur.", "server": false}, "setWaypointHousePosition": {"reviewLevel": 1, "syntax": "waypoint setWaypointHousePosition <array>", "local": false, "example": "[_grp, 2] setWaypointHousePosition 1;", "docSyntax": "waypoint setWaypointHousePosition pos", "broadcasted": false, "description": "For waypoints attached to a house, this defines the target buildingPos index.", "server": false}, "overcastForecast": {"reviewLevel": 2, "syntax": "overcastForecast", "local": false, "example": "_forecast = overcastForecast;", "docSyntax": "overcastForecast", "broadcasted": false, "description": "Return the overcast forecast.", "server": false}, "ctrlSetFontHeight": {"reviewLevel": 1, "syntax": "<uiControl> ctrlSetFontHeight size", "local": false, "example": "_control ctrlSetFontHeight 0.05;", "docSyntax": "control ctrlSetFontHeight size", "broadcasted": false, "description": "Sets the sizeEx property for most controls but not all. CT_STRUCTURED_TEXT unfortunately is not supported as it operates on size property among other things. This setter command does not have a getter counterpart either.", "server": false}, "camPrepareBank": {"reviewLevel": 1, "syntax": "<objCamera> camPrepareBank bank", "local": false, "example": "_camera camPrepareBank -0.1", "docSyntax": "camera camPrepareBank bank", "broadcasted": false, "description": "Prepares the camera bank angle.", "server": false}, "setUnitPosWeak": {"reviewLevel": 1, "syntax": "<objUnit> setUnitPosWeak mode", "local": true, "example": "_soldier disableAI \"FSM\"; _soldier setUnitPosWeak \"DOWN\";", "docSyntax": "unit setUnitPosWeak mode", "broadcasted": true, "description": "Set unit position rules. Mode may be one of:", "server": false}, "doFSM": {"reviewLevel": 2, "syntax": "<objUnit> doFSM [fsmName,position,<object>]", "local": false, "example": "_soldierOne doFSM [\"move.fsm\", position player, player];", "docSyntax": "unit doFSM [fsmName, position, target]", "broadcasted": false, "description": "Orders a unit to process command defined by FSM file (silently). Unlike with execFSM where _this is passed to the FSM, the following parameters are passed when using doFSM/commandFSM:", "server": false}, "lbSelection": {"reviewLevel": 2, "syntax": "lbSelection <uiControl>", "local": false, "example": "_indices = lbSelection _control;", "docSyntax": "lbSelection control", "broadcasted": false, "description": "Returns Array of selected rows indices in the given listbox of style LB_MULTI (multi-selection). For single selection listbox use lbCurSel instead.", "server": false}, "configName": {"reviewLevel": 1, "syntax": "<string> = configName config", "local": false, "example": "_name = configName (configFile >> \"CfgVehicles\"); Result is \"CfgVehicles\"", "docSyntax": "String = configName config", "broadcasted": false, "description": "Returns name of config entry.", "server": false}, "date": {"reviewLevel": 2, "syntax": "date", "local": false, "example": "_now = date; // _now = [2014,10,30,2,30] (Oct. 30th, 2:30am) _hour = _now select 3; _min = _now select 4;", "docSyntax": "date", "broadcasted": false, "description": "Return the actual in-mission date and time in format [year, month, day, hour, minute]. In MP the date is automatically and periodically synced with the server date.", "server": false}, "camPrepareRelPos": {"reviewLevel": 1, "syntax": "<objCamera> camPrepareRelPos position", "local": false, "example": "_camera camPrepareRelPos [10,5,-2]", "docSyntax": "camera camPrepareRelPos position", "broadcasted": false, "description": "Prepares the camera position relative to the current position of the currect target (see camPrepareTarget).", "server": false}, "preloadTitleObj": {"reviewLevel": 2, "syntax": "preloadTitleObj [<string>,type]", "local": false, "example": "_ok=preloadTitleObj [\"BISLogo\",\"plain\"]", "docSyntax": "preloadTitleObj [name, type]", "broadcasted": false, "description": "Object title - Preload data the object can be defined in the Description.ext file.", "server": false}, "modelToWorld": {"reviewLevel": 4, "syntax": "<object> modelToWorld <array>", "local": false, "example": "_aboveAndBehindPlayer = player modelToWorld [0,-1,3];", "docSyntax": "model modelToWorld position", "broadcasted": false, "description": "Translates relative position from object model space into world position.", "server": false}, "setWaypointCombatMode": {"reviewLevel": 1, "syntax": "waypoint setWaypointCombatMode mode", "local": false, "example": "[_grp, 2] setWaypointCombatMode \"RED\";", "docSyntax": "waypoint setWaypointCombatMode mode", "broadcasted": false, "description": "The group combat mode is switched when the waypoint becomes active.", "server": false}, "moveTarget": {"reviewLevel": 2, "syntax": "<bool> = <object> moveTarget [position,typeAccuracy,posAccuracy]", "local": false, "example": "_posn =_target '''moveTarget''' [position player,1,1]", "docSyntax": "Boolean = target moveTarget [position, typeAccuracy, posAccuracy]", "broadcasted": false, "description": "Change information about a target. Not yet implemented.", "server": false}, "floor": {"reviewLevel": 1, "syntax": "<scalar> = floor x", "local": false, "example": "floor 5.25", "docSyntax": "Number = floor x", "broadcasted": false, "description": "Returns the next lowest integer in relation to x.", "server": false}, "setHideBehind": {"reviewLevel": 2, "syntax": "<object> setHideBehind [objectWhereHide,hidePosition]", "local": false, "example": "", "docSyntax": "object setHideBehind [objectWhereHide, hidePosition]", "broadcasted": false, "description": "Sets the data for hiding. objectWhereHide can be taken using findCover. hidePosition can be taken using getHideFrom. Command is not functional in ArmA 2.", "server": false}, "ctrlActivate": {"reviewLevel": 1, "syntax": "ctrlActivate controlName", "local": false, "example": "ctrlActivate _control", "docSyntax": "ctrlActivate controlName", "broadcasted": false, "description": "Launch actions attached to given (button based) control.", "server": false}, "setMarkerText": {"reviewLevel": 2, "syntax": "<string> setMarkerText <string>", "local": false, "example": "\"Marker1\" setMarkerText \"You are here.\";", "docSyntax": "markerName setMarkerText text", "broadcasted": true, "description": "Sets the text label of an existing marker.", "server": false}, "waypointAttachVehicle": {"reviewLevel": 1, "syntax": "waypoint waypointAttachVehicle vehicleName", "local": false, "example": "[_grp, 2] waypointAttachVehicle vehicle player;", "docSyntax": "waypoint waypointAttachVehicle vehicleName", "broadcasted": false, "description": "Attaches a vehicle Object to the given Waypoint.", "server": false}, "activateAddons": {"reviewLevel": 2, "syntax": "activateAddons [addon1,...]", "local": false, "example": "activateAddons [\"BISOFP\"];", "docSyntax": "activateAddons [addon1, ...]", "broadcasted": false, "description": "Activates the listed addons. The list of active addons is initialized during this function.", "server": false}, "weaponDirection": {"reviewLevel": 1, "syntax": "vehicleName weaponDirection weaponName", "local": false, "example": "_weaponVectorDir = player weaponDirection currentWeapon player;", "docSyntax": "vehicleName weaponDirection weaponName", "broadcasted": false, "description": "Returns the direction that the vehicle weapon is aiming in. For addons the weapon name must be an entry in CfgWeapons. Returns an array in format [x, y, z]", "server": true}, "preloadCamera": {"reviewLevel": 1, "syntax": "preloadCamera position", "local": false, "example": "waitUntil {preloadCamera markerPos \"cam_location_2\"};", "docSyntax": "preloadCamera position", "broadcasted": false, "description": "Preload all textures and models around given Position to avoid visual artifacts after camera is moved. Should be used before any abrupt camera change/cut. Returns true once all data is ready.", "server": false}, "hierarchyObjectsCount": {"reviewLevel": 2, "syntax": "hierarchyObjectsCount", "local": false, "example": "_number = hierarchyObjectsCount;", "docSyntax": "hierarchyObjectsCount", "broadcasted": false, "description": "The number of objects in hierarchy.", "server": false}, "setDropInterval": {"reviewLevel": 1, "syntax": "particleSource setDropInterval interval", "local": false, "example": "_source setDropInterval 0.05;", "docSyntax": "particleSource setDropInterval interval", "broadcasted": false, "description": "Set interval of emitting particles from particle source. In Arma 3 hardcoded limit of how many particles can exist at the same time is 18000. Correspondence between CfgCloudlets class param name and command param: particleSource setDropInterval interval;", "server": true}, "clearVehicleInit": {"reviewLevel": 1, "syntax": "clearVehicleInit objectName", "local": false, "example": "_tank1 setVehicleInit \"hint 'hi all'\"; processInitCommands; clearVehicleInit tank1", "docSyntax": "clearVehicleInit objectName", "broadcasted": false, "description": "Clears the object's init.", "server": false}, "addPublicVariableEventHandler": {"reviewLevel": 1, "syntax": "varName addPublicVariableEventHandler <code>", "local": false, "example": "\"publicThis\" addPublicVariableEventHandler { hint format [ \"%1 has been updated to:\u00c2\u00a0%2\", _this select 0, _this select 1 ] };", "docSyntax": "varName addPublicVariableEventHandler code", "broadcasted": false, "description": "This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableClient or publicVariableServer commands and will execute EH code upon detection. Arguments passed to the code in _this array are:", "server": true}, "addVehicle": {"reviewLevel": 1, "syntax": "groupName addVehicle vehicleName", "local": true, "example": "_grp addVehicle _vehicle", "docSyntax": "groupName addVehicle vehicleName", "broadcasted": false, "description": "Adds a specified vehicle for use by a specified AI led group taking into account vehicle's cost. The vehicle will be considered as an available vehicle for use by this group. When vehicle is added in this way, it can appear as a target for the enemy even if the vehicle is currently free of the crew. Vehicles with crew, which are placed in the editor, get automatically added to the group. To remove vehicle from a group, use leaveVehicle.", "server": false}, "posScreenToWorld": {"reviewLevel": 2, "syntax": "<objMap> posScreenToWorld [x,y]", "local": false, "example": "_WorldCoord = _Control posScreenToWorld _ScreenCoord", "docSyntax": "map posScreenToWorld [x, y]", "broadcasted": false, "description": "Convert screen coordinates in map to world coordinates.", "server": false}, "moveTo": {"reviewLevel": 1, "syntax": "<objUnit> moveTo position", "local": true, "example": "", "docSyntax": "person moveTo position", "broadcasted": true, "description": "Low level command to person to move to given position.", "server": false}, "setType": {"reviewLevel": 1, "syntax": "location setType <string>", "local": false, "example": "myLocation setType \"RockArea\"", "docSyntax": "location setType name", "broadcasted": false, "description": "Changes a location to the specified class. Location classes are defined in CfgLocationTypes.", "server": false}, "configFile": {"reviewLevel": 1, "syntax": "Config = configFile", "local": false, "example": "_isMyClassActive = isClass (configFile / \"CfgPatches\" / \"MyClass\");", "docSyntax": "Config = configFile", "broadcasted": false, "description": "Return root of config entries hierarchy.", "server": false}, "getPosASL": {"reviewLevel": 2, "syntax": "<array> = getPosASL <object>", "local": false, "example": "_AslPos = getPosASL player;", "docSyntax": "Array = getPosASL object", "broadcasted": false, "description": "Returns the object position height above sea level.", "server": true}, "distributionRegion": {"reviewLevel": 2, "syntax": "<scalar> = distributionRegion", "local": false, "example": "distributionRegion == 1", "docSyntax": "Number = distributionRegion", "broadcasted": false, "description": "Returns the numerical index for the distribution region of this copy of ArmA. 1 - US 2 - Rest of the world", "server": false}, "inheritsFrom": {"reviewLevel": 1, "syntax": "inheritsFrom config", "local": false, "example": "_base = inheritsFrom (configFile >> \"CfgVehicles\" >> \"Car\"); Result is Config entry for class \"LandVehicle\"", "docSyntax": "inheritsFrom config", "broadcasted": false, "description": "Returns base entry of config entry.", "server": false}, "setPosition": {"reviewLevel": 1, "syntax": "location setPosition <array>", "local": false, "example": "myLocation setPosition [1000,5320,10]", "docSyntax": "location setPosition pos", "broadcasted": false, "description": "Sets the position of a location.", "server": false}, "nearestObjects": {"reviewLevel": 2, "syntax": "nearestObjects [position,types,radius,2Dmode]", "local": false, "example": "nearestObjects [player, [\"Car\",\"Tank\"], 200];", "docSyntax": "nearestObjects [position, types, radius, 2Dmode]", "broadcasted": false, "description": "Returns a list of nearest objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered by proximity, the closest one will be first in the array. Alternatively, you use nearObjects command, which doesn't sort results.", "server": false}, "ctrlSetFontHeightH5": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontHeightH5 height", "local": false, "example": "_control ctrlSetFontHeightH5 0.05", "docSyntax": "controlName ctrlSetFontHeightH5 height", "broadcasted": false, "description": "Sets H5 font size of given HTML control.", "server": false}, "ctrlType": {"reviewLevel": 2, "syntax": "ctrlType <uiControl>", "local": false, "example": "_type = ctrlType _rscEdit; // 2", "docSyntax": "ctrlType control", "broadcasted": false, "description": "Returns number representing the type of control, which is also defined by type property in config. For more information see Dialog Control", "server": false}, "radioVolume": {"reviewLevel": 2, "syntax": "<scalar> = radioVolume", "local": false, "example": "_volume = radioVolume;", "docSyntax": "Number = radioVolume", "broadcasted": false, "description": "Checks the current radio volume (set by fadeRadio).", "server": false}, "onPlayerConnected": {"reviewLevel": 2, "syntax": "onPlayerConnected <code>", "local": false, "example": "onPlayerConnected \"[_id, _name] execVM \"\"PlayerConnected.sqf\"\"\";", "docSyntax": "onPlayerConnected code", "broadcasted": false, "description": "This command will execute attached code whenever a player is connected to a MP session. The code will receive a number of special variables:", "server": false}, "setDirection": {"reviewLevel": 1, "syntax": "location setDirection direction", "local": false, "example": "location1 = createLocation [\"VegetationPalm\", getPos player, 200, 200]; location1 setText \"Benargee's Palm Tree\"; location1 setDirection 45;", "docSyntax": "location setDirection direction", "broadcasted": false, "description": "Set's the orientation of a location. It's area and map icon (if it's type uses an icon) will be rotated to this orientation.", "server": false}, "ctrlMapAnimCommit": {"reviewLevel": 1, "syntax": "ctrlMapAnimCommit controlName", "local": true, "example": "Center map on player: _ctrl ctrlMapAnimAdd [0, 0.05, player]; ctrlMapAnimCommit _ctrl;", "docSyntax": "ctrlMapAnimCommit controlName", "broadcasted": false, "description": "Plays the map animation.", "server": false}, "ctrlSetFontHeightH6": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontHeightH6 height", "local": false, "example": "_control ctrlSetFontHeightH6 0.05", "docSyntax": "controlName ctrlSetFontHeightH6 height", "broadcasted": false, "description": "Sets H6 font size of given HTML control.", "server": false}, "worldToModel": {"reviewLevel": 1, "syntax": "model worldToModel position", "local": false, "example": "_relPos = myObject worldToModel [0,0,0];", "docSyntax": "model worldToModel position", "broadcasted": false, "description": "Converts position from world space to object model space.", "server": false}, "nearestLocations": {"reviewLevel": 2, "syntax": "nearestLocations [position,[locationType,...],radius,sortPosition]", "local": false, "example": "_nearbyLocations = nearestLocations [position player, [\"RockArea\",\"VegetationFir\"], 100];", "docSyntax": "nearestLocations [position, [locationType,...], radius, sortPosition]", "broadcasted": false, "description": "Returns an array of locations of chosen type(s) within the given radius of the given position, sorted from nearest to farthest.", "server": false}, "deleteCenter": {"reviewLevel": 2, "syntax": "deleteCenter <objSide>", "local": false, "example": "deleteCenter east", "docSyntax": "deleteCenter side", "broadcasted": true, "description": "In a nutshell, this command removes gaming Side (see createCenter). If a side has >0 Groups it cannot be deleted. Center can only be created for: east, west, resistance, civilian and sideLogic, therefore only centers from the mentioned sides can be deleted.", "server": false}, "setMarkerDir": {"reviewLevel": 1, "syntax": "<string> setMarkerDir angle", "local": false, "example": "\"Marker1\" setMarkerDir 90;", "docSyntax": "markerName setMarkerDir angle", "broadcasted": true, "description": "Sets the orientation of the marker. Angle is in degrees.", "server": false}, "ctrlSetTooltip": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetTooltip <string>", "local": false, "example": "_control ctrlSetTooltip \"tooltip\";", "docSyntax": "control ctrlSetTooltip text", "broadcasted": false, "description": "Sets tooltip text of given control.", "server": false}, "onPlayerDisconnected": {"reviewLevel": 2, "syntax": "onPlayerDisconnected <code>", "local": false, "example": "onPlayerDisconnected \"diag_log [_id, _uid, _name]\";", "docSyntax": "onPlayerDisconnected code", "broadcasted": false, "description": "This command will execute attached code whenever a player is leaving an MP session. The code will receive a number of special variables:", "server": false}, "camPrepareTarget": {"reviewLevel": 1, "syntax": "<objCamera> camPrepareTarget position", "local": false, "example": "_camera camPrepareTarget getPos player", "docSyntax": "camera camPrepareTarget position", "broadcasted": false, "description": "Prepares the camera target to a position or to a target.", "server": false}, "toLower": {"reviewLevel": 2, "syntax": "toLower <string>", "local": false, "example": "hint toLower(\"AaBb1\") returns \"aabb1\"", "docSyntax": "toLower string", "broadcasted": false, "description": "Converts the supplied string to all lowercase characters.", "server": false}, "toUpper": {"reviewLevel": 2, "syntax": "toUpper <string>", "local": false, "example": "hint toUpper(\"AaBb1\") returns \"AABB1\"", "docSyntax": "toUpper string", "broadcasted": false, "description": "Converts the supplied string to all uppercase characters.", "server": false}, "precision": {"reviewLevel": 1, "syntax": "precision entity", "local": false, "example": "if (position _this distance _dangerPos <= precision _this) then {...}; //used in formationCDanger.fsm", "docSyntax": "precision entity", "broadcasted": false, "description": "Return the precision of the given entity, how is the entity able to be precise when moving to given target.", "server": false}, "ctrlSetFontH1B": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH1B fontName", "local": false, "example": "_control [[ctrlSetFontH1B]] \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH1B fontName", "broadcasted": false, "description": "Sets H1 bold font of given HTML control.", "server": false}, "waitUntil": {"reviewLevel": 1, "syntax": "waitUntil condition", "local": false, "example": "waitUntil { not alive player };", "docSyntax": "waitUntil condition", "broadcasted": false, "description": "Suspends execution of function or SQF based script until given condition is satisfied. This command will loop and call the code inside {} mostly every frame (depends on complexity of condition and overall engine load) until the code returns true. The execution of the rest of the script therefore will be suspended until waitUntil completes.", "server": false}, "assignedVehicleRole": {"reviewLevel": 2, "syntax": "assignedVehicleRole <objUnit>", "local": false, "example": "_RoleArray = assignedVehicleRole player;", "docSyntax": "assignedVehicleRole unitName", "broadcasted": false, "description": "Return the role a unit is assigned to within its assigned vehicle. The array which is returned contains:", "server": true}, "camPrepareDive": {"reviewLevel": 1, "syntax": "<objCamera> camPrepareDive dive", "local": false, "example": "_camera camPrepareDive -0.1", "docSyntax": "camera camPrepareDive dive", "broadcasted": false, "description": "Prepares the camera dive angle.", "server": false}, "ctrlSetFontHeightH2": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontHeightH2 height", "local": false, "example": "_control ctrlSetFontHeightH2 0.05", "docSyntax": "controlName ctrlSetFontHeightH2 height", "broadcasted": false, "description": "Sets H2 font size of given HTML control.", "server": false}, "ctrlMapAnimClear": {"reviewLevel": 1, "syntax": "ctrlMapAnimClear controlName", "local": true, "example": "", "docSyntax": "ctrlMapAnimClear controlName", "broadcasted": false, "description": "Clears the map animation.", "server": false}, "ctrlSetFontH6": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH6 fontName", "local": false, "example": "_control ctrlSetFontH6 \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH6 fontName", "broadcasted": false, "description": "Sets H6 font of given HTML control.", "server": false}, "runInitScript": {"reviewLevel": 2, "syntax": "runInitScript", "local": false, "example": "runInitScript;", "docSyntax": "runInitScript", "broadcasted": false, "description": "Fades in mission screen and re-executes init.sqf and init.sqs scripts. In Eden Editor the code inside the \"Init\" mission attribute is executed.", "server": false}, "isHideBehindScripted": {"reviewLevel": 2, "syntax": "<bool> = isHideBehindScripted <objVehicle>", "local": false, "example": "_isHidden = isHideBehindScripted _vehicle;", "docSyntax": "Boolean = isHideBehindScripted vehicle", "broadcasted": false, "description": "Return whether the vehicle has set the hideBehindScripted to true or not.", "server": false}, "terminate": {"reviewLevel": 1, "syntax": "terminate scriptHandle", "local": false, "example": "_script = [] execVM \"script.sqf\"; sleep 5; terminate _script;", "docSyntax": "terminate scriptHandle", "broadcasted": false, "description": "Terminates (aborts) spawned or execVMed script.", "server": false}, "setParticleCircle": {"reviewLevel": 1, "syntax": "particleSource setParticleCircle [radius,velocity]", "local": false, "example": "", "docSyntax": "particleSource setParticleCircle [radius, velocity]", "broadcasted": false, "description": "Updates particle source, creates particles in circle with given radius. Velocity is transformed and added to total velocity. Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleCircle [ circleRadius, circleVelocity ];", "server": true}, "ctrlSetForegroundColor": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetForegroundColor <scalar>", "local": false, "example": "_control ctrlSetForegroundColor [1, 0, 0, 1]", "docSyntax": "control ctrlSetForegroundColor color", "broadcasted": false, "description": "Sets foreground color of given control. Color is in format Color.", "server": false}, "lbIsSelected": {"reviewLevel": 2, "syntax": "<bool> = <uiControl> lbIsSelected <scalar>", "local": true, "example": "_selected = _control lbIsSelected 0;", "docSyntax": "Boolean = control lbIsSelected index", "broadcasted": false, "description": "Check whether given row of the given listbox is selected.", "server": false}, "setTriggerArea": {"reviewLevel": 2, "syntax": "<objTrigger> setTriggerArea [a,b,angle,isRectangle,c]", "local": false, "example": "_trigger setTriggerArea [100, 50, 45, false];", "docSyntax": "trigger setTriggerArea [a, b, angle, isRectangle, c]", "broadcasted": false, "description": "Defines the area monitored by the given trigger. The area could be either rectangular or elliptical. Since Arma 3 v1.59.135137 it is possible to define 3 dimensional area to monitor by specifying extra param for the area height (see pic).", "server": true}, "setMusicEffect": {"reviewLevel": 1, "syntax": "<objTrigger> setMusicEffect track", "local": false, "example": "_trigger setMusicEffect \"Track1\"", "docSyntax": "trigger setMusicEffect track", "broadcasted": false, "description": "Defines the music track played on activation. Track is a subclass name of CfgMusic. In addition, \"$STOP$\" (stops the current music track).", "server": false}, "cameraInterest": {"reviewLevel": 1, "syntax": "<scalar> = cameraInterest entity", "local": false, "example": "camInterest = cameraInterest myUnit;", "docSyntax": "Number = cameraInterest entity", "broadcasted": false, "description": "Return camera interest for given entity, as set by setCameraInterest, or as autodetected.", "server": false}, "locationPosition": {"reviewLevel": 1, "syntax": "locationPosition location", "local": false, "example": "_locationPos = locationPosition myLocation;", "docSyntax": "locationPosition location", "broadcasted": false, "description": "Returns the position of a location. If the location is attached to an object, that object's position is returned.", "server": false}, "reloadEnabled": {"reviewLevel": 2, "syntax": "reloadEnabled <objUnit>", "local": false, "example": "", "docSyntax": "reloadEnabled unitName", "broadcasted": false, "description": "Check whether magazine is reloaded whenever emptied.", "server": false}, "setCurrentWaypoint": {"reviewLevel": 1, "syntax": "groupName setCurrentWaypoint waypoint", "local": true, "example": "_grp setCurrentWaypoint [_grp, 1];", "docSyntax": "groupName setCurrentWaypoint waypoint", "broadcasted": false, "description": "Sets the currently active waypoint for a group.", "server": false}, "ctrlSetFontH3": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH3 fontName", "local": false, "example": "_control ctrlSetFontH3 \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH3 fontName", "broadcasted": false, "description": "Sets H3 font of given HTML control.", "server": false}, "actionKeysNames": {"reviewLevel": 1, "syntax": "actionKeysNames userAction", "local": false, "example": "_list = actionKeysNames \"ReloadMagazine\"; //\"R\"", "docSyntax": "actionKeysNames userAction", "broadcasted": false, "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.", "server": false}, "isNil": {"reviewLevel": 1, "syntax": "isNil variableName", "local": false, "example": "if (isNil \"_pokus\") then { _pokus = 0; };", "docSyntax": "isNil variableName", "broadcasted": false, "description": "Tests whether the variable defined by the String argument is undefined, or whether an expression result passed as Code is undefined.", "server": false}, "forceSpeed": {"reviewLevel": 2, "syntax": "<object> forceSpeed <scalar>", "local": false, "example": "_helicopter forceSpeed 150;", "docSyntax": "object forceSpeed speed", "broadcasted": false, "description": "Force the speed limit on given object (object will never attempt to move faster than given by forceSpeed). Use negative value to return to default behaviour. Used unit is m/s.", "server": false}, "deleteCollection": {"reviewLevel": 2, "syntax": "deleteCollection <object>", "local": false, "example": "deleteCollection unitName;", "docSyntax": "deleteCollection object", "broadcasted": false, "description": "Delete a collection. As example, used with a soldier, it'll hide the ingame model. When targetting ArmA 2 1.06 or newer, use hideObject instead. This function is a relic from dynamic building destruction development. It is left only for compatibility with scripts created before ArmA 2 1.06, and its functionality may be changed or removed in the future.", "server": false}, "fog": {"reviewLevel": 2, "syntax": "fog", "local": false, "example": "_foglevel = fog;", "docSyntax": "fog", "broadcasted": false, "description": "A getter for setFog. Returns the current value of the fog in range 0...1.", "server": false}, "nearestLocation": {"reviewLevel": 2, "syntax": "nearestLocation [position,locationClass]", "local": false, "example": "_nearestCity = nearestLocation [ getPos player, \"nameCity\"];", "docSyntax": "nearestLocation [position, locationClass]", "broadcasted": false, "description": "Return the closest location of specified class to a given position.", "server": false}, "displaySetEventHandler": {"reviewLevel": 2, "syntax": "<uiDisplay> displaySetEventHandler [handlerName,function]", "local": false, "example": "_control displaySetEventHandler [\"KeyDown\", \"\"]", "docSyntax": "display displaySetEventHandler [handlerName, function]", "broadcasted": false, "description": "Sets given event handler of given display. The return code of the provided function should indicate whether this event was handled correctly. This implies telling the engine whether it's default code should be executed. See User Interface Event Handlers for the full list of handler names. If applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.", "server": false}, "breakOut": {"reviewLevel": 2, "syntax": "breakOut <string>", "local": false, "example": "scopeName \"main\"; while {true} do { scopeName \"loop1\"; while {true} do { scopeName \"loop2\"; if (condition1) then {breakTo \"main\"}; // Breaks all scopes and return to \"main\" if (condition2) then {breakOut \"loop2\"}; // Breaks scope named \"loop2\" sleep 1; }; sleep 1; };", "docSyntax": "breakOut name", "broadcasted": false, "description": "Breaks the code execution out of scope {} named name. nil is returned. Scope name can be assigned using scopeName command.", "server": false}, "compile": {"reviewLevel": 1, "syntax": "compile expression", "local": false, "example": "_string = \"a = a + 1\"; _code = compile _string; call _code;", "docSyntax": "compile expression", "broadcasted": false, "description": "Compile expression.", "server": false}, "setMarkerPosLocal": {"reviewLevel": 2, "syntax": "<string> setMarkerPosLocal <array>", "local": false, "example": "\"MarkerOne\" setMarkerPosLocal getMarkerPos \"MarkerTwo\";", "docSyntax": "markerName setMarkerPosLocal pos", "broadcasted": false, "description": "Moves the marker. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. However getMarkerPos and markerPos will always return 0 for z.", "server": false}, "joinSilent": {"reviewLevel": 1, "syntax": "unitArray joinSilent <objGroup>", "local": false, "example": "[_unitOne, _unitTwo] joinSilent (group player);", "docSyntax": "unitArray joinSilent group", "broadcasted": true, "description": "Join all units in the array to given group silently (without radio message). To have a group member leave a group, join him with the grpNull group (e.g. [guy1] joinSilent grpNull), but beware, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.", "server": true}, "playerRespawnTime": {"reviewLevel": 2, "syntax": "playerRespawnTime", "local": false, "example": "waitUntil {playerRespawnTime <= 0};", "docSyntax": "playerRespawnTime", "broadcasted": false, "description": "Return the player's remaining time before respawn, or -1 if it is not available (such as when the player is alive).", "server": false}, "preloadObject": {"reviewLevel": 2, "syntax": "<scalar> preloadObject <object>", "local": false, "example": "[] spawn { waitUntil {10 preloadObject \"SoldierW\"}; hint \"Preload finished\"; };", "docSyntax": "distance preloadObject object", "broadcasted": false, "description": "Preloads all textures, materials and proxies needed to render given object. Works with both class names and objects. Returns true once all data is loaded and ready.", "server": false}, "ctrlSetTooltipColorText": {"reviewLevel": 2, "syntax": "<uiDisplay> ctrlSetTooltipColorText <scalar>", "local": false, "example": "_control ctrlSetTooltipColorText [1, 0, 0, 1]", "docSyntax": "display ctrlSetTooltipColorText color", "broadcasted": false, "description": "Sets tooltip text color of given control. Color is in format Color.", "server": false}, "landAt": {"reviewLevel": 1, "syntax": "plane landAt <scalar>", "local": true, "example": "_plane1 landAt 1;", "docSyntax": "plane landAt id", "broadcasted": true, "description": "Order an AI airplane to land at a given airport. ID is the number to identify which map airport you want the airplane to land at. Since Arma 3 v1.68 it is possible to also make the airplane land at a dynamic airport object (e.g. aircraft carrier, makeshift runway...).", "server": false}, "assignedVehicle": {"reviewLevel": 2, "syntax": "assignedVehicle <objUnit>", "local": true, "example": "_vehicle = assignedVehicle player;", "docSyntax": "assignedVehicle unit", "broadcasted": false, "description": "Returns the vehicle a unit is assigned to. If no vehicle is assigned objNull is returned.", "server": false}, "drawArrow": {"reviewLevel": 2, "syntax": "<objMap> drawArrow [from,to,<scalar>]", "local": false, "example": "findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { _this select 0 drawArrow [ player, player getRelPos [100, 0], [1,0,0,1] ]; }];", "docSyntax": "map drawArrow [from, to, color]", "broadcasted": false, "description": "Draws a single line arrow on the map. To draw a color filled arrow of custom shape see BIS_fnc_drawArrow", "server": false}, "drawRectangle": {"reviewLevel": 2, "syntax": "<objMap> drawRectangle [c,a,b,angle,<scalar>,fill]", "local": false, "example": "_ctrl drawRectangle [ getPos player, 20, 20, getDir player, [0,0,1,1], \"\" ];", "docSyntax": "map drawRectangle [c, a, b, angle, color, fill]", "broadcasted": false, "description": "Draws a rectangle on the map.", "server": false}, "assignedTarget": {"reviewLevel": 1, "syntax": "assignedTarget vehicleName", "local": true, "example": "_target = assignedTarget _T72", "docSyntax": "assignedTarget vehicleName", "broadcasted": false, "description": "Returns the target assigned to the vehicle/unit. To unassign the target use doWatch objNull or commandWatch objNull.", "server": false}, "dissolveTeam": {"reviewLevel": 1, "syntax": "dissolveTeam teamColor", "local": true, "example": "dissolveTeam \"RED\"", "docSyntax": "dissolveTeam teamColor", "broadcasted": false, "description": "Dissolves the given team. All members become members of the main team. Possible team values are: \"RED\", \"GREEN\", \"BLUE\" or \"YELLOW\".", "server": false}, "ctrlSetFont": {"reviewLevel": 1, "syntax": "<uiControl> ctrlSetFont fontName", "local": false, "example": "_control ctrlSetFont \"TahomaB\"", "docSyntax": "control ctrlSetFont fontName", "broadcasted": false, "description": "Sets the font for given control (see Fonts)", "server": false}, "onBriefingTeamSwitch": {"reviewLevel": 2, "syntax": "onBriefingTeamSwitch <string>", "local": false, "example": "onBriefingTeamSwitch \"TeamSwitchVoiceOver\"", "docSyntax": "onBriefingTeamSwitch soundName", "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the TeamSwitch tab is selected in the briefing.", "server": false}, "setMarkerDirLocal": {"reviewLevel": 1, "syntax": "<string> setMarkerDirLocal angle", "local": false, "example": "\"Marker1\" setMarkerDirLocal 90;", "docSyntax": "markerName setMarkerDirLocal angle", "broadcasted": false, "description": "Sets the orientation of the marker. Angle is in degrees.", "server": false}, "selectPlayer": {"reviewLevel": 2, "syntax": "selectPlayer <objUnit>", "local": true, "example": "selectPlayer bob;", "docSyntax": "selectPlayer unitName", "broadcasted": true, "description": "Moves player into given unit. In Arma 3 it is now not possible to selectPlayer into unit occupied by another player. Also avoid selecting player into editor placed units in multiplayer, as it may, on occasion, lead to some undefined behaviour. If you need to selectPlayer into another unit, consider creatingUnit dynamically.", "server": false}, "fadeRadio": {"reviewLevel": 1, "syntax": "<scalar> fadeRadio volume", "local": false, "example": "5 fadeRadio 0.1", "docSyntax": "time fadeRadio volume", "broadcasted": false, "description": "Causes a smooth change in the radio volume. The change duration is given by time, the target volume by volume. The default radio volume is 1.0.", "server": false}, "inGameUISetEventHandler": {"reviewLevel": 2, "syntax": "inGameUISetEventHandler [handlerName,function]", "local": false, "example": "inGameUISetEventHandler [\"Action\",\"hint 'Lights, Camera, Action!'; true\"];", "docSyntax": "inGameUISetEventHandler [handlerName, function]", "broadcasted": false, "description": "Sets given event handler of in-game UI. If EH function returns true, performed action is overridden. Event handlers available are:", "server": false}, "setSkill": {"reviewLevel": 1, "syntax": "<objUnit> setSkill skill", "local": false, "example": "_hero setSkill 1;", "docSyntax": "unit setSkill skill", "broadcasted": false, "description": "Sets ability level of person (commander unit). Value of skill may vary from 0 to 1.", "server": false}, "showWaypoint": {"reviewLevel": 1, "syntax": "waypoint showWaypoint show", "local": false, "example": "[_grp, 2] showWaypoint \"ALWAYS\";", "docSyntax": "waypoint showWaypoint show", "broadcasted": false, "description": "Sets the condition determining when the waypoint is shown.", "server": false}, "setMousePosition": {"reviewLevel": 2, "syntax": "setMousePosition [x,y]", "local": false, "example": "setMousePosition [0.5, 0.5];", "docSyntax": "setMousePosition [x, y]", "broadcasted": false, "description": "Moves mouse pointer to specified position on the screen. x and y could be any number, but will be clipped so mouse never leaves the screen area.", "server": false}, "isFormationLeader": {"reviewLevel": 2, "syntax": "isFormationLeader <objUnit>", "local": false, "example": "_isLeader = isFormationLeader player;", "docSyntax": "isFormationLeader unit", "broadcasted": false, "description": "Returns true if the specified unit is subgroup leader.", "server": false}, "moveToFailed": {"reviewLevel": 2, "syntax": "<bool> = moveToFailed <objUnit>", "local": false, "example": "", "docSyntax": "Boolean = moveToFailed person", "broadcasted": false, "description": "Check if latest low level moveTo command failed.", "server": false}, "selectionPosition": {"reviewLevel": 1, "syntax": "<object> selectionPosition selectionName", "local": false, "example": "_inModelPosition = player selectionPosition \"head_hit\";", "docSyntax": "object selectionPosition selectionName", "broadcasted": false, "description": "Search for selection in the object model (first in the memory level, then in geometry LODs).", "server": true}, "vectorUp": {"reviewLevel": 1, "syntax": "<array> = vectorUp objectName", "local": false, "example": "objVector = vectorUp myObject;", "docSyntax": "Array = vectorUp objectName", "broadcasted": false, "description": "Return object's up vector in world Position coordinates ( [x, y, z] ).", "server": true}, "camPrepareFocus": {"reviewLevel": 1, "syntax": "<objCamera> camPrepareFocus focusRange", "local": false, "example": "_camera camPrepareFocus [50, 1]", "docSyntax": "camera camPrepareFocus focusRange", "broadcasted": false, "description": "focusRange is in format [distance,blur]. Prepares the camera focus blur. [-1,1] will reset default values (auto focusing), [-1,-1] will disable postprocessing (all is focused).", "server": false}, "expectedDestination": {"reviewLevel": 2, "syntax": "<array> = expectedDestination <objUnit>", "local": true, "example": "_data = expectedDestination player;", "docSyntax": "Array = expectedDestination person", "broadcasted": false, "description": "Return expected destination of unit as an array.", "server": false}, "setSize": {"reviewLevel": 1, "syntax": "location setSize size", "local": false, "example": "myLocation setSize [10,30]", "docSyntax": "location setSize size", "broadcasted": false, "description": "Sets the size (radius) of a location. The width is 2 * x, the height is 2 * y.", "server": false}, "emptyPositions": {"returns": "scalar", "reviewLevel": 4, "syntax": "<objVehicle> emptyPositions <string>", "local": false, "example": "_freeCargoPositions = vehicle player emptyPositions \"cargo\";", "docSyntax": "vehicle emptyPositions position", "broadcasted": false, "description": "Returns the number of given positions in the vehicle. Positions can be \"Commander\", \"Driver\", \"Gunner\" or \"Cargo\"", "server": false}, "setFormationTask": {"reviewLevel": 2, "syntax": "<object> setFormationTask <objTask>", "local": false, "example": "", "docSyntax": "object setFormationTask task", "broadcasted": false, "description": "Set the current task of the formation member.", "server": false}, "setFriend": {"reviewLevel": 2, "syntax": "side1 setFriend [side2 ,<scalar>]", "local": false, "example": "west setFriend [resistance, 0];", "docSyntax": "side1 setFriend [side2 , value]", "broadcasted": true, "description": "Sets how friendly side1 is with side2. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly. Intended to be used on mission start. Changing value during mission can cause unexpected errors in AI behavior. See also Side relations.", "server": false}, "assignTeam": {"reviewLevel": 1, "syntax": "<objUnit> assignTeam team", "local": false, "example": "_soldier2 assignTeam \"RED\";", "docSyntax": "unit assignTeam team", "broadcasted": true, "description": "Assigns the unit (in case of a vehicle, its commander) to the given team. Team is an option in group control (unit management) menu that allows to split player group in teams and then give bulk order to separate teams. In order to operate properly, the command requires specific conditions:", "server": true}, "echo": {"reviewLevel": 2, "syntax": "echo <string>", "local": false, "example": "echo \"Text in logfile\"", "docSyntax": "echo text", "broadcasted": false, "description": "Sends any text into the debugger console or the logfile. Present in internal version only, not working in the retail version.", "server": false}, "formationMembers": {"reviewLevel": 2, "syntax": "<array> = formationMembers <objUnit>", "local": false, "example": "_drivers=FormationMembers _person", "docSyntax": "Array = formationMembers person", "broadcasted": false, "description": "Return list of units (drivers) in the formation.", "server": false}, "setPosASL": {"reviewLevel": 2, "syntax": "<object> setPosASL <array>", "local": false, "example": "player setPosASL [getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2];", "docSyntax": "object setPosASL pos", "broadcasted": true, "description": "Sets the object position above sea level. The pos array uses the PositionASL format.", "server": true}, "markerDir": {"reviewLevel": 2, "syntax": "<scalar> = markerDir <string>", "local": false, "example": "_mPos = markerDir \"markerOne\"", "docSyntax": "Number = markerDir markerName", "broadcasted": false, "description": "Get marker direction.", "server": true}, "positionCameraToWorld": {"reviewLevel": 1, "syntax": "positionCameraToWorld cameraPos", "local": false, "example": "_worldPos = positionCameraToWorld _cameraPos;", "docSyntax": "positionCameraToWorld cameraPos", "broadcasted": false, "description": "Transforms position from camera coordinate space to world coordinate space.", "server": false}, "enableReload": {"reviewLevel": 2, "syntax": "<object> enableReload <bool>", "local": false, "example": "_vehicle enableReload false;", "docSyntax": "object enableReload enable", "broadcasted": false, "description": "Enable / disable reload when magazine is empty.", "server": false}, "setLightBrightness": {"reviewLevel": 1, "syntax": "light setLightBrightness brightness", "local": true, "example": "myLight setLightBrightness 2;", "docSyntax": "light setLightBrightness brightness", "broadcasted": false, "description": "Set brightness of light.", "server": false}, "commandGetOut": {"reviewLevel": 2, "syntax": "commandGetOut <objUnit>", "local": true, "example": "commandGetOut _unitOne", "docSyntax": "commandGetOut unitName", "broadcasted": true, "description": "Orders the unit to get out from the vehicle (via the radio).", "server": false}, "breakTo": {"reviewLevel": 2, "syntax": "breakTo <string>", "local": false, "example": "scopeName \"main\"; while {true} do { scopeName \"loop1\"; while {true} do { scopeName \"loop2\"; if (condition1) then {breakTo \"main\"}; // Breaks all scopes and return to \"main\" if (condition2) then {breakOut \"loop2\"}; // Breaks scope named \"loop2\" sleep 1; }; sleep 1; };", "docSyntax": "breakTo name", "broadcasted": false, "description": "Breaks block to scope named name. Nil is returned. Scope name can be assigned using scopeName command.", "server": false}, "ctrlPosition": {"reviewLevel": 1, "syntax": "ctrlPosition controlName", "local": false, "example": "_pos = ctrlPosition _control;", "docSyntax": "ctrlPosition controlName", "broadcasted": false, "description": "Returns the current position of 2D control as [x, y, w, h] array. For 3D control it returns relative [x,y,z].", "server": false}, "needReload": {"reviewLevel": 2, "syntax": "<scalar> = needReload <objVehicle>", "local": false, "example": "_seriousness = needReload _vehicle;", "docSyntax": "Number = needReload vehicle", "broadcasted": false, "description": "Return how much vehicle wants to reload its weapons.", "server": false}, "camPreparePos": {"reviewLevel": 1, "syntax": "<objCamera> camPreparePos position", "local": false, "example": "_camera camPreparePos getPos player", "docSyntax": "camera camPreparePos position", "broadcasted": false, "description": "Prepares the camera position (format Position).", "server": false}, "triggerAttachVehicle": {"reviewLevel": 1, "syntax": "triggerName triggerAttachVehicle objects", "local": false, "example": "trigger triggerAttachVehicle [player];", "docSyntax": "triggerName triggerAttachVehicle objects", "broadcasted": false, "description": "Specifies the entity which will activate the selected trigger.", "server": true}, "setTriggerText": {"reviewLevel": 2, "syntax": "<objTrigger> setTriggerText <string>", "local": false, "example": "trigger setTriggerText \"Call for support\"", "docSyntax": "trigger setTriggerText text", "broadcasted": false, "description": "Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers.", "server": true}, "isPlayer": {"reviewLevel": 2, "syntax": "isPlayer <objUnit>", "local": false, "example": "if (isPlayer _Soldier1) then { _Soldier1 setDamage 1; };", "docSyntax": "isPlayer person", "broadcasted": false, "description": "Checks if given person is player. Returns true for headless clients as well.", "server": true}, "isServer": {"reviewLevel": 2, "syntax": "isServer", "local": false, "example": "if (!isServer) exitWith {};", "docSyntax": "isServer", "broadcasted": false, "description": "Returns true if the machine (executing the command) is the server in a multiplayer game or is running single player. isServer will return true for both, dedicated server and player hosted. Dedicated server could be detected with isDedicated command. Hosted by player server can be detected by presense of UI: isServer && hasInterface", "server": false}, "assert": {"reviewLevel": 1, "syntax": "assert condition", "local": false, "example": "assert (1>2);", "docSyntax": "assert condition", "broadcasted": false, "description": "Tests a condition and if the condition is false, displays error on screen (if -showscripterrors enabled) and logs error into .rpt file. It does not interrupt the script execution. If script was pre-processed with preprocessFileLineNumbers, it will also show/log the error line number and the file name.", "server": false}, "deleteWaypoint": {"reviewLevel": 2, "syntax": "deleteWaypoint [<objGroup>,<scalar>]", "local": false, "example": "deleteWaypoint [_grp, 2]", "docSyntax": "deleteWaypoint [group, index]", "broadcasted": true, "description": "Removes the specified waypoint.", "server": true}, "setVehiclePosition": {"reviewLevel": 2, "syntax": "<object> setVehiclePosition [position,markers,placement,special]", "local": false, "example": "player setVehiclePosition [[1000,2000], [\"Pos1\",\"Pos2\",\"Pos3\"], 0, \"CAN_COLLIDE\"]; Will place the player at either [1000,2000], or one of the three markers positions.", "docSyntax": "object setVehiclePosition [position, markers, placement, special]", "broadcasted": true, "description": "Moves the object to a given position (same as createVehicle placement algorithm). Uses either the position that's defined by the position param, or one of the marker positions from the markers array. The object is placed inside a circle with position as its center and placement as its radius. The type of placement could also be controlled with special.", "server": true}, "finishMissionInit": {"reviewLevel": 2, "syntax": "finishMissionInit", "local": false, "example": "finishMissionInit", "docSyntax": "finishMissionInit", "broadcasted": false, "description": "Finish world initialization before mission is launched.", "server": false}, "lbSortByValue": {"reviewLevel": 2, "syntax": "lbSortByValue <uiControl>", "local": false, "example": "lbSortByValue _control;", "docSyntax": "lbSortByValue control", "broadcasted": false, "description": "Sorts the ListBox entries by lbValue. The entries are sorted in ascending order. Also note that this command will mix up the entries randomly if multiple entries have the same value.", "server": false}, "catch": {"reviewLevel": 2, "syntax": "try-block catch <code>", "local": false, "example": "", "docSyntax": "try-block catch code", "broadcasted": false, "description": "Processes code when an exception is thrown in a try block. The exception caught can be found in the _exception variable.", "server": false}, "parseNumber": {"reviewLevel": 2, "syntax": "parseNumber <string>", "local": false, "example": "_number = parseNumber \"0.125\"; //0.125", "docSyntax": "parseNumber string", "broadcasted": false, "description": "An SQF equivalent of C++ atof function. Parses the string, interpreting its content as a floating point number.", "server": false}, "ctrlMapWorldToScreen": {"reviewLevel": 1, "syntax": "<uiControl> ctrlMapWorldToScreen position", "local": false, "example": "_screenCoord = _control ctrlMapWorldToScreen _worldCoord;", "docSyntax": "control ctrlMapWorldToScreen position", "broadcasted": false, "description": "Transfers a map control world position to screen coordinates.", "server": false}, "setAperture": {"reviewLevel": 1, "syntax": "setAperture aperture", "local": false, "example": "setAperture 0.3;", "docSyntax": "setAperture aperture", "broadcasted": false, "description": "Sets custom camera aperture (-1 to do it automatically).", "server": false}, "camUseNVG": {"reviewLevel": 1, "syntax": "camUseNVG set", "local": false, "example": "camUseNVG true;", "docSyntax": "camUseNVG set", "broadcasted": false, "description": "Set / clear using of night vision during cutscenes. This command only works with camCreate created camera that is currently the main camera for the player (see example).", "server": false}, "unassignTeam": {"reviewLevel": 1, "syntax": "unassignTeam vehicleName", "local": true, "example": "unassignTeam _soldier2", "docSyntax": "unassignTeam vehicleName", "broadcasted": false, "description": "Unassigns the unit (in the case of a vehicle its commander unit) from his team. This is equal to unit assignTeam \"MAIN\".", "server": false}, "getNumber": {"reviewLevel": 1, "syntax": "<scalar> = getNumber config", "local": false, "example": "_value = getNumber (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"maxSpeed\");", "docSyntax": "Number = getNumber config", "broadcasted": false, "description": "Extract number from config entry.", "server": false}, "setParticleRandom": {"reviewLevel": 1, "syntax": "particleSource setParticleRandom [lifeTime,position,moveVelocity,rotationVelocity,size,<scalar>,randomDirectionPeriod,randomDirectionIntensity,{angle},bounceOnSurface]", "local": false, "example": "_PS setParticleRandom [0, [0.1, 0.1, 0.1], [0, 0, 0.5], 0, 0.1, [0, 0, 0, 0], 0, 0];", "docSyntax": "particleSource setParticleRandom [lifeTime, position, moveVelocity, rotationVelocity, size, color, randomDirectionPeriod, randomDirectionIntensity, {angle}, bounceOnSurface]", "broadcasted": false, "description": "Sets randomization of particle source parameters. Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleRandom [ lifeTimeVar, positionVar, moveVelocityVar, rotationVelocityVar, sizeVar, colorVar, randomDirectionPeriodVar, randomDirectionIntensityVar, angleVar, bounceOnSurfaceVar ];", "server": true}, "ctrlSetFontHeightH1": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontHeightH1 height", "local": false, "example": "_control ctrlSetFontHeightH1 0.05", "docSyntax": "controlName ctrlSetFontHeightH1 height", "broadcasted": false, "description": "Sets H1 font size of given HTML control.", "server": false}, "composeText": {"reviewLevel": 2, "syntax": "composeText [text1,text2,...]", "local": false, "example": "_txt = composeText [\"First line\", image \"data\\isniper.paa\", lineBreak, \"Second line\"];", "docSyntax": "composeText [text1, text2, ...]", "broadcasted": false, "description": "Creates a structured text by joining the given structured or plain texts.", "server": false}, "posWorldToScreen": {"reviewLevel": 1, "syntax": "<objMap> posWorldToScreen position", "local": false, "example": "", "docSyntax": "map posWorldToScreen position", "broadcasted": false, "description": "Convert world coordinates to screen coordinates in map.", "server": false}, "hideBody": {"reviewLevel": 2, "syntax": "hideBody <objUnit>", "local": true, "example": "hideBody player1;", "docSyntax": "hideBody unit", "broadcasted": true, "description": "Hides dead body of the given unit. After a short delay, the body slowly sinks into the ground. After awhile, when group of the unit becomes grpNull, the body gets deleted and becomes objNull. If applied to alive unit, nothing happens until unit dies, then the unit's body gets hidden. If a dead unit is human player, the body is hidden but not deleted until player respawns.", "server": false}, "enableAttack": {"reviewLevel": 2, "syntax": "<objGroup> enableAttack <bool>", "local": true, "example": "_group1 enableAttack true", "docSyntax": "group enableAttack enable", "broadcasted": true, "description": "Set if leader can issue attack commands to the soldiers in his group.", "server": false}, "ctrlSetFocus": {"reviewLevel": 1, "syntax": "ctrlSetFocus controlName", "local": false, "example": "ctrlSetFocus _control", "docSyntax": "ctrlSetFocus controlName", "broadcasted": false, "description": "Set the input focus on given control.", "server": false}, "teamSwitch": {"reviewLevel": 2, "syntax": "teamSwitch", "local": false, "example": "teamSwitch;", "docSyntax": "teamSwitch", "broadcasted": false, "description": "Invoke the Team Switch dialog (force it even when conditions are not met). There has to be at least one playable unit for team switch to work, and for this command to work in MP, respawn type in description.ext should be 5 (SIDE).", "server": false}, "ctrlSetFontH3B": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH3B fontName", "local": false, "example": "_control ctrlSetFontH3B \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH3B fontName", "broadcasted": false, "description": "Sets H3 bold font of given HTML control.", "server": false}, "isClass": {"reviewLevel": 1, "syntax": "<bool> = isClass config", "local": false, "example": "_ok = isClass (configFile >> \"CfgVehicles\"); Result is true.", "docSyntax": "Boolean = isClass config", "broadcasted": false, "description": "Check if config entry represents config class.", "server": false}, "formatText": {"reviewLevel": 2, "syntax": "formatText [format,arg1,arg2,...]", "local": false, "example": "_text = formatText [\"Image:\u00c2\u00a0%1\", image \"data\\isniper.paa\"];", "docSyntax": "formatText [format, arg1, arg2, ...]", "broadcasted": false, "description": "Creates a structured text by replacing\u00c2\u00a0%1,\u00c2\u00a0%2, etc. in format with plain", "server": false}, "setVehicleArmor": {"reviewLevel": 1, "syntax": "vehicleName setVehicleArmor <scalar>", "local": true, "example": "player setVehicleArmor 0.5;", "docSyntax": "vehicleName setVehicleArmor value", "broadcasted": true, "description": "Sets the armor (or health for men) state of the vehicle (a value from 0 to 1). Works like setDamage only in reverse: player setVehicleArmor 1 is the same as player setDamage 0, and player setVehicleArmor 0 is the same as player setDamage 0.97", "server": false}, "setLightColor": {"reviewLevel": 1, "syntax": "light setLightColor [r,g,b]", "local": true, "example": "myLight setLightColor [0.5,0,0]; //produces red", "docSyntax": "light setLightColor [r, g, b]", "broadcasted": false, "description": "Set diffuse color of light. Illuminates surfaces that are facing the light.", "server": false}, "toArray": {"reviewLevel": 2, "syntax": "toArray <string>", "local": false, "example": "hint format[\"%1\",toArray(\"Aa\u00c5\u2019\")] returns \"[65,97,338]\"", "docSyntax": "toArray string", "broadcasted": false, "description": "Converts the supplied String into an Array of Numbers.", "server": false}, "preloadTitleRsc": {"reviewLevel": 2, "syntax": "preloadTitleRsc [<string>,type]", "local": false, "example": "_ok=preloadTitleRsc [\"BIS\", \"PLAIN\"]", "docSyntax": "preloadTitleRsc [name, type]", "broadcasted": false, "description": "Resource title - Preload data. The resource can be defined in the Description.ext file.", "server": false}, "ctrlSetFontPB": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontPB fontName", "local": false, "example": "_control ctrlSetFontPB \"TahomaB\"", "docSyntax": "controlName ctrlSetFontPB fontName", "broadcasted": false, "description": "Sets P bold font of given HTML control.", "server": false}, "synchronizeWaypoint": {"reviewLevel": 1, "syntax": "waypoint synchronizeWaypoint [waypoint1,waypoint2,...]", "local": false, "example": "[_group1, 2] synchronizeWaypoint [ [_group2, 3] ];", "docSyntax": "waypoint synchronizeWaypoint [waypoint1, waypoint2, ...]", "broadcasted": false, "description": "Synchronizes the waypoint with other waypoints. Each waypoint is given as an array [group, index].", "server": false}, "reload": {"reviewLevel": 2, "syntax": "reload <objUnit>", "local": false, "example": "if (needReload player == 1) then {reload player};", "docSyntax": "reload unitName", "broadcasted": false, "description": "Reload all weapons", "server": false}, "lightDetachObject": {"reviewLevel": 1, "syntax": "lightDetachObject light", "local": false, "example": "LightDetachObject _light", "docSyntax": "lightDetachObject light", "broadcasted": false, "description": "Detach light from object.", "server": false}, "lookAt": {"reviewLevel": 1, "syntax": "<objUnit>(s) lookAt position", "local": false, "example": "_someSoldier lookAt _otherSoldier", "docSyntax": "unit(s) lookAt position", "broadcasted": false, "description": "Control what the unit(s) is/are looking at (target or position).", "server": false}, "setWaypointPosition": {"reviewLevel": 1, "syntax": "waypoint setWaypointPosition [center,radius]", "local": false, "example": "[_grp, 2] setWaypointPosition [position player, 0];", "docSyntax": "waypoint setWaypointPosition [center, radius]", "broadcasted": false, "description": "Attempts to move given waypoint to a random position inside a circle with the given center and radius. The waypoint will be placed similar to \"NONE\" attribute in setVehiclePosition, even if the radius is 0, which means it could still be off center. In order to force waypoint to the exact position, similar to \"CAN_COLLIDE\" attribute, use negative radius, like -1 for example. You will probably laugh at this, but be warned:", "server": false}, "getSpeed": {"reviewLevel": 1, "syntax": "<object> getSpeed speedMode", "local": false, "example": "_spd = player getSpeed \"FAST\";", "docSyntax": "object getSpeed speedMode", "broadcasted": false, "description": "Get the speed for the given speed mode. SpeedMode can be:", "server": true}, "camSetFocus": {"reviewLevel": 1, "syntax": "<objCamera> camSetFocus focusRange", "local": false, "example": "_camera camSetFocus [50, 1];", "docSyntax": "camera camSetFocus focusRange", "broadcasted": false, "description": "Sets camera focus range in format [distance, blur]. blur param - sets the camera focus blur. It does not automatically commit changes (see camCommit). Use [-1, -1] to disable focus completely.", "server": false}, "ctrlFade": {"reviewLevel": 1, "syntax": "<scalar> = ctrlFade controlName", "local": false, "example": "_scale = ctrlFade _control", "docSyntax": "Number = ctrlFade controlName", "broadcasted": false, "description": "Returns the current fade factor of control.", "server": false}, "setSide": {"reviewLevel": 1, "syntax": "location setSide <objSide>", "local": false, "example": "myLocation setSide resistance", "docSyntax": "location setSide side", "broadcasted": false, "description": "Sets a location's side. The default side is Unknown.", "server": false}, "setCameraInterest": {"reviewLevel": 1, "syntax": "entity setCameraInterest interest", "local": false, "example": "_soldier setCameraInterest 50;", "docSyntax": "entity setCameraInterest interest", "broadcasted": false, "description": "Set camera interest for given entity. Camera interest is by default 0. Any unit which is speaking has its camera interest raised to 50. Camera interest is used to focus camera to control depth of field in cutscenes. Combination of camera interest, unit position of the screen, unit movement, unit type, and some other properties is used to determine which unit to focus at. Higher camera interest increases the chance of the unit being focused.", "server": false}, "setTriggerTimeout": {"reviewLevel": 2, "syntax": "<objTrigger> setTriggerTimeout [min,mid,max,interruptable]", "local": false, "example": "_trigger setTriggerTimeout [5, 10, 7, false];", "docSyntax": "trigger setTriggerTimeout [min, mid, max, interruptable]", "broadcasted": false, "description": "Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid). If the last argument is true, the condition must be fullfilled all the time.", "server": true}, "camCommitPrepared": {"reviewLevel": 2, "syntax": "<objCamera> camCommitPrepared <scalar>", "local": true, "example": "//create a camera object _cam = \"camera\" camCreate [5600,4800,10]; _cam camPrepareTarget player; _cam cameraEffect [\"internal\", \"BACK\"]; _cam camCommitPrepared 0; //smoothly move the camera to its new position in 6 seconds. _cam camPreparePos [5680,4720,20]; _cam camCommitPrepared 6; waitUntil {camCommitted _cam}; //proceed", "docSyntax": "camera camCommitPrepared time", "broadcasted": false, "description": "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately.", "server": false}, "teamSwitchEnabled": {"reviewLevel": 2, "syntax": "<bool> = teamSwitchEnabled", "local": false, "example": "_enabled = teamSwitchEnabled;", "docSyntax": "Boolean = teamSwitchEnabled", "broadcasted": false, "description": "Check if Team Switch is currently enabled. Team Switch is enabled by default.", "server": false}, "ctrlSetFontH6B": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH6B fontName", "local": false, "example": "_control ctrlSetFontH6B \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH6B fontName", "broadcasted": false, "description": "Sets H6 bold font of given HTML control.", "server": false}, "ctrlParent": {"reviewLevel": 1, "syntax": "<uiDisplay> = ctrlParent controlName", "local": false, "example": "_display = ctrlParent _control", "docSyntax": "Display = ctrlParent controlName", "broadcasted": false, "description": "Returns container of the given control.", "server": false}, "deleteMarkerLocal": {"reviewLevel": 2, "syntax": "deleteMarkerLocal <string>", "local": false, "example": "deleteMarkerLocal \"Marker1\"", "docSyntax": "deleteMarkerLocal markerName", "broadcasted": false, "description": "Destroys the given marker.", "server": false}, "markerText": {"reviewLevel": 2, "syntax": "<string> = markerText <string>", "local": false, "example": "hint format [\"Marker Text:\u00c2\u00a0%1\",markerText \"Marker1\"];", "docSyntax": "String = markerText markerName", "broadcasted": false, "description": "Get marker text.", "server": true}, "setWaypointFormation": {"reviewLevel": 1, "syntax": "waypoint setWaypointFormation formation", "local": false, "example": "[_grp, 2] setWaypointFormation \"LINE\";", "docSyntax": "waypoint setWaypointFormation formation", "broadcasted": true, "description": "Switches the group formation when the waypoint becomes active.", "server": false}, "lbSetSelected": {"reviewLevel": 2, "syntax": "<uiControl> lbSetSelected [<scalar>,selected]", "local": false, "example": "_control lbSetSelected [0, true];", "docSyntax": "control lbSetSelected [index, selected]", "broadcasted": false, "description": "Set the selection state of the given row of the given listbox of style LB_MULTI. For single selection listbox use lbSetCurSel instead.", "server": false}, "waypoints": {"reviewLevel": 1, "syntax": "<array> = waypoints groupName", "local": false, "example": "waypoints player;", "docSyntax": "Array = waypoints groupName", "broadcasted": false, "description": "Returns an array of waypoints for the specified unit/group.", "server": true}, "try": {"reviewLevel": 2, "syntax": "try <code>", "local": false, "example": "", "docSyntax": "try code", "broadcasted": false, "description": "Defines a try-catch structure. This sets up an exception handling block. Any thrown exception in a try block is caught in a catch block. The structured exception block has the following form: try //begin of try-catch block { //block, that can throw exception } catch { //block, that process an exception. Exception is described in _exception variable };", "server": false}, "setVehicleAmmo": {"reviewLevel": 1, "syntax": "vehicleName setVehicleAmmo <scalar>", "local": true, "example": "player setVehicleAmmo 0;", "docSyntax": "vehicleName setVehicleAmmo value", "broadcasted": true, "description": "Sets how much ammunition (compared to a full state defined by the vehicle type) the vehicle has. Note that the ammo will be added only to local turrets. To check locality of turret use turretLocal. The value ranges from 0 to 1.", "server": false}, "vehicleVarName": {"reviewLevel": 2, "syntax": "vehicleVarName <object>", "local": false, "example": "hint vehicleVarName player;", "docSyntax": "vehicleVarName object", "broadcasted": false, "description": "Returns the name of the variable which contains a primary editor reference to this object. This is the variable given in the Insert Unit dialog / name field, in the editor. It can be changed using setVehicleVarName.", "server": true}, "rank": {"reviewLevel": 2, "syntax": "rank <objUnit>", "local": false, "example": "_rank = rank player;", "docSyntax": "rank unitName", "broadcasted": false, "description": "Returns the rank of the given unit. Rank can be one of the following:", "server": true}, "str": {"reviewLevel": 2, "syntax": "str <scalar>", "local": false, "example": "_s = str (2 + 3); The value of _s is the string \"5\"", "docSyntax": "str value", "broadcasted": false, "description": "Converts any value into a string by placing \" and \" around the argument. Since Arma 3 v1.63.137891 this command will correctly escape all \" inside a string: // Before the fix: hint str \"string \"\" string\"; // \"string \" string\" <- invalid string call compile str \"string \"\" string\"; // ERROR // After the fix: hint str \"string \"\" string\"; // \"string \"\" string\" <- valid string call compile str \"string \"\" string\"; // OK When used on object, object debug name is returned.", "server": false}, "formationDirection": {"reviewLevel": 2, "syntax": "<scalar> = formationDirection <objUnit>", "local": true, "example": "_degrees = FormationDirection _unit", "docSyntax": "Number = formationDirection unitName", "broadcasted": false, "description": "Return the direction in degrees of the 'unit' watching in formation.", "server": false}, "ctrlSetFontHeightH4": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontHeightH4 height", "local": false, "example": "_control ctrlSetFontHeightH4 0.05", "docSyntax": "controlName ctrlSetFontHeightH4 height", "broadcasted": false, "description": "Sets H3 font size of given HTML control.", "server": false}, "formationTask": {"reviewLevel": 2, "syntax": "<string> = formationTask <objUnit>", "local": false, "example": "_CurrentTask = FormationTask _person", "docSyntax": "String = formationTask person", "broadcasted": false, "description": "Return the current task of the unit in the formation. You can't use it in ArmA 2, it will always returns \"NOTHING\"", "server": false}, "createLocation": {"reviewLevel": 2, "syntax": "createLocation [className,position,sizeX,sizeY]", "local": false, "example": "_location = createLocation [ \"NameVillage\" , [4035,2151,10], 100, 100];", "docSyntax": "createLocation [className, position, sizeX, sizeY]", "broadcasted": false, "description": "Creates a location of the specified class and dimensions at the specified position. Classes are defined in CfgLocationTypes.", "server": false}, "min": {"reviewLevel": 1, "syntax": "a min b", "local": false, "example": "", "docSyntax": "a min b", "broadcasted": false, "description": "The smaller of a,b", "server": false}, "ctrlSetActiveColor": {"reviewLevel": 2, "syntax": "<uiDisplay> ctrlSetActiveColor <scalar>", "local": false, "example": "_control ctrlSetActiveColor [1, 0, 0, 1]", "docSyntax": "display ctrlSetActiveColor color", "broadcasted": false, "description": "Sets text color of given control when control is selected.", "server": false}, "toString": {"reviewLevel": 2, "syntax": "toString <array>", "local": false, "example": "hint toString [65,97,338]; returns \"Aa\u00c5\u2019\"", "docSyntax": "toString array", "broadcasted": false, "description": "Converts the supplied Array of Numbers into a String.", "server": false}, "lbSort": {"reviewLevel": 2, "syntax": "lbSort <uiControl>", "local": false, "example": "lbSort _myControl;", "docSyntax": "lbSort control", "broadcasted": false, "description": "Sorts listbox entries alphabetically ascending by their lbText", "server": false}, "setVehicleLock": {"reviewLevel": 1, "syntax": "vehicleName setVehicleLock lockState", "local": true, "example": "_veh1 setVehicleLock \"LOCKED\";", "docSyntax": "vehicleName setVehicleLock lockState", "broadcasted": true, "description": "Sets vehicle lock. Possible values:", "server": false}, "ctrlSetTextColor": {"reviewLevel": 2, "syntax": "<uiDisplay> ctrlSetTextColor <scalar>", "local": false, "example": "_control ctrlSetTextColor [1, 0, 0, 1]", "docSyntax": "display ctrlSetTextColor color", "broadcasted": false, "description": "Sets text color of given control. Color is in format Color. As of Arma 3 v1.40 this command could also be used to change fill colour or the DialogControls-ProgressBar.", "server": false}, "createMine": {"reviewLevel": 2, "syntax": "createMine [type,position,markers,placement]", "local": false, "example": "_mine = createMine [\"MineMine\", position player, [], 0];", "docSyntax": "createMine [type, position, markers, placement]", "broadcasted": false, "description": "Creates a mine of the given type (type is the name of the subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The mine is placed inside a circle with this position as its center and placement as its radius.", "server": false}, "setVariable": {"returns": "any", "reviewLevel": 4, "syntax": "<string|object> setVariable [<string>,<scalar>]", "local": false, "example": "_myTruck setVariable [\"myPublicVariable\", 123, true];", "docSyntax": "varspace setVariable [name, value]", "broadcasted": true, "description": "Set variable to given value in the variable space of given element.", "server": true}, "isMarkedForCollection": {"reviewLevel": 2, "syntax": "<bool> = isMarkedForCollection <object>", "local": false, "example": "_marked = isMarkedForCollection _truck", "docSyntax": "Boolean = isMarkedForCollection object", "broadcasted": false, "description": "Checks whether the object is marked for weapons collection.", "server": true}, "setWaypointType": {"reviewLevel": 1, "syntax": "waypoint setWaypointType type", "local": false, "example": "[_grp, 2] setWaypointType \"HOLD\";", "docSyntax": "waypoint setWaypointType type", "broadcasted": false, "description": "Changes the waypoint type. Type can be:", "server": false}, "attackEnabled": {"reviewLevel": 2, "syntax": "<bool> = attackEnabled <string>", "local": false, "example": "if (not attackEnabled _soldier) then {_soldier setCombatMode \"Careless\"}", "docSyntax": "Boolean = attackEnabled name", "broadcasted": false, "description": "Return whether a group's leader can issue attack commands to soldiers under his command.", "server": true}, "image": {"reviewLevel": 1, "syntax": "Structured <string> = image filename", "local": false, "example": "_txt1 = image \"data\\isniper.paa\";", "docSyntax": "Structured Text = image filename", "broadcasted": false, "description": "Creates a structured text containing the given image.", "server": false}, "getArray": {"reviewLevel": 1, "syntax": "<array> = getArray config", "local": false, "example": "_array = getArray (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"threat\")", "docSyntax": "Array = getArray config", "broadcasted": false, "description": "Extract array from config entry.", "server": false}, "round": {"reviewLevel": 1, "syntax": "<scalar> = round x", "local": false, "example": "_val= round 5.25, result is 5", "docSyntax": "Number = round x", "broadcasted": false, "description": "Rounds up or down to the closest integer.", "server": false}, "effectiveCommander": {"reviewLevel": 2, "syntax": "effectiveCommander <objVehicle>", "local": false, "example": "_commander = effectiveCommander tank;", "docSyntax": "effectiveCommander vehicle", "broadcasted": false, "description": "Returns the effective commander of the vehicle. Effective commander is the player whom driver AI will listen to. So if in a tank there is a gunner and a commander and AI driver, if the effectiveCommander is gunner, then gunner pressing WASD will give AI orders to move. If gunner jumps out and then enters tank again, the effectiveCommander role most likely has changed to commander that remained in tank. Also the assignment seems to work on first come first served basis.", "server": false}, "verifySignature": {"reviewLevel": 1, "syntax": "<bool> = verifySignature filename", "local": false, "example": "verifySignature \"@MyAddon\\Addons\\SomeAddon.pbo\";", "docSyntax": "Boolean = verifySignature filename", "broadcasted": false, "description": "Check if file is signed by any key present in game keys folders. Note: On client, it does not check against the keys accepted by server.", "server": false}, "setWaypointSpeed": {"reviewLevel": 1, "syntax": "waypoint setWaypointSpeed mode", "local": false, "example": "[_grp, 2] setWaypointSpeed \"FULL\";", "docSyntax": "waypoint setWaypointSpeed mode", "broadcasted": true, "description": "Switches the group speed mode when the waypoint becomes active.", "server": false}, "setVehicleId": {"reviewLevel": 1, "syntax": "vehicleName setVehicleId <scalar>", "local": false, "example": "player setVehicleId 1", "docSyntax": "vehicleName setVehicleId id", "broadcasted": false, "description": "Sets id (integer value) to vehicle. By this id vehicle is referenced by triggers and waypoints.", "server": false}, "setVectorUp": {"reviewLevel": 2, "syntax": "<object> setVectorUp [x,y,z]", "local": true, "example": "Turn object upside down: _obj setVectorUp [0,0,-1];", "docSyntax": "object setVectorUp [x, y, z]", "broadcasted": true, "description": "Set object's up vector. Direction of the object remain unchanged. Default object's vectorUp is [0,0,1]. In Multiplayer, setVectorUp must be executed on the machine where the object it applied to is local.", "server": false}, "glanceAt": {"reviewLevel": 1, "syntax": "<objUnit>(s) glanceAt position", "local": false, "example": "_someSoldier glanceAt _otherSoldier", "docSyntax": "unit(s) glanceAt position", "broadcasted": false, "description": "Control what the unit is glancing at (target or Position). How frequently the unit is glancing there depends on behaviour.", "server": false}, "respawnVehicle": {"reviewLevel": 2, "syntax": "<objVehicle> respawnVehicle [<scalar>,count]", "local": true, "example": "car respawnVehicle [5, 3]; 'car' will respawn at the predefined marker for the side after 5 seconds. The unit will respawn 3 times.", "docSyntax": "vehicle respawnVehicle [delay, count]", "broadcasted": true, "description": "Sets vehicle as respawnable in MP game. The vehicle will be spawned at the locality and coordinates it was prior to destruction. If respawn type is set to base respawn (type 3) and vehicle respawn marker is provided (respawn_vehicle_XXXSIDEXXX), vehicle will spawn on the marker.", "server": false}, "find": {"reviewLevel": 1, "syntax": "<array> find x", "local": false, "example": "[\"Apples\",\"Oranges\",\"Pears\"] find \"Oranges\"; //result is 1 [1,[2],[[3]]] find [[3]]; //result is 2", "docSyntax": "array find x", "broadcasted": false, "description": "Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found.", "server": false}, "ctrlSetFontH4B": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH4B fontName", "local": false, "example": "_control ctrlSetFontH4B \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH4B fontName", "broadcasted": false, "description": "Sets H4 bold font of given HTML control.", "server": false}, "ctrlMapScreenToWorld": {"reviewLevel": 2, "syntax": "<objMap> ctrlMapScreenToWorld [x,y]", "local": false, "example": "_WorldCoord = _Control ctrlMapScreenToWorld _ScreenCoord", "docSyntax": "map ctrlMapScreenToWorld [x, y]", "broadcasted": false, "description": "Convert screen coordinates in map to world coordinates.", "server": false}, "animationState": {"reviewLevel": 2, "syntax": "animationState <objUnit>", "local": false, "example": "_state = animationState player;", "docSyntax": "animationState unitName", "broadcasted": false, "description": "Returns the name of a unit's current primary animation. Seems to be forced to lower case in Arma 3.", "server": true}, "ceil": {"reviewLevel": 1, "syntax": "<scalar> = ceil x", "local": false, "example": "ceil 5.25", "docSyntax": "Number = ceil x", "broadcasted": false, "description": "The ceil value of x.", "server": false}, "processInitCommands": {"reviewLevel": 2, "syntax": "processInitCommands", "local": false, "example": "", "docSyntax": "processInitCommands", "broadcasted": true, "description": "Process statements stored using setVehicleInit. The statements will only be executed once even if processInitCommands is called multiple times.", "server": false}, "actionKeys": {"reviewLevel": 1, "syntax": "actionKeys userAction", "local": false, "example": "_array = actionKeys \"ReloadMagazine\"", "docSyntax": "actionKeys userAction", "broadcasted": false, "description": "Returns Array containing dikCodes of keys, buttons and combos assigned to the given user action. Action names could be found in config class ControllerSchemes or user action names or user profile, for example:", "server": false}, "setDestination": {"reviewLevel": 2, "syntax": "<object> setDestination [position,planningMode,forceReplan]", "local": true, "example": "bob setDestination [screenToWorld [0.5,0.5], \"LEADER PLANNED\", true]", "docSyntax": "object setDestination [position, planningMode, forceReplan]", "broadcasted": true, "description": "Set the destination for path planning of the pilot. Possible values for planningMode are:", "server": false}, "position location": {"reviewLevel": 1, "syntax": "<array> = position location", "local": false, "example": "_myLocationHomePos = position myLocation", "docSyntax": "Array = position location", "broadcasted": false, "description": "Returns a location's position. If it is attached to an object, the location's set or created position is returned rather than object's position.", "server": false}, "camPrepareDir": {"reviewLevel": 1, "syntax": "<objCamera> camPrepareDir direction", "local": false, "example": "_camera camPrepareDir 150", "docSyntax": "camera camPrepareDir direction", "broadcasted": false, "description": "Prepares the camera heading.", "server": false}, "keyName": {"reviewLevel": 1, "syntax": "keyName dikCode", "local": false, "example": "_name = keyName 28; //result is \"Enter\"", "docSyntax": "keyName dikCode", "broadcasted": false, "description": "Returns the name of a button (on the keyboard, mouse or joystick) with the given code.", "server": false}, "ctrlSetBackgroundColor": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetBackgroundColor <scalar>", "local": false, "example": "_control ctrlSetBackgroundColor [1, 0, 0, 1]", "docSyntax": "control ctrlSetBackgroundColor color", "broadcasted": false, "description": "Sets background color of given control.", "server": false}, "cutFadeOut": {"reviewLevel": 1, "syntax": "layer cutFadeOut duration", "local": false, "example": "0 cutFadeOut 2;", "docSyntax": "layer cutFadeOut duration", "broadcasted": false, "description": "Terminates the effect in the given layer by fading it out according to the given duration. If named layer used and it doesn't exist, it will be allocated.", "server": false}, "getHideFrom": {"reviewLevel": 1, "syntax": "<object> getHideFrom enemy", "local": false, "example": "_pos = player getHideFrom _enemy;", "docSyntax": "object getHideFrom enemy", "broadcasted": false, "description": "Returns the Position where object believes the enemy to be. If there is no direct line of sight between the object and the enemy, this position is extrapolated based on the last known position and speed of the enemy. A returned position of [0,0,0] implies that object does not knowAbout enemy. If enemy is null it is some position in front of the object or enemy position.", "server": false}, "setMarkerShapeLocal": {"reviewLevel": 1, "syntax": "<string> setMarkerShapeLocal shape", "local": false, "example": "\"Marker1\" setMarkerShapeLocal \"RECTANGLE\";", "docSyntax": "markerName setMarkerShapeLocal shape", "broadcasted": false, "description": "Selects the shape (type) of the marker. Shape can be \"ICON\", \"RECTANGLE\" or \"ELLIPSE\".", "server": false}, "setMarkerBrushLocal": {"reviewLevel": 1, "syntax": "<string> setMarkerBrushLocal brush", "local": false, "example": "\"Marker1\" setMarkerBrushLocal \"DiagGrid\";", "docSyntax": "markerName setMarkerBrushLocal brush", "broadcasted": false, "description": "Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.", "server": false}, "createMarker": {"reviewLevel": 2, "syntax": "createMarker [<string>,position]", "local": false, "example": "_marker1 = createMarker [\"Marker1\", position player];", "docSyntax": "createMarker [name, position]", "broadcasted": true, "description": "Creates a new marker at the given position. The marker name has to be unique. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. However getMarkerPos and markerPos will always return 0 for z.", "server": false}, "actionKeysImages": {"reviewLevel": 1, "syntax": "Structured <string> = actionKeysImages userAction", "local": false, "example": "_text = actionKeysImages \"ReloadMagazine\"", "docSyntax": "Structured Text = actionKeysImages userAction", "broadcasted": false, "description": "Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names.", "server": false}, "ctrlSetFontHeightH3": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontHeightH3 height", "local": false, "example": "_control ctrlSetFontHeightH3 0.05", "docSyntax": "controlName ctrlSetFontHeightH3 height", "broadcasted": false, "description": "Sets H3 font size of given HTML control.", "server": false}, "drawLocation": {"reviewLevel": 1, "syntax": "<uiControl> drawLocation location", "local": false, "example": "", "docSyntax": "control drawLocation location", "broadcasted": false, "description": "Unknown effect.", "server": false}, "createGroup": {"reviewLevel": 2, "syntax": "createGroup <objSide>", "local": false, "example": "_group = createGroup east", "docSyntax": "createGroup side", "broadcasted": true, "description": "Creates a new Group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter. For the available sides see Side.", "server": false}, "ctrlSetTooltipColorShade": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetTooltipColorShade <scalar>", "local": false, "example": "_control ctrlSetTooltipColorShade [1, 0, 0, 1];", "docSyntax": "control ctrlSetTooltipColorShade color", "broadcasted": false, "description": "Sets tooltip background color of given control. Color is in format Color.", "server": false}, "ctrlMapScale": {"reviewLevel": 2, "syntax": "ctrlMapScale <uiControl>", "local": false, "example": "_control = (findDisplay 12) displayCtrl 51; //Arma 3 _scale = ctrlMapScale _control; //returns number from 1 to 0.001", "docSyntax": "ctrlMapScale ctrl", "broadcasted": false, "description": "Returns the current scale of given map control.", "server": false}, "ctrlSetFontH5B": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH5B fontName", "local": false, "example": "_control ctrlSetFontH5B \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH5B fontName", "broadcasted": false, "description": "Sets H5 bold font of given HTML control.", "server": false}, "limitSpeed": {"reviewLevel": 1, "syntax": "objectName limitSpeed <scalar>", "local": false, "example": "// Adjust \"speedLimit\" variable to change limited speed. (A3 1.24 we don't need loop for a continus effect, limitSpeed alone is enough.) _this setVariable [\"speedLimit\", 200]; _nul = _this spawn { while {canMove _this} do { _this limitSpeed (_this getVariable \"speedLimit\"); sleep 0.1; }; };", "docSyntax": "objectName limitSpeed speed", "broadcasted": false, "description": "Limit speed of given vehicle or person to given value (in km/h).", "server": false}, "moveInTurret": {"reviewLevel": 2, "syntax": "<objUnit> moveInTurret [<objVehicle>,turretPath]", "local": true, "example": "_soldierOne moveInTurret [_tank, [0, 0]]", "docSyntax": "unitName moveInTurret [vehicle, turretPath]", "broadcasted": true, "description": "Moves the soldier into the vehicle's turret. (Immediately, without animation). turret path is an array of positions inside a turret, or positions inside a turret of a turret.", "server": false}, "attachedObject": {"reviewLevel": 1, "syntax": "attachedObject location", "local": false, "example": "_locAttachedObj = attachedObject myLocation;", "docSyntax": "attachedObject location", "broadcasted": false, "description": "Returns the object a location is attached to. If the location is unattached, then objNull is returned.", "server": false}, "sleep": {"reviewLevel": 2, "syntax": "sleep <scalar>", "local": false, "example": "[] spawn {sleep 5; hint \"after 5 sec...\"};", "docSyntax": "sleep delay", "broadcasted": false, "description": "Suspends code execution for given time in seconds. The sleep precision is given by a framerate, the delay given is the minimal delay expected. Must be called inside of a context which is interruptible, i.e. a script executed by execVM or spawn.", "server": false}, "createMissionDisplay": {"reviewLevel": 2, "syntax": "<uiDisplay> = <uiDisplay> createMissionDisplay <string>", "local": false, "example": "_ChildDisplay = _Rootdisplay createMissionDisplay \"Tutorial\";", "docSyntax": "Display = display createMissionDisplay string", "broadcasted": false, "description": "Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument \"root\".", "server": false}, "createUnit array": {"reviewLevel": 1, "syntax": "<objGroup> createUnit [type,position,markers,placement,special]", "local": false, "example": "_unit = group player createUnit [\"B_RangeMaster_F\", position player, [], 0, \"FORM\"];", "docSyntax": "group createUnit [type, position, markers, placement, special]", "broadcasted": true, "description": "Creates a unit of class that's defined in CfgVehicles.", "server": false}, "type": {"reviewLevel": 1, "syntax": "type location", "local": false, "example": "_locationType = type myLocation", "docSyntax": "type location", "broadcasted": false, "description": "Returns a string of a location's class name.", "server": false}, "createTarget": {"reviewLevel": 2, "syntax": "<object> = <object> createTarget [type,position,typeAccuracy,posAccuracy]", "local": false, "example": "", "docSyntax": "Target = obj createTarget [type, position, typeAccuracy, posAccuracy]", "broadcasted": false, "description": "Create a target. Not yet implemented.", "server": false}, "createGuardedPoint": {"reviewLevel": 2, "syntax": "createGuardedPoint [<objSide>,position,objectMapID,<objVehicle>]", "local": false, "example": "createGuardedPoint [east, [0,0], -1, vehicle player];", "docSyntax": "createGuardedPoint [side, position, objectMapID, vehicle]", "broadcasted": false, "description": "Adds a point guarded by the given side (scripted way of adding equivalent of \"GUARDED BY\" trigger in Editor). A closest AI group in the given side with assigned \"GUARD\" waypoint will attempt to secure this guard point. The actual guarded position is determined via the following rules:", "server": false}, "nearObjects": {"reviewLevel": 1, "syntax": "position nearObjects radius", "local": false, "example": "_list = position player nearObjects 50;", "docSyntax": "position nearObjects radius", "broadcasted": false, "description": "Find objects in a sphere with given radius. The first object in the returned array is not necessarily the closest one. If you need returned objects to be sorted by distance, use nearestObjects. If typeName is given, only objects of given type (or its subtype) are listed.", "server": false}, "selectLeader": {"reviewLevel": 1, "syntax": "groupName selectLeader <objUnit>", "local": true, "example": "group player selectLeader player;", "docSyntax": "groupName selectLeader unitName", "broadcasted": true, "description": "Select a group's leader. In MP the group has to be local to the PC executing the command. Locality of the group can be checked with local command and group ownership with groupOwner command.", "server": false}, "max": {"reviewLevel": 1, "syntax": "<scalar> = a max b", "local": false, "example": "3 max 2 Result is 3", "docSyntax": "Number = a max b", "broadcasted": false, "description": "The greater of a,b", "server": false}, "playerSide": {"reviewLevel": 2, "syntax": "playerSide", "local": false, "example": "if (side man1 == playerSide) then { hint \"man1 is on your side!\"; };", "docSyntax": "playerSide", "broadcasted": false, "description": "Returns the player's side. This is valid even when the player controlled person is dead (a difference from side player).", "server": false}, "ctrlSetPosition": {"reviewLevel": 1, "syntax": "controlName ctrlSetPosition [x,y]", "local": false, "example": "Move control: _control2D ctrlSetPosition [0, 0]; _control2D ctrlCommit 0;", "docSyntax": "controlName ctrlSetPosition [x, y]", "broadcasted": false, "description": "Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated.", "server": false}, "drawEllipse": {"reviewLevel": 2, "syntax": "<objMap> drawEllipse [c,a,b,angle,<scalar>,fill]", "local": false, "example": "findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { _this select 0 drawEllipse [ player, 10, 10, 0, [1, 0, 0, 1], \"\" ]; _this select 0 drawEllipse [ player, -10, -10, 0, [1, 1, 1, 1], \"#(rgb,8,8,3)color(1,0.6,0,1)\" ]; _this select 0 drawEllipse [ player, -10, -10, 90, [0, 0, 1, 1], \"\" ]; }];", "docSyntax": "map drawEllipse [c, a, b, angle, color, fill]", "broadcasted": false, "description": "Draws an ellipse on the map. Just like with marker or trigger area, negative a and b will result in hexagon.", "server": false}, "findCover": {"reviewLevel": 2, "syntax": "<object> findCover [position,hidePosition,maxDist,minDist,visibilityPosition,ignoreObject]", "local": false, "example": "", "docSyntax": "object findCover [position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]", "broadcasted": false, "description": "Returns the object around where the unit finds cover. The minDist, visibilityPosition and ignoreObject parameters are optional. Command is not functional since Arma 2.", "server": false}, "titleFadeOut": {"reviewLevel": 1, "syntax": "titleFadeOut duration", "local": false, "example": "titleText [\"Hi\", \"plain\"]; titleFadeOut 2", "docSyntax": "titleFadeOut duration", "broadcasted": false, "description": "Terminate the title effect and set duration of the fade out phase to the given time.", "server": false}, "surfaceType": {"reviewLevel": 1, "syntax": "<string> = surfaceType position", "local": false, "example": "_surface = surfaceType [4500, 4500];", "docSyntax": "String = surfaceType position", "broadcasted": false, "description": "Returns what surface type is at the given position.", "server": false}, "campaignConfigFile": {"reviewLevel": 1, "syntax": "Config = campaignConfigFile", "local": false, "example": "_config = campaignConfigFile;", "docSyntax": "Config = campaignConfigFile", "broadcasted": false, "description": "Return root of campaign description.ext entries hierarchy.", "server": false}, "drawLine": {"reviewLevel": 2, "syntax": "<objMap> drawLine [position1,position2,<scalar>]", "local": false, "example": "(findDisplay 12 displayCtrl 51) ctrlAddEventHandler [\"Draw\",\" (_this select 0) drawLine [ getPos player, [0,0,0], [0,0,1,1] ]; \"];", "docSyntax": "map drawLine [position1, position2, color]", "broadcasted": false, "description": "Draw a line on the map. Can decrease framerate!", "server": false}, "unitPos": {"reviewLevel": 2, "syntax": "unitPos <objUnit>", "local": false, "example": "hint str unitPos _unit;", "docSyntax": "unitPos unit", "broadcasted": false, "description": "Return the unit position rules.", "server": true}, "name": {"reviewLevel": 2, "syntax": "<string> <object>", "local": false, "example": "_name = name player;", "docSyntax": "name object", "broadcasted": false, "description": "When argument is Object, the command returns the name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.", "server": false}, "isText": {"reviewLevel": 1, "syntax": "<bool> = isText config", "local": false, "example": "_ok = isText (configFile >> \"CfgVehicles\") Result is false", "docSyntax": "Boolean = isText config", "broadcasted": false, "description": "Check if config entry represents text.", "server": false}, "sizeOf": {"reviewLevel": 1, "syntax": "<scalar> = sizeOf type", "local": false, "example": "_dimension = sizeOf \"M1Abrams\"; //returns 10.7833", "docSyntax": "Number = sizeOf type", "broadcasted": false, "description": "Returns the diameter of bounding sphere of the object of given type in meters. Size returned is usually bigger than the biggest size of the object along any of the axes. For example if object is 10 x 4 x 5 the sizeOf value returned expected to be around 10. If you need to estimate the size of the object more precisely, use boundingBox or boundingBoxReal. NOTE: The object has to be present in current mission to be able to read its size (otherwise zero will be returned).", "server": false}, "ctrlSetFontH2": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH2 fontName", "local": false, "example": "_control [[ctrlSetFontH2]] \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH2 fontName", "broadcasted": false, "description": "Sets H2 font of given HTML control", "server": false}, "setVectorDir": {"reviewLevel": 2, "syntax": "<object> setVectorDir [x,y,z]", "local": true, "example": "player setVectorDir [5,6,1];", "docSyntax": "object setVectorDir [x,y,z]", "broadcasted": true, "description": "Set object's direction vector. Up vector will remain unchanged.", "server": false}, "preprocessFileLineNumbers": {"reviewLevel": 1, "syntax": "preprocessFileLineNumbers fileName", "local": false, "example": "_string = preprocessFileLineNumbers \"A3\\ui_f\\scripts\\IGUI\\RscUnitInfo.sqf\" Result is:", "docSyntax": "preprocessFileLineNumbers fileName", "broadcasted": false, "description": "Returns the preprocessed content of the given file. The preprocessor is C-like, it supports comments using /* */ and PreProcessor_Commands. The preprocessor also adds a default debug entrypoint for compiler at the begining of script: #line 1 \"aFilename\"", "server": false}, "setMarkerTextLocal": {"reviewLevel": 2, "syntax": "<string> setMarkerTextLocal <string>", "local": false, "example": "\"Marker1\" setMarkerTextLocal \"You are here.\";", "docSyntax": "markerName setMarkerTextLocal text", "broadcasted": false, "description": "Sets the text label of an existing marker.", "server": false}, "isKeyActive": {"reviewLevel": 1, "syntax": "isKeyActive keyName", "local": false, "example": "_ok = isKeyActive \"Mission04Key\"", "docSyntax": "isKeyActive keyName", "broadcasted": false, "description": "Checks whether the given key is active in the current user profile. See keys, keysLimit and doneKeys in the description.ext file of the missions.", "server": false}, "halt": {"reviewLevel": 2, "syntax": "halt", "local": false, "example": "if (_displayAnError) then {halt};", "docSyntax": "halt", "broadcasted": false, "description": "This command was meant to break the script into debugger, however currently it doesn't do anything except displaying and logging the following error: Error Debugger breakpoint hit.", "server": false}, "fogForecast": {"reviewLevel": 2, "syntax": "fogForecast", "local": false, "example": "_level = fogForecast;", "docSyntax": "fogForecast", "broadcasted": false, "description": "Returns the forecast fog value. A value of 0 means no fog, 1 means maximum fog.", "server": false}, "removeSwitchableUnit": {"reviewLevel": 2, "syntax": "removeSwitchableUnit <objUnit>", "local": false, "example": "", "docSyntax": "removeSwitchableUnit unitName", "broadcasted": false, "description": "Remove a unit from the list of units available for Team Switch.", "server": false}, "enableTeamSwitch": {"reviewLevel": 2, "syntax": "enableTeamSwitch <bool>", "local": false, "example": "enableTeamSwitch true;", "docSyntax": "enableTeamSwitch enable", "broadcasted": false, "description": "Enable / disable Team Switch. The default setting is enabled.", "server": false}, "surfaceIsWater": {"returns": "bool", "reviewLevel": 4, "syntax": "surfaceIsWater <array>", "local": false, "example": "_isWater = surfaceIsWater [1000, 3000];", "docSyntax": "surfaceIsWater position", "broadcasted": false, "description": "Returns whether water is at given position.", "server": false}, "setMarkerShape": {"reviewLevel": 1, "syntax": "<string> setMarkerShape shape", "local": false, "example": "\"Marker1\" setMarkerShape \"RECTANGLE\";", "docSyntax": "markerName setMarkerShape shape", "broadcasted": true, "description": "Selects the shape (type) of the marker. Shape can be \"ICON\", \"RECTANGLE\", \"ELLIPSE\" or \"POLYLINE\".", "server": false}, "importance": {"reviewLevel": 1, "syntax": "importance location", "local": false, "example": "_locationImportance = importance myLocation", "docSyntax": "importance location", "broadcasted": false, "description": "Returns a location's importance value.", "server": false}, "setMarkerTypeLocal": {"reviewLevel": 1, "syntax": "<string> setMarkerTypeLocal type", "local": false, "example": "\"MarkerOne\" setMarkerTypeLocal \"Warning\";", "docSyntax": "markerName setMarkerTypeLocal type", "broadcasted": false, "description": "Set marker type. See cfgMarkers for a list of standard markers.", "server": false}, "missionConfigFile": {"reviewLevel": 2, "syntax": "missionConfigFile", "local": false, "example": "for \"_i\" from (0) to ((count paramsArray) - 1) do { missionNamespace setVariable [configName ((missionConfigFile/\"Params\") select _i), paramsArray select _i]; };", "docSyntax": "missionConfigFile", "broadcasted": false, "description": "Return root of mission Description.ext entries hierarchy.", "server": false}, "setAttributes": {"reviewLevel": 2, "syntax": "<string> setAttributes [name1,value1,name2,value2,...]", "local": false, "example": "txt = img setAttributes [\"image\", \"data\\iSoldier.paa\"]", "docSyntax": "text setAttributes [name1, value1, name2, value2, ...]", "broadcasted": false, "description": "Returns a structured text created by the given structured or plain text by setting attributes to the given values.", "server": false}, "preloadSound": {"reviewLevel": 2, "syntax": "preloadSound <string>", "local": false, "example": "{ waitUntil {preloadSound _x}; } forEach getArray (missionConfigFile >> \"CfgSounds\" >> \"sounds\");", "docSyntax": "preloadSound soundName", "broadcasted": false, "description": "Makes sure that a sound can start playing without any delay once it is needed. Command works in Arma 3, but might not be implemented in earlier Arma installments.", "server": false}, "worldName": {"reviewLevel": 2, "syntax": "worldName", "local": false, "example": "_name = worldName;", "docSyntax": "worldName", "broadcasted": false, "description": "Return the name of the currently loaded world.", "server": false}, "assignToAirport": {"reviewLevel": 1, "syntax": "plane assignToAirport <scalar>", "local": false, "example": "plane1 assignToAirport 0", "docSyntax": "plane assignToAirport id", "broadcasted": false, "description": "Not correctly implemented yet, currently it does the same as landAt. As the implementation may get fixed sometime, please do not use this command until then.", "server": false}, "ctrlSetFade": {"reviewLevel": 1, "syntax": "controlName ctrlSetFade fade", "local": false, "example": "_control ctrlSetFade 1; _control ctrlCommit 5;", "docSyntax": "controlName ctrlSetFade fade", "broadcasted": false, "description": "Sets wanted transparency for control animation. Requires ctrlCommit to commit changes.", "server": false}, "setName": {"reviewLevel": 2, "syntax": "<object> setName <string>", "local": false, "example": "myLocation setName \"My Location Name\";", "docSyntax": "object setName name", "broadcasted": false, "description": "Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player.", "server": true}, "setSoundEffect": {"reviewLevel": 2, "syntax": "<objTrigger> setSoundEffect [sound,voice,soundEnv,soundDet]", "local": false, "example": "_trigger setSoundEffect [\"Alarm\", \"\", \"\", \"\"];", "docSyntax": "trigger setSoundEffect [sound, voice, soundEnv, soundDet]", "broadcasted": false, "description": "Defines the different sound effects.", "server": false}, "skill": {"reviewLevel": 2, "syntax": "skill <objUnit>", "local": false, "example": "_skill = skill unit1;", "docSyntax": "skill unitName", "broadcasted": false, "description": "Returns current level of ability of a unit, in range between 0 and 1, 1 being the highest level of skill.", "server": false}, "setRectangular": {"reviewLevel": 1, "syntax": "location setRectangular set", "local": false, "example": "myLocation setRectangular true;", "docSyntax": "location setRectangular set", "broadcasted": false, "description": "Set the shape of a location to be either rectangular or elliptical. Locations default shape is elliptical.", "server": false}, "lineBreak": {"reviewLevel": 2, "syntax": "lineBreak", "local": false, "example": "_txt = composeText [\"First line\", lineBreak, \"Second line\"];", "docSyntax": "lineBreak", "broadcasted": false, "description": "Creates a structured text containing a line break.", "server": false}, "createCenter": {"reviewLevel": 2, "syntax": "createCenter <objSide>", "local": false, "example": "_SideHQ = createCenter east", "docSyntax": "createCenter side", "broadcasted": true, "description": "In a nutshell, this command creates game Side. Without side it is not possible to create Groups. So if center for particular side is undefined, no groups can be created for this side. A Unit needs a group to be able to spawn in. So if no center for particular side exists, no groups for this side can be created and therefore no units for this side can be spawned. In Arma 3, the centers for all sides are created for you. An attempt to create center for existing side is ignored. Center can only be created for: east, west, resistance, civilian and sideLogic. These are the only sides groups can be created for.", "server": false}, "closeDisplay": {"reviewLevel": 1, "syntax": "<uiDisplay> closeDisplay exitcode", "local": false, "example": "_display closeDisplay 1;", "docSyntax": "display closeDisplay exitcode", "broadcasted": false, "description": "Close given display with exit code. Most common exit codes are: #define IDC_OK 1 //emulate \"Ok\" button #define IDC_CANCEL 2 //emulate \"Cancel\" button", "server": false}, "commandFSM": {"reviewLevel": 2, "syntax": "<objUnit> commandFSM [fsm <string>,position,<object>]", "local": false, "example": "_soldierOne commandFSM [\"move.fsm\", position player, player]", "docSyntax": "unitName commandFSM [fsm name, position, target]", "broadcasted": false, "description": "Orders a unit to process command defined by FSM file (via the radio).", "server": false}, "ctrlSetEventHandler": {"reviewLevel": 1, "syntax": "controlName ctrlSetEventHandler [handlerName,function]", "local": false, "example": "_control ctrlSetEventHandler [\"KeyDown\", \"\"]", "docSyntax": "controlName ctrlSetEventHandler [handlerName, function]", "broadcasted": false, "description": "Sets given event handler of given control. The provided function should return true/false indicating that the event has handled this event fully or not and whether the engine should execute it's default code or not afterwards. See User Interface Event Handlers for the full list of handler names. If applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.", "server": false}, "vehicles": {"reviewLevel": 2, "syntax": "vehicles", "local": false, "example": "_vehicles = vehicles;", "docSyntax": "vehicles", "broadcasted": false, "description": "Returns an array of all vehicles available to current client. This command returns both empty and crewed vehicles", "server": false}, "setCameraEffect": {"reviewLevel": 2, "syntax": "<objTrigger> setCameraEffect [<string>,position]", "local": false, "example": "trigger setCameraEffect [\"ZoomIn\", \"FRONT\"]", "docSyntax": "trigger setCameraEffect [name, position]", "broadcasted": false, "description": "This command is not available in Arma 3", "server": false}, "wind": {"reviewLevel": 2, "syntax": "wind", "local": false, "example": "_windArray = wind;", "docSyntax": "wind", "broadcasted": false, "description": "Returns the current wind vector (in m/s) as array [x, y, z].", "server": false}, "getVariable": {"returns": "any", "reviewLevel": 4, "syntax": "<string|object> getVariable <string>", "local": false, "example": "_thePublicVariable = _myTruck getVariable \"myPublicVariable\";", "docSyntax": "varspace getVariable name", "broadcasted": false, "description": "Return the value of variable in the variable space assigned to various data types. In case of Alt Syntax usage in Arma 3, the default value will be returned if:", "server": true}, "to": {"reviewLevel": 1, "syntax": "forType to b", "local": false, "example": "for \"_x\" from 10 to 20 do {/* Do something*/}", "docSyntax": "forType to b", "broadcasted": false, "description": "Continue sequence of for var construct. It sets the end value of the index variable", "server": false}, "setWaypointBehaviour": {"reviewLevel": 1, "syntax": "waypoint setWaypointBehaviour mode", "local": false, "example": "[_grp, 2] setWaypointBehaviour \"AWARE\";", "docSyntax": "waypoint setWaypointBehaviour mode", "broadcasted": true, "description": "Switches the unit behaviour when the waypoint becomes active.", "server": false}, "difficultyEnabled": {"reviewLevel": 1, "syntax": "difficultyEnabled flagName", "local": false, "example": "hint str (difficultyEnabled \"armor\");", "docSyntax": "difficultyEnabled flagName", "broadcasted": false, "description": "This command is deprecated since Arma 3 1.58. Since this version it always returns false. Use difficultyOption instead. See Arma 3 Difficulty Overhaul for further details.", "server": false}, "createMarkerLocal": {"reviewLevel": 2, "syntax": "createMarkerLocal [<string>,position]", "local": false, "example": "_marker = createMarkerLocal [\"Marker1\", position player];", "docSyntax": "createMarkerLocal [name, position]", "broadcasted": false, "description": "Creates a local marker at the given position. Marker exists only on PC that created it. The marker name has to be unique. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. However getMarkerPos and markerPos will always return 0 for z.", "server": false}, "setTitleEffect": {"reviewLevel": 2, "syntax": "<objTrigger> setTitleEffect [type,effect,<string>]", "local": false, "example": "_trigger setTitleEffect [\"TEXT\", \"PLAIN DOWN\", \"Hello world.\"]", "docSyntax": "trigger setTitleEffect [type, effect, text]", "broadcasted": false, "description": "Defines the title effect via [Type, Effect, Text] where 'Type' can be", "server": false}, "supportInfo": {"reviewLevel": 1, "syntax": "supportInfo mask", "local": false, "example": "supportInfo \"b:select*\"; //Returns [\"b:ARRAY select SCALAR\",\"b:ARRAY select BOOL\",\"b:CONFIG select SCALAR\"]", "docSyntax": "supportInfo mask", "broadcasted": false, "description": "Creates a list of supported operators and type. Each field of array has the format: \"x:name\" Where x can be:", "server": false}, "setImportance": {"reviewLevel": 1, "syntax": "location setImportance <scalar>", "local": false, "example": "myLocation setImportance 2", "docSyntax": "location setImportance value", "broadcasted": false, "description": "Sets the importance value of location.", "server": false}, "drawIcon": {"reviewLevel": 2, "syntax": "<objMap> drawIcon [<string>,<scalar>,position,width,height,angle,<string>,shadow,textSize,font,align]", "local": false, "example": "Red icon with text: findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { _this select 0 drawIcon [ \"iconStaticMG\", [1,0,0,1], getPos player, 24, 24, getDir player, \"Player Vehicle\", 1, 0.03, \"TahomaB\", \"right\" ] }];", "docSyntax": "map drawIcon [texture, color, position, width, height, angle, text, shadow, textSize, font, align]", "broadcasted": false, "description": "Draws an icon on the map. The command needs to be called every frame, preferably with \"Draw\" control event handler ctrlAddEventHandler.", "server": false}, "camPreload": {"reviewLevel": 2, "syntax": "<objCamera> camPreload <scalar>", "local": false, "example": "_camera camPreload 5", "docSyntax": "camera camPreload time", "broadcasted": false, "description": "Preload the scene for the prepared camera. Time gives timeout, zero means no (infinite) timeout.", "server": false}, "isNumber": {"reviewLevel": 1, "syntax": "<bool> = isNumber config", "local": false, "example": "_ok = isNumber (configFile >> \"CfgVehicles\") Result is false", "docSyntax": "Boolean = isNumber config", "broadcasted": false, "description": "Check if config entry represents number.", "server": false}, "ctrlSetScale": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetScale <scalar>", "local": false, "example": "_control ctrlSetScale 0.5; _control ctrlCommit 0;", "docSyntax": "control ctrlSetScale scale", "broadcasted": false, "description": "Sets wanted scale for control animation. Top left corner remains same. This command requires ctrlCommit.", "server": false}, "formationPosition": {"reviewLevel": 2, "syntax": "<array> = formationPosition <objUnit>", "local": false, "example": "_pos=FormationPosition _person", "docSyntax": "Array = formationPosition person", "broadcasted": false, "description": "Return position of unit in the formation", "server": false}, "ctrlSetFontP": {"reviewLevel": 1, "syntax": "<uiControl> ctrlSetFontP fontOrSize", "local": false, "example": "_control ctrlSetFontP \"TahomaB\"", "docSyntax": "control ctrlSetFontP fontOrSize", "broadcasted": false, "description": "Sets P font of given HTML control or its size.", "server": false}, "setAirportSide": {"reviewLevel": 2, "syntax": "<scalar> setAirportSide <objSide>", "local": false, "example": "0 setAirportSide east", "docSyntax": "id setAirportSide side", "broadcasted": false, "description": "Set owning side of the airport. ID is the number to identify which airport on the island you want to check.", "server": false}, "ctrlSetFontH4": {"reviewLevel": 1, "syntax": "controlName ctrlSetFontH4 fontName", "local": false, "example": "_control ctrlSetFontH4 \"TahomaB\"", "docSyntax": "controlName ctrlSetFontH4 fontName", "broadcasted": false, "description": "Sets H4 font of given HTML control.", "server": false}, "intersect": {"reviewLevel": 2, "syntax": "[<object>,lodName] intersect [begPos,endPos]", "local": false, "example": "[_tank, \"VIEW\"] intersect [[1500, 1500, 2], [1550, 1500, 2]];", "docSyntax": "[object, lodName] intersect [begPos, endPos]", "broadcasted": false, "description": "Finds named selections in object which are in specified LOD, intersected by given section of a line. Return value is in the form of [selection, distance]. Multiple returned arrays are nested within a single array. No intersection returns []. lodName could be one of the following:", "server": true}, "keyImage": {"reviewLevel": 1, "syntax": "keyImage dikCode", "local": false, "example": "_name = keyImage 28; //result is \"Enter\"", "docSyntax": "keyImage dikCode", "broadcasted": false, "description": "Returns a structured text, containing an image or name (if no image is found) of the button, on the keyboard, mouse or joystick, with the given code.", "server": false}, "addWaypoint": {"reviewLevel": 1, "syntax": "groupName addWaypoint [center,radius,<scalar>,<string>]", "local": false, "example": "_wp =_grp addWaypoint [position player, 0];", "docSyntax": "groupName addWaypoint [center, radius, index, name]", "broadcasted": true, "description": "Adds (or inserts when index is given) a new waypoint to a group. The waypoint is placed randomly within a circle with the given center and radius. The function returns a waypoint with format [group, index].", "server": true}, "addSwitchableUnit": {"reviewLevel": 2, "syntax": "addSwitchableUnit <objUnit>", "local": false, "example": "addSwitchableUnit bob", "docSyntax": "addSwitchableUnit unitName", "broadcasted": false, "description": "Adds a unit into the list of units available for Team Switch. Units marked as playable in editor are automatically switchable. This command allows to add non-playable unit into array of switchableUnits and make them available for teamSwitch. SP only.", "server": false}, "setMarkerColorLocal": {"reviewLevel": 2, "syntax": "<string> setMarkerColorLocal <scalar>", "local": false, "example": "\"MarkerOne\" setMarkerColorLocal \"ColorBlack\";", "docSyntax": "markerName setMarkerColorLocal color", "broadcasted": false, "description": "Sets marker color for the given marker locally. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3", "server": true}, "formationLeader": {"reviewLevel": 2, "syntax": "<object> = formationLeader <objUnit>", "local": false, "example": "? (formationLeader player\u00c2\u00a0!= leader player)\u00c2\u00a0: hint \"Formation leader is not the group leader.\"", "docSyntax": "Object = formationLeader unitName", "broadcasted": false, "description": "Return leader of the formation.", "server": false}, "attachObject": {"reviewLevel": 1, "syntax": "location attachObject <object>", "local": false, "example": "myLocation attachObject player;", "docSyntax": "location attachObject object", "broadcasted": false, "description": "Attaches a location to the specified object. To detach a location, attach it to objNull.", "server": false}, "setParticleParams": {"reviewLevel": 1, "syntax": "particleSource setParticleParams <array>", "local": false, "example": "see ParticleArray", "docSyntax": "particleSource setParticleParams array", "broadcasted": false, "description": "Set parameters to particle source. Array is in format ParticleArray.", "server": true}, "setText": {"reviewLevel": 1, "syntax": "location setText <string>", "local": false, "example": "myLocation setText \"Rahmadi Village\"", "docSyntax": "location setText text", "broadcasted": false, "description": "Sets the text associated with a location. This text will be displayed on the game map at the location's position.", "server": false}, "playMission": {"reviewLevel": 2, "syntax": "playMission [campaign,mission,skipBriefing]", "local": false, "example": "playMission [\"XOutrage\",\"x05Negotiator.Noe\"]", "docSyntax": "playMission [campaign, mission, skipBriefing]", "broadcasted": false, "description": "The mission is launched (from the main menu). Both campaign and mission are given as their directory name. If the campaign is empty, a single mission is launched. If skipBriefing is true, the intro and briefing are skipped.", "server": false}, "enableAI": {"reviewLevel": 1, "syntax": "<objUnit> enableAI skilltype", "local": true, "example": "_soldierOne enableAI \"Move\";", "docSyntax": "unit enableAI skilltype", "broadcasted": true, "description": "Enables parts of the AI behavior that was disabled by disableAI.", "server": false}, "createVehicleLocal": {"reviewLevel": 1, "syntax": "type createVehicleLocal position", "local": false, "example": "_lightsource = \"#lightpoint\" createVehicleLocal _pos;", "docSyntax": "type createVehicleLocal position", "broadcasted": false, "description": "Creates an object of the given type. Created object is not transferred through network in MP games. netId of such vehicle in multiplayer will be \"0:0\". To disable local vehicle creation, use CfgDisabledCommands to blacklist this command", "server": false}, "setTriggerType": {"reviewLevel": 1, "syntax": "<objTrigger> setTriggerType action", "local": false, "example": "_trigger setTriggerType \"END1\"", "docSyntax": "trigger setTriggerType action", "broadcasted": false, "description": "Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission):", "server": true}, "ctrlScale": {"reviewLevel": 1, "syntax": "<scalar> = ctrlScale controlName", "local": false, "example": "_scale = ctrlScale _control", "docSyntax": "Number = ctrlScale controlName", "broadcasted": false, "description": "Returns the current scale of the control.", "server": false}, "setRank": {"reviewLevel": 1, "syntax": "<objUnit> setRank rank", "local": true, "example": "player setRank \"COLONEL\"", "docSyntax": "unitName setRank rank", "broadcasted": true, "description": "Sets rank of given unit. Possible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL.", "server": true}, "setUnitRank": {"reviewLevel": 1, "syntax": "<objUnit> setUnitRank rank", "local": false, "example": "player setUnitRank \"COLONEL\"", "docSyntax": "unitName setUnitRank rank", "broadcasted": true, "description": "Sets rank of given unit. Possible rank values, and the associated rating that is automatically given:", "server": true}, "isArray": {"reviewLevel": 1, "syntax": "<bool> = isArray config", "local": false, "example": "_ok = isArray (configFile >> \"CfgVehicles\") Result is false", "docSyntax": "Boolean = isArray config", "broadcasted": false, "description": "Check if config entry represents array.", "server": false}, "deleteTarget": {"reviewLevel": 2, "syntax": "deleteTarget <object>", "local": false, "example": "deleteTarget target1", "docSyntax": "deleteTarget target", "broadcasted": false, "description": "Delete a target. Not yet implemented.", "server": false}, "overcast": {"reviewLevel": 2, "syntax": "<scalar> = overcast", "local": false, "example": "_cloudLevel = overcast", "docSyntax": "Number = overcast", "broadcasted": false, "description": "Return the current overcast level. Zero is clear skies, one is maximum cloud cover.", "server": false}, "setLightAmbient": {"reviewLevel": 1, "syntax": "light setLightAmbient [r,g,b]", "local": true, "example": "myLight setLightAmbient [0.5,0,0]; //produces red light around the origin source", "docSyntax": "light setLightAmbient [r, g, b]", "broadcasted": false, "description": "Set ambient color of light. This includes surfaces that face away from the light, unlike setLightColor.", "server": false}}, "OFP": {"publicVariable": {"reviewLevel": 1, "syntax": "publicVariable varName", "local": true, "example": "publicVariable \"CTFscoreOne\";", "docSyntax": "publicVariable varName", "broadcasted": true, "description": "Broadcasts missionNamespace variable and its value to all computers. The data is sent consequently and reliably to all clients. Using publicVariable too frequently in a given period of time can cause other parts of the game to experience bandwidth problems.", "server": false}, "velocity": {"reviewLevel": 1, "syntax": "velocity vehicleName", "local": false, "example": "_vector = velocity jeep;", "docSyntax": "velocity vehicleName", "broadcasted": false, "description": "Return velocity (speed vector) of Unit as an array with format [x, y, z].", "server": false}, "ctrlEnable": {"reviewLevel": 2, "syntax": "ctrlEnable [<scalar>,<bool>]", "local": true, "example": "ctrlEnable [100, false]", "docSyntax": "ctrlEnable [idc, enable]", "broadcasted": false, "description": "Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto. Read Dialog Control for more information about user dialogs and controls.", "server": false}, "queryWeaponPool": {"reviewLevel": 2, "syntax": "<scalar> = queryWeaponPool <string>", "local": false, "example": "_num=queryWeaponPool \"M16\"", "docSyntax": "Number = queryWeaponPool name", "broadcasted": false, "description": "Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission).", "server": false}, "camDestroy": {"reviewLevel": 2, "syntax": "camDestroy <object>", "local": true, "example": "camDestroy _cam;", "docSyntax": "camDestroy object", "broadcasted": false, "description": "Destroys camera object created with camCreate. This command doesn't need camCommit.", "server": false}, "count": {"reviewLevel": 2, "syntax": "count <array>", "local": true, "example": "_cnt = count [0,0,1,2]; // returns 4 _cnt = count units group player; // returns number of units in player group", "docSyntax": "count array", "broadcasted": false, "description": "Can be used to count:", "server": false}, "sliderSpeed": {"reviewLevel": 2, "syntax": "sliderSpeed <scalar>", "local": false, "example": "_slidespeed1 = sliderSpeed 105;", "docSyntax": "sliderSpeed idc", "broadcasted": false, "description": "Return speed, as an Array [min, max] of slider idc of topmost user dialog.", "server": false}, "enemy": {"reviewLevel": 2, "syntax": "<objSide> = enemy", "local": false, "example": "?_side==enemy: hint \"ouch\"", "docSyntax": "Side = enemy", "broadcasted": false, "description": "Enemy side (enemy to all units). This command is not functional and appears to have be replaced by sideEnemy.", "server": false}, "globalChat": {"reviewLevel": 1, "syntax": "<objUnit> globalChat chatText", "local": false, "example": "_soldierOne globalChat \"Show this text\";", "docSyntax": "unitName globalChat chatText", "broadcasted": false, "description": "Types text to the global radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "server": true}, "titleText": {"reviewLevel": 2, "syntax": "titleText [<string>,type,<scalar>,showInMap,isStructuredText]", "local": false, "example": "titleText [\"Show this text\", \"PLAIN\"];", "docSyntax": "titleText [text, type, speed, showInMap, isStructuredText]", "broadcasted": false, "description": "Displays text across the screen. If used along with cutText two different texts (in different type styles) can be shown at once. The text can be displayed on multiple lines by using \"\\n\" new line characters: titleText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.", "server": false}, "removeWeapon": {"reviewLevel": 2, "syntax": "<objUnit> removeWeapon <string>", "local": true, "example": "player removeWeapon \"BAF_L85A2_RIS_SUSAT\";", "docSyntax": "unit removeWeapon weapon", "broadcasted": true, "description": "Remove weapon from a unit. The unit must be local to the computer where command is executed. For a global version of this command see removeWeaponGlobal. Note: It is possible to create invalid combinations with this command (ie, attempting to remove a weapon that a unit does not possess). When doing so, application behaviour is undefined.", "server": false}, "onBriefingNotes": {"reviewLevel": 2, "syntax": "onBriefingNotes <string>", "local": false, "example": "onBriefingNotes \"NotesVoiceOver\";", "docSyntax": "onBriefingNotes soundName", "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Notes tab is selected in the briefing.", "server": false}, "engineOn": {"reviewLevel": 1, "syntax": "<objVehicle> engineOn state", "local": true, "example": "if (!isEngineOn _jeep) then { _jeep engineOn true; };", "docSyntax": "vehicle engineOn state", "broadcasted": true, "description": "Activates and deactivates the engine of a vehicle. This command has to be executed where vehicle is local. NOTE: Executed on a remote vehicle this command may turn the engine on but then it will get turned off by itself after a short while.", "server": false}, "deleteIdentity": {"reviewLevel": 1, "syntax": "<bool> = deleteIdentity identityName", "local": false, "example": "?deleteIdentity \"playerIdentity\":hint \"Delete ok\"", "docSyntax": "Boolean = deleteIdentity identityName", "broadcasted": false, "description": "Delete an identity (created with saveIdentity) from the campaign's progress file.", "server": false}, "atan": {"reviewLevel": 1, "syntax": "atan x", "local": false, "example": "_degrees = atan 1; //45", "docSyntax": "atan x", "broadcasted": false, "description": "ArcTangent of a number, result in Degrees.", "server": false}, "onBriefingPlan": {"reviewLevel": 2, "syntax": "onBriefingPlan <string>", "local": false, "example": "onBriefingPlan \"PlanVoiceOver\"", "docSyntax": "onBriefingPlan soundName", "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Plan tab is selected in the briefing.", "server": false}, "setGroupId": {"reviewLevel": 2, "syntax": "<objGroup> setGroupId [nameFormat,nameParam1,...,nameParamN]", "local": false, "example": "player setGroupId [\"Some name for the group\"];", "docSyntax": "group setGroupId [nameFormat, nameParam1, ..., nameParamN]", "broadcasted": false, "description": "Sets a group's identity, how it will be displayed in chat, for example. While groups on the different sides can have identical ids, the groups on the same side cannot.", "server": true}, "addWeaponCargo": {"reviewLevel": 1, "syntax": "vehicleName addWeaponCargo [weaponName,count]", "local": true, "example": "_truck addWeaponCargo [\"M16\",5]", "docSyntax": "vehicleName addWeaponCargo [weaponName, count]", "broadcasted": false, "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Ignores available cargo space.", "server": true}, "allowFleeing": {"reviewLevel": 1, "syntax": "<string> allowFleeing cowardice", "local": true, "example": "_group1 allowFleeing 0;", "docSyntax": "name allowFleeing cowardice", "broadcasted": true, "description": "Sets the cowardice level (the lack of courage or bravery) of a group or unit. The more cowardice a Group or Object has, the sooner it will start fleeing. 0 means maximum courage, while 1 means always fleeing.", "server": false}, "deleteVehicle": {"reviewLevel": 2, "syntax": "deleteVehicle <object>", "local": false, "example": "deleteVehicle _house1;", "docSyntax": "deleteVehicle object", "broadcasted": true, "description": "Deletes an object. Only objects inserted in the mission editor and objects created during the game's progress can be deleted by this command. Island objects and player cannot be removed.", "server": true}, "addScore": {"reviewLevel": 1, "syntax": "<objUnit> addScore score", "local": false, "example": "unit addScore 10;", "docSyntax": "unit addScore score", "broadcasted": true, "description": "Add a number to the score of a unit. This score is shown in multiplayer in the \"I\" (\"P\" in Arma 3) screen. Negative values will remove from the score. Server execution only.", "server": true}, "setFlagTexture": {"reviewLevel": 2, "syntax": "<objFlag> setFlagTexture <string>", "local": true, "example": "_flagE setFlagTexture \"\\ca\\misc\\data\\sever_vlajka.paa\";", "docSyntax": "flag setFlagTexture texture", "broadcasted": true, "description": "Sets flag texture. If texture is \"\", flag is not drawn.", "server": false}, "flagOwner": {"reviewLevel": 2, "syntax": "flagOwner <objFlag>", "local": false, "example": "_person = flagOwner _flagOne;", "docSyntax": "flagOwner flag", "broadcasted": true, "description": "Returns the global owner of a flag. A getter for setFlagOwner. Note that owner of a flag is Object rather than Number, as how it is usually with other owner commands", "server": true}, "titleCut": {"reviewLevel": 2, "syntax": "titleCut [<string>,type,<scalar>]", "local": false, "example": "titleCut [\"Hello, how are you?\",\"Plain Down\",3];", "docSyntax": "titleCut [text, type, speed]", "broadcasted": false, "description": "this command was obsoleted, use cutText instead.", "server": false}, "pi": {"reviewLevel": 2, "syntax": "<scalar> = pi", "local": false, "example": "", "docSyntax": "Number = pi", "broadcasted": false, "description": "pi (180 degrees converted to Radians).", "server": false}, "loadIdentity": {"reviewLevel": 2, "syntax": "<objUnit> loadIdentity <string>", "local": false, "example": "_ok = player loadIdentity \"playerIdentity\"", "docSyntax": "person loadIdentity name", "broadcasted": false, "description": "Loads person's identity from Objects.sav file in campaign directory (from entry name).", "server": false}, "or": {"reviewLevel": 1, "syntax": "<bool> = a or b", "local": false, "example": "if ((OBJ1) or (_enemycount == 0)) then {hint \"you win\u00c2\u00a0!\"}", "docSyntax": "Boolean = a or b", "broadcasted": false, "description": "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely). Identical to: a || b", "server": false}, "createDialog": {"reviewLevel": 1, "syntax": "createDialog dialogName", "local": false, "example": "_ok = createDialog \"RscDisplayGame\"; if (!_ok) then {hint \"Dialog couldn't be opened!\"};", "docSyntax": "createDialog dialogName", "broadcasted": false, "description": "Create a dialog which is defined either in the mission's description.ext, in the campaign's description.ext or in the global resource.cpp. The given name has to be the class name used in one of these files. If another dialog is already opened, the desired dialog is created as a child dialog of the one already opened.", "server": false}, "textLog": {"returns": "void", "reviewLevel": 4, "syntax": "textLog <any>", "local": false, "example": "textLog player", "docSyntax": "textLog anything", "broadcasted": false, "description": "Dump argument value to debugging output.", "server": false}, "lightIsOn": {"reviewLevel": 1, "syntax": "lightIsOn lamppost", "local": false, "example": "?lightIsOn nearestObject [player, \"StreetLamp\"] == \"ON\"\u00c2\u00a0:hint \"nightime\"", "docSyntax": "lightIsOn lamppost", "broadcasted": false, "description": "Check if lampost is on (shining). For working with CfgNonAIVehicles class \"StreetLamp\" only. Possible values are:", "server": false}, "mapAnimDone": {"reviewLevel": 2, "syntax": "<bool> = mapAnimDone", "local": true, "example": "", "docSyntax": "Boolean = mapAnimDone", "broadcasted": false, "description": "Check if map animation is finished.", "server": false}, "camSetTarget": {"reviewLevel": 2, "syntax": "<objCamera> camSetTarget <object>", "local": true, "example": "_camera camSetTarget player;", "docSyntax": "camera camSetTarget target", "broadcasted": false, "description": "Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted.", "server": false}, "exp": {"reviewLevel": 1, "syntax": "<scalar> = exp x", "local": false, "example": "_result = exp 1 returns 2.7182", "docSyntax": "Number = exp x", "broadcasted": false, "description": "Let x be a number, then exp (x) is equal to e to the power of x (or e^x)", "server": false}, "atg": {"reviewLevel": 1, "syntax": "atg x", "local": false, "example": "_atanThreeFifth = atg 3/5;", "docSyntax": "atg x", "broadcasted": false, "description": "Equivalent to atan.", "server": false}, "animate": {"reviewLevel": 1, "syntax": "objectName animate [animationName,phase,<scalar>]", "local": false, "example": "_building animate [\"maindoor\", 1];", "docSyntax": "objectName animate [animationName, phase, speed]", "broadcasted": true, "description": "Activates given object animation. Animation is defined in CfgModels Animations class of model.cfg or another model config. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.", "server": true}, "playersNumber": {"reviewLevel": 2, "syntax": "playersNumber <objSide>", "local": false, "example": "_west = playersNumber west; _east = playersNumber east; _civ = playersNumber civilian; hint format [\"West:%1 East:%2, Civ:%3\", _west, _east, _civ];", "docSyntax": "playersNumber side", "broadcasted": false, "description": "Returns count of occupied role selection slots for given side. Players who claimed a slot in the lobby but didn't start the mission are counted as well. If disabledAI = 0; in description.ext or Enable AI option is checked in 3DEN, AI bots will be treated as valid players and will be counted too. Multiplayer only, in singleplayer always returns 0.", "server": false}, "cutText": {"reviewLevel": 2, "syntax": "cutText [<string>,type,<scalar>,showInMap,isStructuredText]", "local": false, "example": "cutText [\"\",\"BLACK OUT\"]; cutText [\"Hello World!\",\"PLAIN\",2];", "docSyntax": "cutText [text, type, speed, showInMap, isStructuredText]", "broadcasted": false, "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:", "server": false}, "daytime": {"reviewLevel": 2, "syntax": "<scalar> = daytime", "local": false, "example": "; assumme it is 16:30 _daytime = daytime", "docSyntax": "Number = daytime", "broadcasted": false, "description": "Returns the current ingame time in hours.", "server": false}, "benchmark": {"reviewLevel": 2, "syntax": "<scalar> = benchmark", "local": false, "example": "? (benchmark>2000)\u00c2\u00a0: setViewDistance 2000", "docSyntax": "Number = benchmark", "broadcasted": false, "description": "Returns the value of \"3D Performance\" in OFP Preferences (flashpoint.cfg). This can be used to estimate the computer performance to adapt CPU and GPU demanding settings like view distance dynamically in missions.", "server": false}, "waypointPosition": {"reviewLevel": 1, "syntax": "waypointPosition waypoint", "local": false, "example": "_wPos = waypointPosition [_groupOne, 1];", "docSyntax": "waypointPosition waypoint", "broadcasted": false, "description": "Returns Position of the given waypoint.", "server": false}, "markerType": {"reviewLevel": 2, "syntax": "<string> = markerType <string>", "local": false, "example": "if (markerType \"Marker1\" == \"Empty\") then {hint \"Marker1 is not an icon!\"}", "docSyntax": "String = markerType markerName", "broadcasted": false, "description": "Get type of marker. Note: This function is identical to getMarkerType. See cfgMarkers for a list of standard markers.", "server": true}, "addRating": {"reviewLevel": 1, "syntax": "<objUnit> addRating rating", "local": true, "example": "player addRating 2000;", "docSyntax": "unitName addRating rating", "broadcasted": true, "description": "Add a number to the rating of a unit - negative values can be used to reduce the rating.", "server": false}, "isNull": {"reviewLevel": 1, "syntax": "isNull entity", "local": false, "example": "if (isNull obj) then {hint \"doesn't exist\";};", "docSyntax": "isNull entity", "broadcasted": false, "description": "Checks whether the tested item is Null.", "server": true}, "setMimic": {"reviewLevel": 1, "syntax": "<objUnit> setMimic mimic", "local": false, "example": "_soldier1 setmimic \"angry\"", "docSyntax": "person setMimic mimic", "broadcasted": false, "description": "Set person's facial expression. Following mimic values are recognized:", "server": true}, "crew": {"reviewLevel": 1, "syntax": "crew vehicleName", "local": false, "example": "player in (crew _tank);", "docSyntax": "crew vehicleName", "broadcasted": false, "description": "Returns the crew (both dead and alive) of the given vehicle.", "server": true}, "land": {"reviewLevel": 1, "syntax": "helicopter land mode", "local": true, "example": "_cobraOne land \"LAND\"", "docSyntax": "helicopter land mode", "broadcasted": true, "description": "Force helicopter landing. Landing mode may be:", "server": false}, "assignAsDriver": {"reviewLevel": 1, "syntax": "<objUnit> assignAsDriver vehicleName", "local": false, "example": "_soldier1 assignAsDriver _tank [_soldier1] orderGetIn true", "docSyntax": "unitName assignAsDriver vehicleName", "broadcasted": true, "description": "Assign a unit as driver of a vehicle. Used together with orderGetIn to order subordinate units to get in as driver of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the driver place of the vehicle.", "server": true}, "cadetMode": {"reviewLevel": 2, "syntax": "cadetMode", "local": false, "example": "? (cadetMode)\u00c2\u00a0: _AIsoldier setSkill 0.1 //sqs", "docSyntax": "cadetMode", "broadcasted": false, "description": "Returns if the player is currently playing in cadet or veteran mode.", "server": false}, "enableRadio": {"reviewLevel": 1, "syntax": "enableRadio state", "local": false, "example": "enableRadio false", "docSyntax": "enableRadio state", "broadcasted": false, "description": "Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes.", "server": false}, "doStop": {"reviewLevel": 2, "syntax": "doStop <objUnit>(s)", "local": false, "example": "doStop _soldier1;", "docSyntax": "doStop unit(s)", "broadcasted": true, "description": "Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation. It will prevent them from moving around with their group (or formation leader), while still being able to turn around and even move to a new position if they see fit.", "server": true}, "acos": {"reviewLevel": 1, "syntax": "<scalar> = acos x", "local": false, "example": "_degrees = acos 0.5 returns 60", "docSyntax": "Number = acos x", "broadcasted": false, "description": "ArcCosine of a number, result in Degrees", "server": false}, "resize": {"reviewLevel": 1, "syntax": "<array> resize count", "local": false, "example": "_arrayNum = [0,1,2,3,4]; _arrayNum resize 2; // _arrayNum is now [0,1]", "docSyntax": "array resize count", "broadcasted": false, "description": "Changes the size of the given array. The command does not return new array, it resizes the source array to the desired number of elements. If the new size is bigger than the current size, the new places are filled with nils.", "server": false}, "fillWeaponsFromPool": {"reviewLevel": 2, "syntax": "fillWeaponsFromPool <objUnit>", "local": false, "example": "fillWeaponsFromPool _soldier", "docSyntax": "fillWeaponsFromPool unitName", "broadcasted": false, "description": "Adds magazines from the campaign pool to the given unit, depending on his weapons.", "server": false}, "comment": {"reviewLevel": 1, "syntax": "comment commentMsg", "local": false, "example": "script.sqs comment \"This is a commented line\"", "docSyntax": "comment commentMsg", "broadcasted": false, "description": "Define a comment. Mainly used in SQF Syntax, as you're able to introduce comment lines with semicolons in a SQS script.", "server": false}, "cutObj": {"reviewLevel": 2, "syntax": "cutObj [class,type,<scalar>,showInMap]", "local": false, "example": "cutObj [\"TVSet\", \"PLAIN\"]; cutObj [\"TVSet\", \"PLAIN\", 2]", "docSyntax": "cutObj [class, type, speed, showInMap]", "broadcasted": false, "description": "Displays an object defined in the global config in CfgTitles.", "server": false}, "forceEnd": {"reviewLevel": 2, "syntax": "forceEnd", "local": false, "example": "if (_TerritoryLost) then {forceEnd}", "docSyntax": "forceEnd", "broadcasted": false, "description": "Sets the flag which tells engine that the mission end was forced. Might need additional endMission execution. Can be used in an \"END\" trigger to force end conditions in the editor.", "server": false}, "buttonAction": {"returns": "string", "reviewLevel": 4, "syntax": "buttonSetAction [<scalar>, <code|function>]", "local": true, "example": "buttonSetAction [100, {player execVM \"reply.sqf\"}] _action = buttonAction 100", "docSyntax": "buttonAction idc", "broadcasted": false, "description": "Return the action assigned to a control of the currently active user dialog.", "server": false}, "fleeing": {"reviewLevel": 2, "syntax": "<bool> = fleeing <objUnit>", "local": false, "example": "? (fleeing _east_unit)\u00c2\u00a0: player sideChat \"We have won!\"", "docSyntax": "Boolean = fleeing unitName", "broadcasted": false, "description": "Checks if a unit is fleeing.", "server": true}, "setFormDir": {"reviewLevel": 1, "syntax": "<objGroup> setFormDir heading", "local": true, "example": "_group1 setFormDir 180;", "docSyntax": "group setFormDir heading", "broadcasted": true, "description": "Set group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen. When group is moving, this value is overriden by movement direction.", "server": false}, "countEnemy": {"reviewLevel": 1, "syntax": "<objUnit> countEnemy arrayName", "local": false, "example": "_num = player countEnemy list _triggerOne;", "docSyntax": "unitName countEnemy arrayName", "broadcasted": false, "description": "Count how many units in the array are considered enemy to the given unit.", "server": true}, "pickWeaponPool": {"reviewLevel": 2, "syntax": "pickWeaponPool <object>", "local": false, "example": "", "docSyntax": "pickWeaponPool object", "broadcasted": false, "description": "Transfer weapons and magazines from cargo of object into weapon pool (used in campaign to transfer weapons into next mission).", "server": false}, "setSpeedMode": {"reviewLevel": 1, "syntax": "groupName setSpeedMode mode", "local": true, "example": "_groupOne setSpeedMode \"LIMITED\"", "docSyntax": "groupName setSpeedMode mode", "broadcasted": true, "description": "Set group speed mode. Mode may be one of:", "server": false}, "showWarrant": {"reviewLevel": 1, "syntax": "showWarrant show", "local": false, "example": "", "docSyntax": "showWarrant show", "broadcasted": false, "description": "Enable ID card.", "server": false}, "tg": {"reviewLevel": 1, "syntax": "tg x", "local": false, "example": "_tangent = tg 45 Result is 1", "docSyntax": "tg x", "broadcasted": false, "description": "Identical to tan", "server": false}, "assignAsGunner": {"reviewLevel": 1, "syntax": "<objUnit> assignAsGunner vehicleName", "local": false, "example": "_soldier1 assignAsGunner _tank [_soldier1] orderGetIn true", "docSyntax": "unitName assignAsGunner vehicleName", "broadcasted": true, "description": "Assign a unit as gunner of a vehicle. Used together with orderGetIn to order subordinate units to get in as gunner of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the gunner place of the vehicle.", "server": true}, "missionStart": {"reviewLevel": 2, "syntax": "missionStart", "local": false, "example": "setDate (missionStart select [0,5]);", "docSyntax": "missionStart", "broadcasted": false, "description": "Returns date and time when mission started in format [year, month, day, hour, minute, second] in MP, which differs from date format only by seconds. In SP returns [0,0,0,0,0,0].", "server": false}, "showMap": {"reviewLevel": 1, "syntax": "showMap show", "local": false, "example": "showMap false", "docSyntax": "showMap show", "broadcasted": false, "description": "Enable Map (default true)", "server": false}, "sliderSetPosition": {"reviewLevel": 2, "syntax": "sliderSetPosition [<scalar>,<array>]", "local": false, "example": "sliderSetPosition [101, 50];", "docSyntax": "sliderSetPosition [idc, pos]", "broadcasted": false, "description": "Set current thumb position of slider idc of topmost user dialog.", "server": false}, "object": {"reviewLevel": 2, "syntax": "<object> = <object> <scalar>", "local": false, "example": "_obj = object 1", "docSyntax": "Object = object id", "broadcasted": false, "description": "Return Object with given id. Object ID's can be checked in mission editor.", "server": false}, "camCommand": {"reviewLevel": 1, "syntax": "<objCamera> camCommand command", "local": true, "example": "_camera camCommand \"manual on\";", "docSyntax": "camera camCommand command", "broadcasted": false, "description": "Executes a command on the given camera / actor object. Known commands for:", "server": false}, "hint": {"reviewLevel": 2, "syntax": "hint <string>", "local": false, "example": "hint \"Press W to move forward. \\nPress S to move backwards.\"", "docSyntax": "hint text", "broadcasted": false, "description": "Outputs a multi-line hint message in the left upper corner of the screen (in the right upper corner in Arma). This version of hint is supposed to play a sound when hint is shown, but this varies between games and versions. Use hintSilent for soundless hint. The effect of this command is local, i.e. the hint will only show on the computer command was executed.", "server": false}, "setWPPos": {"reviewLevel": 1, "syntax": "waypoint setWPPos <array>", "local": false, "example": "[_groupOne, 1] setWPPos markerPos \"MarkerOne\";", "docSyntax": "waypoint setWPPos pos", "broadcasted": false, "description": "Sets waypoint position", "server": false}, "fadeMusic": {"reviewLevel": 1, "syntax": "<scalar> fadeMusic volume", "local": false, "example": "5 fadeMusic 0", "docSyntax": "time fadeMusic volume", "broadcasted": false, "description": "Changes the music volume smoothly within the given time.", "server": false}, "setVelocity": {"reviewLevel": 1, "syntax": "vehicleName setVelocity [x,y,z]", "local": true, "example": "_truck1 setVelocity [20, 0, 0];", "docSyntax": "vehicleName setVelocity [x, y, z]", "broadcasted": true, "description": "Set velocity (speed vector) of a vehicle. Units are in metres per second.", "server": false}, "vehicle": {"reviewLevel": 2, "syntax": "<objVehicle> <objUnit>", "local": false, "example": "SQS ? vehicle player != player\u00c2\u00a0: hint \"Player is in a vehicle\"", "docSyntax": "vehicle unitName", "broadcasted": false, "description": "Vehicle in which given unit is mounted. If none, unit is returned. Alternatively, use objectParent", "server": true}, "assignAsCommander": {"reviewLevel": 1, "syntax": "<objUnit> assignAsCommander vehicleName", "local": false, "example": "_soldier1 assignAsCommander _tank [_soldier1] orderGetIn true", "docSyntax": "unitName assignAsCommander vehicleName", "broadcasted": true, "description": "Assign a unit as commander of a vehicle. Used together with orderGetIn to order subordinate units to get in as commander of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the commander place of the vehicle.", "server": true}, "action": {"reviewLevel": 1, "syntax": "<objUnit> action actionArray", "local": true, "example": "player action [\"SitDown\", player];", "docSyntax": "unit action actionArray", "broadcasted": true, "description": "Make a unit to perform an action. Use the List of Actions for reference about the available actions and their syntax.", "server": false}, "lock": {"reviewLevel": 1, "syntax": "vehicleName lock <bool>", "local": true, "example": "_jeepOne lock true;", "docSyntax": "vehicleName lock locked", "broadcasted": true, "description": "Lock vehicle (disable mounting / dismounting) for player. Similar to setVehicleLock when number is used as param. This command will remove user get in/get out actions but will not stop player getting into or out of vehicle via script commands", "server": false}, "switchLight": {"reviewLevel": 1, "syntax": "lamp switchLight mode", "local": false, "example": "(object 12345) switchLight \"OFF\"", "docSyntax": "lamp switchLight mode", "broadcasted": false, "description": "Controls whether a lamp is lit or not. For working with CfgNonAIVehicles class \"StreetLamp\" only.", "server": false}, "animationPhase": {"reviewLevel": 1, "syntax": "<object> animationPhase animationName", "local": false, "example": "_building animate [\"maindoor\",1]; sleep 1; _p = _building animationPhase \"maindoor\"; returns 1 (if the animation speed is <= 2 seconds)", "docSyntax": "object animationPhase animationName", "broadcasted": false, "description": "Returns the phase of the given animation on the given object. Animation can be scripted (animate, animateSource, animateDoor) or engine driven. Animation names for an object could be found out with animationNames command. When animation is rotation, like with \"MainTurret\" for example, the output is in radians, to convert to degrees use deg command.", "server": true}, "setRain": {"reviewLevel": 1, "syntax": "<scalar> setRain rain", "local": false, "example": "60 setRain 1;", "docSyntax": "time setRain rain", "broadcasted": true, "description": "Set rain density smoothly over the given transition time (in seconds). A transition time of zero means an immediate change. A rain density of zero is no rain, one is maximum rain. Rain is not possible when overcast is less than 0.7.", "server": false}, "titleRsc": {"reviewLevel": 2, "syntax": "titleRsc [<string>,type,<scalar>,showInMap]", "local": false, "example": "titleRsc [\"BIS\", \"PLAIN\"]", "docSyntax": "titleRsc [text, type, speed, showInMap]", "broadcasted": false, "description": "Display a resource defined in RscTitles. Also see cutRsc, with these two commands you can show two different resources at once.", "server": false}, "showCompass": {"reviewLevel": 1, "syntax": "showCompass show", "local": false, "example": "showCompass false;", "docSyntax": "showCompass show", "broadcasted": false, "description": "Shows or hides the compass on the map screen, if enabled for the mission and you possess the item. (default true)", "server": false}, "ctrlEnabled": {"reviewLevel": 2, "syntax": "<bool> = ctrlEnabled <scalar>", "local": true, "example": "if (!(ctrlEnabled 100)) then { ctrlEnable [100, true] };", "docSyntax": "Boolean = ctrlEnabled idc", "broadcasted": false, "description": "Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused. Read Dialog Control for more information about user dialogs and controls.", "server": false}, "canFire": {"reviewLevel": 2, "syntax": "canFire <objUnit>", "local": false, "example": "SQS: ?!(canFire _tank)\u00c2\u00a0: player sideChat \"Tank disabled!\"", "docSyntax": "canFire unitName", "broadcasted": false, "description": "Returns true if the given vehicle is still able to fire. For the command to return true, vehicle must be alive, have weapon operator and the weapon cannot be damaged >= 0.9 but can be empty due to running out of ammo. If mission starts with vehicle having no ammo or setVehicleAmmo 0 command is executed on the vehicle, then canFire will always report false for it.", "server": true}, "setCombatMode": {"returns": "void", "reviewLevel": 4, "syntax": "<objGroup> setCombatMode <'Blue'|'Green'|'White'|'Yellow'|'Red'>", "local": true, "example": "_group1 setCombatMode \"BLUE\";", "docSyntax": "groupName setCombatMode mode", "broadcasted": true, "description": "Set group combat mode (engagement rules). Modes: Blue, Green, White, Yellow and Red", "server": false}, "cos": {"reviewLevel": 1, "syntax": "cos x", "local": false, "example": "cos 60;//returns 0.5", "docSyntax": "cos x", "broadcasted": false, "description": "Cosine of a number, argument in degrees.", "server": false}, "side": {"reviewLevel": 2, "syntax": "<objSide> <object>", "local": false, "example": "if (side player == west) then { hint \"Player is on the West side\" };", "docSyntax": "side object", "broadcasted": false, "description": "Returns the side of a unit, vehicle, object or location.", "server": true}, "setObjectTexture": {"reviewLevel": 2, "syntax": "<object> setObjectTexture [selectionNumber,<string>]", "local": false, "example": "_objectname setObjectTexture [0, \"\\pboname\\texture.paa\"]; _objectname setObjectTexture [1, \"\\pboname\\texture2.paa\"];", "docSyntax": "object setObjectTexture [selectionNumber,texture]", "broadcasted": false, "description": "Textures object selection with texture named in array. Array has the form [selectionNumber, \"Texture\"].", "server": true}, "mapAnimCommit": {"reviewLevel": 2, "syntax": "mapAnimCommit", "local": true, "example": "", "docSyntax": "mapAnimCommit", "broadcasted": false, "description": "Play map animation.", "server": false}, "ctrlVisible": {"reviewLevel": 2, "syntax": "<bool> = ctrlVisible <scalar>", "local": true, "example": "_bool = ctrlVisible 100;", "docSyntax": "Boolean = ctrlVisible idc", "broadcasted": false, "description": "Returns if a control of the currently active user dialog is shown or not. Read Dialog Control for more information about user dialogs and controls.", "server": false}, "nearestBuilding": {"reviewLevel": 1, "syntax": "nearestBuilding position", "local": false, "example": "_nBuilding = nearestBuilding player;", "docSyntax": "nearestBuilding position", "broadcasted": false, "description": "Finds the nearest building to a given object or position. A \"building\" is defined as an object that is of class \"House\" and contains a path LOD.", "server": false}, "position": {"reviewLevel": 2, "syntax": "position <object>", "local": false, "example": "_pos = position player;", "docSyntax": "position object", "broadcasted": false, "description": "Synonym for getPos.", "server": false}, "camCommit": {"reviewLevel": 2, "syntax": "<objCamera> camCommit <scalar>", "local": true, "example": "SQS; create a camera object _cam = \"camera\" camCreate [5600,4800,10] _cam camSetTarget player _cam cameraEffect [\"internal\", \"BACK\"] _cam camCommit 0 ; smoothly move the camera to its new position in 6 seconds _cam camSetPos [5680,4720,20] _cam camCommit 6 @camCommitted _cam ; proceed", "docSyntax": "camera camCommit time", "broadcasted": false, "description": "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately.", "server": false}, "setFlagOwner": {"reviewLevel": 1, "syntax": "<objFlag> setFlagOwner owner", "local": false, "example": "_flag1 setFlagOwner _soldier1;", "docSyntax": "flag setFlagOwner owner", "broadcasted": true, "description": "Sets flag owner. When owner is set to objNull or any object other than a unit of class man or logic, flag is returned to the flagpole. A flag owned by a logic has no visual representation.", "server": true}, "damage": {"reviewLevel": 2, "syntax": "<scalar> = <scalar> <object>", "local": false, "example": "? ((damage player)>0.1)\u00c2\u00a0: player groupChat \"I'm hurt! Medic!\"", "docSyntax": "Number = damage object", "broadcasted": false, "description": "Return the damage value of an object.", "server": true}, "sin": {"reviewLevel": 1, "syntax": "<scalar> = sin x", "local": false, "example": "_sine = sin 30;//result is 0.5", "docSyntax": "Number = sin x", "broadcasted": false, "description": "Sine of x, argument in Degrees.", "server": false}, "missionName": {"reviewLevel": 2, "syntax": "missionName", "local": false, "example": "", "docSyntax": "missionName", "broadcasted": false, "description": "Return currently loaded mission file (path to mission.pbo, relative to game exe).", "server": false}, "gunner": {"reviewLevel": 2, "syntax": "<object> = gunner <objVehicle>", "local": false, "example": "(gunner _tank1) action [\"getout\",_tank1]", "docSyntax": "Object = gunner vehicle", "broadcasted": false, "description": "Returns the gunner of a vehicle.", "server": true}, "loadFile": {"reviewLevel": 1, "syntax": "loadFile fileName", "local": false, "example": "_contents = loadFile \"wantedString.txt\";", "docSyntax": "loadFile fileName", "broadcasted": false, "description": "Return content of given filename as string. If you plan to compile said string, be aware that the file shouldn't contain comments or compile will throw an error. If there are comments, use preprocessFile/preprocessFileLineNumbers instead.", "server": false}, "setDir": {"reviewLevel": 1, "syntax": "<object> setDir heading", "local": true, "example": "unit1 setDir 45; // will set unit1 to face North-East", "docSyntax": "object setDir heading", "broadcasted": true, "description": "Sets object heading. Angles are measured in degrees clockwise from north, and regular range goes from 0 to 360 (0\u00c2\u00b0 = N, 90\u00c2\u00b0 = E, 180\u00c2\u00b0 = S, 270\u00c2\u00b0 = W). Negative angles represent a counter-clockwise angle.", "server": false}, "disableUserInput": {"reviewLevel": 1, "syntax": "disableUserInput state", "local": false, "example": "disableUserInput true ; cutscene disableUserInput false", "docSyntax": "disableUserInput state", "broadcasted": false, "description": "Disable and enable the keyboard and mouse input, usually used during cutscenes.", "server": false}, "sqrt": {"reviewLevel": 1, "syntax": "<scalar> = sqrt x", "local": false, "example": "_sq = sqrt 9; // Result is 3", "docSyntax": "Number = sqrt x", "broadcasted": false, "description": "Returns square root of x.", "server": false}, "sliderPosition": {"reviewLevel": 2, "syntax": "sliderPosition <scalar>", "local": false, "example": "_slidepos1 = sliderPosition 105;", "docSyntax": "sliderPosition idc", "broadcasted": false, "description": "Return current thumb position of slider idc of topmost user dialog.", "server": false}, "removeAction": {"reviewLevel": 2, "syntax": "<objUnit> removeAction <scalar>", "local": false, "example": "player removeAction 0;", "docSyntax": "unit removeAction index", "broadcasted": false, "description": "Removes user added action with given id index. This only removes actions added with the addAction command. You cannot remove default game actions, such as reload. This command has local effect. The action will only be removed on the computer that executes the command.", "server": true}, "accTime": {"reviewLevel": 2, "syntax": "<scalar> = accTime", "local": false, "example": "_acc = accTime", "docSyntax": "Number = accTime", "broadcasted": false, "description": "Returns the current time acceleration factor", "server": false}, "locked": {"reviewLevel": 2, "syntax": "<bool> <objVehicle>", "local": false, "example": "_locked = locked _jeepOne;", "docSyntax": "locked vehicle", "broadcasted": false, "description": "Check if vehicle is locked for Persons. If it is locked, Persons cannot mount / dismount without order.", "server": true}, "camSetRelPos": {"reviewLevel": 1, "syntax": "<objCamera> camSetRelPos position", "local": true, "example": "_cam camSetTarget _car; _cam camSetRelPos [0,10,8];", "docSyntax": "camera camSetRelPos position", "broadcasted": false, "description": "Sets the position of the given camera relative to its target, set with camSetTarget. Needs a call to camCommit to be conducted.", "server": false}, "deg": {"reviewLevel": 2, "syntax": "deg <scalar>", "local": false, "example": "_degrees = deg 1; // returns 57.2958", "docSyntax": "deg value", "broadcasted": false, "description": "Converts given value in radians to degrees. 1 degree equals 0.01745 radians or pi / 180.", "server": false}, "showCinemaBorder": {"reviewLevel": 1, "syntax": "showCinemaBorder show", "local": false, "example": "showCinemaBorder false;", "docSyntax": "showCinemaBorder show", "broadcasted": false, "description": "Forces drawing of cinema borders when using custom camera camCreate. This is normally used in cutscenes to indicate player has no control.", "server": false}, "getWorld": {"reviewLevel": 2, "syntax": "getWorld", "local": false, "example": "; if testing on Everon, getWorld will return \"eden\" hint getWorld", "docSyntax": "getWorld", "broadcasted": false, "description": "Returns the name of the current map. Name is actually class as defined in config (eg Intro).", "server": false}, "setIdentity": {"reviewLevel": 1, "syntax": "<objUnit> setIdentity identity", "local": false, "example": "_soldier1 setIdentity \"MyLittleSoldier\";", "docSyntax": "person setIdentity identity", "broadcasted": false, "description": "Sets identity of a person. The identities could be defined in a custom config in Description.ext or in the main config. For a list of available main config values see CfgIdentities.", "server": true}, "setFuel": {"reviewLevel": 1, "syntax": "<objVehicle> setFuel amount", "local": true, "example": "_jeepOne setFuel 0.5;", "docSyntax": "vehicle setFuel amount", "broadcasted": true, "description": "Sets fuel percentage from 0 (empty) to 1 (full). The vehicle must be local to the computer where command is executed.", "server": false}, "sideRadio": {"reviewLevel": 1, "syntax": "<objUnit> sideRadio radioName", "local": false, "example": "_soldierOne sideRadio \"messageOne\";", "docSyntax": "unit sideRadio radioName", "broadcasted": false, "description": "Sends the audio message to the side radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "server": true}, "showWatch": {"reviewLevel": 1, "syntax": "showWatch show", "local": false, "example": "showWatch false;", "docSyntax": "showWatch show", "broadcasted": false, "description": "Shows or hides the watch on the map screen, if enabled for the mission and you possess the item. (default true)", "server": false}, "vehicleChat": {"reviewLevel": 1, "syntax": "vehicleName vehicleChat chatText", "local": false, "example": "vehicle player vehicleChat \"Show this text\";", "docSyntax": "vehicleName vehicleChat chatText", "broadcasted": false, "description": "Types text to the vehicle radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "server": true}, "moveInCommander": {"reviewLevel": 2, "syntax": "<objUnit> moveInCommander <objVehicle>", "local": true, "example": "_soldierOne moveInCommander _tankOne", "docSyntax": "unitName moveInCommander vehicle", "broadcasted": true, "description": "Move soldier into vehicle commander position (Immediate, no animation).", "server": false}, "playMusic": {"reviewLevel": 2, "syntax": "playMusic <string>", "local": false, "example": "playMusic \"RadioAmbient1\";", "docSyntax": "playMusic name", "broadcasted": false, "description": "Plays music defined in Description.ext#CfgMusic or config.cpp. To stop the music execute playMusic \"\" or give the start time which is beyond the music duration playMusic [\"SomeMusic\", 1000];", "server": false}, "markerColor": {"reviewLevel": 2, "syntax": "markerColor <string>", "local": false, "example": "if (markerColor \"Marker1\" == \"ColorRed\") then {hint \"Marker1 is red!\"}", "docSyntax": "markerColor markerName", "broadcasted": false, "description": "Returns marker color for given marker. See setMarkerColor.", "server": false}, "disableAI": {"reviewLevel": 1, "syntax": "<objUnit> disableAI section", "local": true, "example": "_soldier1 disableAI \"AUTOTARGET\";", "docSyntax": "unitName disableAI section", "broadcasted": true, "description": "Disable parts of the AI behaviour to get a better control over the actions of a unit. Must be executed where AI unit is local. If unit changes locality, it might need to be executed again at the new locality to maintain effect. Possible values are:", "server": false}, "goto": {"reviewLevel": 1, "syntax": "goto label", "local": false, "example": "", "docSyntax": "goto label", "broadcasted": false, "description": "In SQS scripts only: Go to given label. String argument is used here. Be sure to use double quotes around label name in goto. Define the label with #. Note that Labels are not case sensitive and that labels are searched for from the top of the script, so multiple occurrences of a label will only result in the top most one ever being found.", "server": false}, "commander": {"reviewLevel": 1, "syntax": "commander vehicleName", "local": false, "example": "moveOut commander _tank;", "docSyntax": "commander vehicleName", "broadcasted": false, "description": "In OFP it returns the commander of a vehicle. Since ArmA and VBS2 it returns the primary observer. The commander of a vehicle can be found with effectiveCommander.", "server": true}, "commandFollow": {"reviewLevel": 1, "syntax": "<objUnit> commandFollow followedunit", "local": true, "example": "_soldier1 commandFollow _soldier2", "docSyntax": "unitName commandFollow followedunit", "broadcasted": false, "description": "Order the given unit to follow the given other unit (via the radio).", "server": false}, "lbSize": {"reviewLevel": 2, "syntax": "lbSize <scalar>", "local": true, "example": "_size = lbSize 101;", "docSyntax": "lbSize idc", "broadcasted": false, "description": "Return number of items of listbox or combobox with id idc of topmost user dialog.", "server": false}, "friendly": {"reviewLevel": 2, "syntax": "<objSide> = friendly", "local": false, "example": "", "docSyntax": "Side = friendly", "broadcasted": false, "description": "Friendly side (friendly to all units). This command is not functional and appears to have be replaced by sideFriendly.", "server": false}, "sideLogic": {"reviewLevel": 2, "syntax": "sideLogic", "local": false, "example": "if (side _obj == sideLogic) then { hint \"It's a logic!\"; };", "docSyntax": "sideLogic", "broadcasted": false, "description": "The Logic side.", "server": false}, "stop": {"reviewLevel": 1, "syntax": "<objUnit> stop toggle", "local": true, "example": "loon1 stop true", "docSyntax": "unitName stop toggle", "broadcasted": true, "description": "Stop AI unit.", "server": false}, "setUnitPos": {"reviewLevel": 1, "syntax": "<objUnit> setUnitPos mode", "local": true, "example": "_soldier setUnitPos \"UP\";", "docSyntax": "unit setUnitPos mode", "broadcasted": true, "description": "Set unit position rules. Mode may be one of:", "server": false}, "estimatedTimeLeft": {"reviewLevel": 1, "syntax": "estimatedTimeLeft seconds", "local": false, "example": "estimatedTimeLeft 600; //10 min", "docSyntax": "estimatedTimeLeft seconds", "broadcasted": true, "description": "Sets the estimated time left in the game that is shown in the \"Game in progress\" screen or in the master browser. This command will also force the server to broadcast serverTime to all clients ASAP, without waiting for the next broadcast window, which is about every 5 minutes.", "server": false}, "orderGetIn": {"reviewLevel": 1, "syntax": "unitArray orderGetIn <scalar>", "local": true, "example": "[_unitOne, _unitTwo] orderGetIn true", "docSyntax": "unitArray orderGetIn order", "broadcasted": true, "description": "Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything.", "server": false}, "setDamage": {"reviewLevel": 2, "syntax": "<object> setDamage <scalar>", "local": false, "example": "_soldier1 setDamage 1;", "docSyntax": "object setDamage damage", "broadcasted": true, "description": "Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead.", "server": true}, "shownGPS": {"reviewLevel": 2, "syntax": "shownGPS", "local": false, "example": "if (shownGPS) then {hint \"You have GPS reciever enabled\"};", "docSyntax": "shownGPS", "broadcasted": false, "description": "Checks if client has GPS reciever enabled in description.ext (showGPS param) or force enabled with showGPS command.", "server": false}, "true": {"reviewLevel": 2, "syntax": "<bool>", "local": false, "example": "_var = true; systemChat str _var; //true", "docSyntax": "true", "broadcasted": false, "description": "Always true", "server": false}, "false": {"reviewLevel": 2, "syntax": "<bool>", "local": false, "example": "_var = false; systemChat str _var; //false", "docSyntax": "false", "broadcasted": false, "description": "Always false.", "server": false}, "switchMove": {"reviewLevel": 1, "syntax": "<objUnit> switchMove moveName", "local": true, "example": "Prone: player switchMove \"amovppnemstpsraswrfldnon\";", "docSyntax": "person switchMove moveName", "broadcasted": true, "description": "Applies given animation to a unit. When used on a person, the given move is started immediately (there is no transition). Use _unit switchMove \"\"; to reset animation. For a smooth transition use playMove.", "server": false}, "musicVolume": {"reviewLevel": 2, "syntax": "<scalar> = musicVolume", "local": false, "example": "_volume = musicVolume", "docSyntax": "Number = musicVolume", "broadcasted": false, "description": "Checks the current music volume (set by fadeMusic)", "server": false}, "requiredVersion": {"reviewLevel": 1, "syntax": "requiredVersion version", "local": false, "example": "if\u00c2\u00a0!(requiredVersion \"1.09\") exitWith {};", "docSyntax": "requiredVersion version", "broadcasted": false, "description": "Check if version of application is available. If the current version is older than the required one, a warning message is shown and false is returned.", "server": false}, "queryMagazinePool": {"reviewLevel": 2, "syntax": "<scalar> = queryMagazinePool <string>", "local": false, "example": "_num = queryMagazinePool \"M16\";", "docSyntax": "Number = queryMagazinePool name", "broadcasted": false, "description": "Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission).", "server": false}, "knowsAbout": {"reviewLevel": 1, "syntax": "who knowsAbout <object>", "local": true, "example": "_knowledge = player knowsAbout _target;", "docSyntax": "who knowsAbout target", "broadcasted": false, "description": "Checks if a group or a side knows about target.", "server": false}, "getMarkerSize": {"reviewLevel": 2, "syntax": "getMarkerSize <string>", "local": false, "example": "\"MarkerOne\" setMarkerSize [100,200]; _size = getMarkerSize \"MarkerOne\"; //returns [100,200]", "docSyntax": "getMarkerSize markerName", "broadcasted": false, "description": "Returns the size of the given marker. A getter for setMarkerSize and an alias of markerSize.", "server": true}, "countSide": {"reviewLevel": 1, "syntax": "<objSide> countSide arrayName", "local": false, "example": "_num = west countSide list _triggerOne;", "docSyntax": "side countSide arrayName", "broadcasted": false, "description": "Count how many units in the given array belong to given side. If the object in passed array is a Group, the leader of the group will be counted.", "server": true}, "moveInDriver": {"reviewLevel": 2, "syntax": "<objUnit> moveInDriver <objVehicle>", "local": true, "example": "_soldierOne moveInDriver _tankOne", "docSyntax": "unitName moveInDriver vehicle", "broadcasted": true, "description": "Move soldier into vehicle driver position (Immediate, no animation).", "server": false}, "weapons": {"reviewLevel": 1, "syntax": "<array> = weapons vehicleName", "local": false, "example": "_wArray = weapons player;", "docSyntax": "Array = weapons vehicleName", "broadcasted": false, "description": "Returns array of names of all Unit's weapons.", "server": false}, "fire": {"reviewLevel": 1, "syntax": "<objUnit> fire muzzle", "local": true, "example": "_soldier fire \"M16\";", "docSyntax": "unit fire muzzle", "broadcasted": true, "description": "Forces a unit to fire the given weapon.", "server": false}, "sliderSetRange": {"reviewLevel": 2, "syntax": "sliderSetRange [<scalar>,min,max]", "local": false, "example": "sliderSetRange [101, 0, 100];", "docSyntax": "sliderSetRange [idc, min, max]", "broadcasted": false, "description": "Set limits of slider idc of topmost user dialog.", "server": false}, "createUnit": {"reviewLevel": 2, "syntax": "<objGroup> createUnit [type,position,markers,placement,special]", "local": false, "example": "_unit = group player createUnit [\"B_RangeMaster_F\", position player, [], 0, \"FORM\"];", "docSyntax": "group createUnit [type, position, markers, placement, special]", "broadcasted": true, "description": "Creates a unit of class that's defined in CfgVehicles.", "server": false}, "lbPicture": {"reviewLevel": 2, "syntax": "lbPicture [<scalar>,<scalar>]", "local": false, "example": "_picture = lbPicture [101, 0];", "docSyntax": "lbPicture [idc, index]", "broadcasted": false, "description": "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "server": false}, "plus": {"server": false, "broadcasted": false, "local": false}, "loadStatus": {"reviewLevel": 1, "syntax": "<object> loadStatus entryName", "local": false, "example": "_ok = player loadStatus \"playerState\";", "docSyntax": "obj loadStatus entryName", "broadcasted": false, "description": "Loads object's properties from Objects.sav file in campaign directory (from entry name).", "server": false}, "getDammage": {"reviewLevel": 2, "syntax": "getDammage <object>", "local": false, "example": "_damage = getDammage player;", "docSyntax": "getDammage object", "broadcasted": false, "description": "Returns the object damage in the range from 0 to 1. Alias of damage.", "server": false}, "lbSetCurSel": {"reviewLevel": 2, "syntax": "lbSetCurSel [<scalar>,<scalar>]", "local": false, "example": "lbSetCurSel [101, 0];", "docSyntax": "lbSetCurSel [idc, index]", "broadcasted": false, "description": "Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "server": false}, "commandWatch": {"reviewLevel": 1, "syntax": "<objUnit>(s) commandWatch position", "local": true, "example": "_soldierOne commandWatch markerPos \"MarkerMoveOne\"", "docSyntax": "unitName(s) commandWatch position", "broadcasted": true, "description": "Orders the unit(s) to watch the given position or target (via the radio). Use objNull as the target to order a unit to stop watching a position/target", "server": false}, "setRadioMsg": {"reviewLevel": 2, "syntax": "<scalar> setRadioMsg <string>", "local": false, "example": "1 setRadioMsg \"Click meeeeeeeeee\"; //changes title of radio Alpha", "docSyntax": "index setRadioMsg text", "broadcasted": false, "description": "Sets radio trigger menu title text (0 -> 0 -> map radio). Use \"NULL\" to disable radio slot. Use \"\" to restore default title", "server": false}, "inflame": {"reviewLevel": 1, "syntax": "fireplace inflame burn", "local": false, "example": "_fireplaceOne inflame true;", "docSyntax": "fireplace inflame burn", "broadcasted": true, "description": "Control fireplace burning. Set inflame to true (on) or false (off).", "server": true}, "removeMagazine": {"reviewLevel": 1, "syntax": "<objUnit> removeMagazine magazineName", "local": true, "example": "player removeMagazine \"M16\"", "docSyntax": "unitName removeMagazine magazineName", "broadcasted": false, "description": "Remove magazine from the unit.", "server": false}, "doMove": {"reviewLevel": 1, "syntax": "<objUnit>(s) doMove position", "local": true, "example": "_soldier1 doMove (position _officer);", "docSyntax": "unit(s) doMove position", "broadcasted": true, "description": "Order the given unit(s) to move to the given position (without radio messages). After reaching his destination, the unit will immediately return to formation (if in a group); or order his group to form around his new position (if a group leader). Use doStop to stop units returning to formation.", "server": false}, "commandMove": {"reviewLevel": 1, "syntax": "<objUnit> commandMove position", "local": true, "example": "_soldier1 commandMove (getMarkerPos \"Marker1\")", "docSyntax": "unitName commandMove position", "broadcasted": true, "description": "Order the given unit(s) to move to the given location (via the radio). Exactly the same as doMove, except this command displays a radio message.", "server": false}, "addMagazine": {"reviewLevel": 1, "syntax": "<objUnit> addMagazine magazineName", "local": true, "example": "player addMagazine \"30Rnd_556x45_STANAG\";", "docSyntax": "unitName addMagazine magazineName", "broadcasted": true, "description": "Adds a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled (or uniform/vest/bagpack are full in Arma3), any further addMagazine commands are ignored. If class of magazine does not exist, error message is printed in .rpt: player addMagazine \"dasdsa\"; // .rpt: Given magazine[dasdsa] not found)", "server": true}, "asin": {"reviewLevel": 1, "syntax": "<scalar> = asin x", "local": false, "example": "_degrees=asin 0.5", "docSyntax": "Number = asin x", "broadcasted": false, "description": "Arcsine of a number, result in Degrees.", "server": false}, "setFlagSide": {"reviewLevel": 2, "syntax": "<objFlag> setFlagSide <objSide>", "local": true, "example": "_flag1 setFlagSide east;", "docSyntax": "flag setFlagSide side", "broadcasted": true, "description": "Sets flag Side. A flag may be taken by any unit that is enemy to the side that owns the flag. Just like with setFlagTexture, if the command executed where unit is local effect of the command will be global and JIP compatible.", "server": false}, "cheatsEnabled": {"reviewLevel": 2, "syntax": "<bool> = cheatsEnabled", "local": false, "example": "_enabled = cheatsEnabled;", "docSyntax": "Boolean = cheatsEnabled", "broadcasted": false, "description": "Checks whether cheats are enabled (whether the designers' version is running).", "server": false}, "skipTime": {"reviewLevel": 1, "syntax": "skipTime duration", "local": false, "example": "skipTime 5;", "docSyntax": "skipTime duration", "broadcasted": false, "description": "Jumps the specified number of hours forward or backward.", "server": false}, "move": {"reviewLevel": 1, "syntax": "<objGroup> move position", "local": true, "example": "_groupOne move position player;", "docSyntax": "group move position", "broadcasted": true, "description": "Let group move to given position (format Position or Position2D) without waypoint. Active waypoints will be ignored when command is used.", "server": false}, "canStand": {"reviewLevel": 2, "syntax": "<bool> = canStand <objUnit>", "local": false, "example": "SQS: ?!(canStand player)\u00c2\u00a0: player groupChat \"My legs! They hit my legs!\"", "docSyntax": "Boolean = canStand unitName", "broadcasted": false, "description": "Returns if the given soldier is able to stand up.", "server": true}, "countUnknown": {"reviewLevel": 1, "syntax": "<objUnit> countUnknown arrayName", "local": false, "example": "_num = player countUnknown list _triggerOne;", "docSyntax": "unitName countUnknown arrayName", "broadcasted": false, "description": "Count how many units in the array are unknown to the given unit.", "server": true}, "hasWeapon": {"reviewLevel": 1, "syntax": "<bool> = <objUnit> hasWeapon weaponName", "local": false, "example": "?!(player hasWeapon \"M16\")\u00c2\u00a0: player addWeapon \"M16\"", "docSyntax": "Boolean = unitName hasWeapon weaponName", "broadcasted": false, "description": "Checks if a unit has the given weapon.", "server": true}, "deleteStatus": {"reviewLevel": 1, "syntax": "<bool> = deleteStatus statusName", "local": false, "example": "? deleteStatus \"playerStatus\"\u00c2\u00a0: \"saved status gone from campaign\"", "docSyntax": "Boolean = deleteStatus statusName", "broadcasted": true, "description": "Delete a status (created with saveStatus) from the campaign's progress file.", "server": false}, "setSkill": {"reviewLevel": 1, "syntax": "<objUnit> setSkill skill", "local": false, "example": "_hero setSkill 1;", "docSyntax": "unit setSkill skill", "broadcasted": false, "description": "Sets ability level of person (commander unit). Value of skill may vary from 0 to 1.", "server": false}, "sideFriendly": {"reviewLevel": 2, "syntax": "<objSide> = sideFriendly", "local": false, "example": "", "docSyntax": "Side = sideFriendly", "broadcasted": false, "description": "The Friendly side (used for captives).", "server": false}, "addMagazinePool": {"reviewLevel": 2, "syntax": "addMagazinePool [magazineName,count]", "local": false, "example": "addMagazinePool [\"M16\", 20];", "docSyntax": "addMagazinePool [magazineName, count]", "broadcasted": false, "description": "Add magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only.", "server": false}, "fuel": {"reviewLevel": 2, "syntax": "fuel <objVehicle>", "local": false, "example": "if (fuel vehicle player == 0) then {hint \"The vehicle is out of fuel!\"};", "docSyntax": "fuel vehicle", "broadcasted": false, "description": "Checks how much fuel is left in the gas tank of a vehicle.", "server": true}, "setFog": {"reviewLevel": 1, "syntax": "<scalar> setFog fog", "local": false, "example": "15 setFog 0.5;", "docSyntax": "time setFog fog", "broadcasted": true, "description": "Changes the fog smoothly over the the given TransitionTime (in seconds). A time of zero means there will be an immediate change. A fog intensity of zero is minimum fog and a fog level of one is maximum fog.", "server": false}, "local": {"reviewLevel": 2, "syntax": "local <object>", "local": false, "example": "SQS:?!local _unitName\u00c2\u00a0: hint \"remote\"", "docSyntax": "local object", "broadcasted": false, "description": "Check if given unit is local on the computer in Multiplayer games (see Locality in Multiplayer for general concepts).", "server": true}, "inflamed": {"reviewLevel": 1, "syntax": "inflamed fireplace", "local": false, "example": "_inflamed = inflamed _fireplaceOne;", "docSyntax": "inflamed fireplace", "broadcasted": false, "description": "Checks if fireplace is inflamed (burning) or not. To check if a unit is receiving damage from fire, use isBurning command.", "server": true}, "combatMode": {"reviewLevel": 2, "syntax": "<string> = combatMode <objGroup>", "local": false, "example": "if ((combatMode _grp1) == \"BLUE\") then {_grp1 setCombatMode \"GREEN\"};", "docSyntax": "String = combatMode grp", "broadcasted": false, "description": "Returns the combat mode of the given unit. See setCombatMode for more information about combat modes.", "server": true}, "commandTarget": {"reviewLevel": 2, "syntax": "<objUnit> commandTarget <object>", "local": true, "example": "_ESoldier1 commandTarget _WSoldier1;", "docSyntax": "unitName commandTarget target", "broadcasted": true, "description": "Order the given unit(s) to target the given target (via the radio). Command given to the player, puts a red square with words Target and Distance on player's HUD at target location. If player in vehicle and has radar facilities, it also adds target marker to the radar.", "server": false}, "groupChat": {"reviewLevel": 1, "syntax": "<objUnit> groupChat chatText", "local": false, "example": "_soldierOne groupChat \"Show this text\";", "docSyntax": "unitName groupChat chatText", "broadcasted": false, "description": "Types text to the group radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "server": true}, "camSetPos": {"reviewLevel": 1, "syntax": "<objCamera> camSetPos position", "local": true, "example": "_cam camSetPos [2300,1000,130]; _cam camCommit 10;", "docSyntax": "camera camSetPos position", "broadcasted": false, "description": "Sets the position of the given camera or seagull (see camCreate). It is worth mentioning that camera position can also be set with setPos, in which case it would be instant. With camSetPos it is possible to make smooth position transition in time, defined with camCommit, which is required in this case.", "server": false}, "isEngineOn": {"reviewLevel": 2, "syntax": "isEngineOn <objVehicle>", "local": false, "example": "_carEngineIsOn = isEngineOn _carOne;", "docSyntax": "isEngineOn vehicle", "broadcasted": false, "description": "Returns true if engine is on, false if it is off.", "server": true}, "clearWeaponPool": {"reviewLevel": 2, "syntax": "clearWeaponPool", "local": false, "example": "clearWeaponPool;", "docSyntax": "clearWeaponPool", "broadcasted": false, "description": "Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only.", "server": false}, "forceMap": {"reviewLevel": 1, "syntax": "forceMap show", "local": false, "example": "forceMap true", "docSyntax": "forceMap show", "broadcasted": false, "description": "Opens non-interactive main map in background that overrides user screen. The user is able to fire but cannot see the world just the map. To force open interactive map use openMap command.", "server": false}, "setAccTime": {"reviewLevel": 1, "syntax": "setAccTime accFactor", "local": false, "example": "setAccTime 0.1", "docSyntax": "setAccTime accFactor", "broadcasted": false, "description": "Set time acceleration coefficient. May be also used to slow time in cutscenes. This command does NOT work in multiplayer. accFactor is clamped to [1/128; 4].", "server": false}, "shownPad": {"reviewLevel": 2, "syntax": "shownPad", "local": false, "example": "if (shownPad) then {hint \"You have Notepad enabled.\"};", "docSyntax": "shownPad", "broadcasted": false, "description": "Checks if client has Notepad enabled.", "server": false}, "getDir": {"reviewLevel": 2, "syntax": "getDir <object>", "local": false, "example": "_azimuth = getDir player;", "docSyntax": "getDir object", "broadcasted": false, "description": "Returns the object heading in the range from 0 to 360.", "server": true}, "ln": {"reviewLevel": 1, "syntax": "<scalar> = ln x", "local": false, "example": "", "docSyntax": "Number = ln x", "broadcasted": false, "description": "Natural logarithm of x.", "server": false}, "addWeaponPool": {"reviewLevel": 2, "syntax": "addWeaponPool [weaponName,count]", "local": false, "example": "addWeaponPool [\"M16\",5];", "docSyntax": "addWeaponPool [weaponName, count]", "broadcasted": false, "description": "Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only.", "server": false}, "doFire": {"reviewLevel": 2, "syntax": "<objUnit> doFire <object>", "local": true, "example": "_ESoldier1 doFire _WSoldier1;", "docSyntax": "unitName doFire target", "broadcasted": true, "description": "Order the given unit(s) to fire on the given target (without radio messages). The target is set with doTarget or commandTarget. The target can be a unit or a vehicle, but not an object.", "server": false}, "lbCurSel": {"reviewLevel": 2, "syntax": "lbCurSel <scalar>", "local": false, "example": "_index = lbCurSel 101;", "docSyntax": "lbCurSel idc", "broadcasted": false, "description": "Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog. For listbox LB_MULTI (multi-selection) use lbSelection.", "server": false}, "onMapSingleClick": {"reviewLevel": 1, "syntax": "onMapSingleClick command", "local": false, "example": "onMapSingleClick \"'SoldierWB' createUnit [_pos, group player]; true\"; ArmA: Creates a soldier unit at the position clicked.", "docSyntax": "onMapSingleClick command", "broadcasted": false, "description": "Define action performed when user clicks in map by executing command string. the string receives 5 (localised in scope) variables:", "server": false}, "alive": {"reviewLevel": 2, "syntax": "alive <object>", "local": false, "example": "SQS: ?!(alive player)\u00c2\u00a0: exit", "docSyntax": "alive object", "broadcasted": false, "description": "Check if given vehicle/person/building is alive (i.e. not dead or destroyed). alive objNull returns false.", "server": true}, "speedMode": {"reviewLevel": 1, "syntax": "<string> = speedMode groupName", "local": false, "example": "_grpspeed1 = speedMode grp1", "docSyntax": "String = speedMode groupName", "broadcasted": false, "description": "Returns speed mode of the group, which can be any of the following:", "server": false}, "atan2": {"reviewLevel": 1, "syntax": "x atan2 y", "local": false, "example": "_xy = [5,3]; _degrees = (_xy select 0) atan2 (_xy select 1); //59.0362", "docSyntax": "x atan2 y", "broadcasted": false, "description": "ArcTangent of x/y. Used to determine the angle of a vector [x,y]. Result in Degrees between -180 and 180.", "server": false}, "camSetBank": {"reviewLevel": 1, "syntax": "<objCamera> camSetBank bank", "local": false, "example": "_camera camSetBank -0.1", "docSyntax": "camera camSetBank bank", "broadcasted": false, "description": "Sets camera bank angle. Does not commit changes.", "server": false}, "camCreate": {"reviewLevel": 1, "syntax": "type camCreate position", "local": false, "example": "_cam = \"camera\" camCreate (position player)", "docSyntax": "type camCreate position", "broadcasted": false, "description": "Create a camera or a seagull object on the given position. Also other objects can be created this way, but vehicles created with camCreate cannot be entered. Any units created with camCreate will remain static. Differently to createVehicle, objects are created without consideration of the collision detection with surrounding objects, thus the objects are spawned exactly at the given position. camCreate is conducted immediately, the command doesn't wait for camCommit", "server": false}, "saveIdentity": {"reviewLevel": 2, "syntax": "<objUnit> saveIdentity <string>", "local": false, "example": "player saveIdentity \"playerid\"", "docSyntax": "unitName saveIdentity name", "broadcasted": false, "description": "Saves person's identity to Objects.sav file in campaign directory as entry name.", "server": false}, "debugLog": {"reviewLevel": 1, "syntax": "debugLog anything", "local": false, "example": "debugLog player", "docSyntax": "debugLog anything", "broadcasted": false, "description": "Dump argument type and value to debugging output.", "server": false}, "allowGetIn": {"reviewLevel": 1, "syntax": "unitArray allowGetIn allow", "local": false, "example": "[_soldier1, _soldier2] allowGetIn true;", "docSyntax": "unitArray allowGetIn allow", "broadcasted": true, "description": "Set if the units given in the list are allowed to enter vehicles.", "server": true}, "ctrlText": {"reviewLevel": 2, "syntax": "ctrlText <scalar>", "local": false, "example": "_text = ctrlText 100", "docSyntax": "ctrlText idc", "broadcasted": false, "description": "Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path. Does not work on HTML control and returns empty string \"\".", "server": false}, "random": {"reviewLevel": 1, "syntax": "random x", "local": false, "example": "_rNumber = random 1;", "docSyntax": "random x", "broadcasted": false, "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).", "server": false}, "dialog": {"reviewLevel": 2, "syntax": "<bool> = dialog", "local": false, "example": "if (!dialog) then {createDialog \"Dialog1\";};", "docSyntax": "Boolean = dialog", "broadcasted": false, "description": "Tests whether any user dialog is open.", "server": false}, "getMarkerType": {"reviewLevel": 2, "syntax": "<string> = getMarkerType <string>", "local": false, "example": "\"MarkerOne\" setMarkerType \"Destroy\" _type = getMarkerType \"MarkerOne\"", "docSyntax": "String = getMarkerType markerName", "broadcasted": false, "description": "Returns the type of a given marker. See cfgMarkers for a list of standard markers.", "server": true}, "setCaptive": {"reviewLevel": 1, "syntax": "<objUnit> setCaptive status", "local": true, "example": "_soldier1 setCaptive true;", "docSyntax": "unitName setCaptive status", "broadcasted": true, "description": "Mark a unit as captive. If unit is a vehicle, commander is marked. A captive is neutral to everyone (belong to civilian side), and will not trigger \"detected by\" conditions for its original side.", "server": false}, "localize": {"reviewLevel": 1, "syntax": "localize stringName", "local": false, "example": "hint localize \"STR_WEST\"; // -> \"BLUFOR\" (in Arma2)", "docSyntax": "localize stringName", "broadcasted": false, "description": "Used to internationalise text messages. A string is returned from Stringtable.csv (or Stringtable.xml) which corresponds to the stringName.", "server": false}, "setAmmoCargo": {"reviewLevel": 1, "syntax": "vehicleName setAmmoCargo ammoCargo", "local": true, "example": "_ammoTruck1 setAmmoCargo 0.5;", "docSyntax": "vehicleName setAmmoCargo ammoCargo", "broadcasted": true, "description": "Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo. Soldiers use individual magazines instead. Amount: 1 is full cargo. The", "server": false}, "setFaceAnimation": {"reviewLevel": 1, "syntax": "<objUnit> setFaceAnimation blink", "local": false, "example": "_soldier1 setFaceAnimation 0.5;", "docSyntax": "person setFaceAnimation blink", "broadcasted": false, "description": "Set facial animation phase (eye blinking), blink is in the range from 0 to 1.", "server": false}, "setOvercast": {"reviewLevel": 1, "syntax": "<scalar> setOvercast overcast", "local": false, "example": "50 setOvercast 0.5", "docSyntax": "time setOvercast overcast", "broadcasted": false, "description": "Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change. An overcast setting of zero means clear (sunny) weather, and one means storms and rain are very likely. Higher overcast values also result in higher wind speeds.", "server": false}, "setFormation": {"reviewLevel": 1, "syntax": "<objGroup> setFormation formation", "local": true, "example": "_groupOne setFormation \"LINE\"", "docSyntax": "group setFormation formation", "broadcasted": true, "description": "Set group formation. Formation is one of:", "server": false}, "groupRadio": {"reviewLevel": 1, "syntax": "<objUnit> groupRadio radioName", "local": false, "example": "_soldierOne groupRadio \"messageOne\";", "docSyntax": "unit groupRadio radioName", "broadcasted": false, "description": "Sends the audio message to the group radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "server": true}, "leader": {"reviewLevel": 2, "syntax": "<object> = leader <objUnit>", "local": false, "example": "leader group player == leader player", "docSyntax": "Object = leader unitName", "broadcasted": false, "description": "Returns the group leader for the given unit or group. For dead units, objNull is returned.", "server": true}, "lbSetColor": {"reviewLevel": 2, "syntax": "lbSetColor [<scalar>,<scalar>,<scalar>]", "local": true, "example": "lbSetColor [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetColor [idc, index, color]", "broadcasted": false, "description": "Sets the color of the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog to color.", "server": false}, "vehicleRadio": {"reviewLevel": 1, "syntax": "<objUnit> vehicleRadio radioName", "local": false, "example": "_soldierOne vehicleRadio \"messageOne\";", "docSyntax": "unit vehicleRadio radioName", "broadcasted": false, "description": "Sends the audio message to the vehicle radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "server": true}, "addAction": {"reviewLevel": 2, "syntax": "<object> addAction [title,script,arguments,priority,showWindow,hideOnUse,shortcut,condition,radius,unconscious,selection,memoryPoint]", "local": false, "example": "player addAction [\"Hint Hello!\", { hint format [\"Hello\u00c2\u00a0%1!\", name player] }];", "docSyntax": "object addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, selection, memoryPoint]", "broadcasted": false, "description": "", "server": true}, "sliderRange": {"reviewLevel": 2, "syntax": "sliderRange <scalar>", "local": false, "example": "_slidelimits1 = sliderRange 105;", "docSyntax": "sliderRange idc", "broadcasted": false, "description": "Return limits, as an Array [min, max] of slider idc of topmost user dialog.", "server": false}, "commandFire": {"reviewLevel": 2, "syntax": "<objUnit> commandFire <object>", "local": true, "example": "_ESoldier1 commandFire _WSoldier1", "docSyntax": "unitName commandFire target", "broadcasted": false, "description": "Order the given unit to fire on the given target (via the radio). If the target is objNull, the unit is ordered to fire on its current target (set with doTarget or commandTarget).", "server": false}, "setMarkerType": {"reviewLevel": 1, "syntax": "<string> setMarkerType type", "local": false, "example": "\"MarkerOne\" setMarkerType \"Warning\";", "docSyntax": "markerName setMarkerType type", "broadcasted": true, "description": "Set marker type. See cfgMarkers for a list of standard markers.", "server": false}, "setTerrainGrid": {"reviewLevel": 1, "syntax": "setTerrainGrid grid", "local": false, "example": "setTerrainGrid 12.5", "docSyntax": "setTerrainGrid grid", "broadcasted": false, "description": "Operation Flashpoint, VBS1: Set desired terrain resolution (in meters). For default landscapes, supported resolutions are:", "server": false}, "lbSetData": {"reviewLevel": 2, "syntax": "lbSetData [<scalar>,<scalar>,data]", "local": false, "example": "lbSetData [101, 1, \"#1\"];", "docSyntax": "lbSetData [idc, index, data]", "broadcasted": false, "description": "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.", "server": false}, "countType": {"reviewLevel": 1, "syntax": "type countType objects", "local": false, "example": "_count = \"Tank\" countType list _triggerOne;", "docSyntax": "type countType objects", "broadcasted": false, "description": "Count how many objects in the array are of given type. This command also works with parent classes like \"Air\", \"Tank\", and \"Car\". For a full class reference see Classes.", "server": true}, "setDammage": {"reviewLevel": 2, "syntax": "<object> setDammage <scalar>", "local": false, "example": "_soldier1 setDammage 1;", "docSyntax": "object setDammage damage", "broadcasted": true, "description": "Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead.", "server": true}, "camSetDir": {"reviewLevel": 1, "syntax": "<objCamera> camSetDir direction", "local": true, "example": "pos1 = player modelToWorld [0,5,5]; cam = \"camera\" camCreate pos1; cam cameraEffect [\"INTERNAL\", \"BACK\"]; pos2 = player modelToWorld [0,50,50]; cam camSetPos pos2; cam camSetDir (pos2 vectorFromTo pos1); cam camCommit 5; 0 = [] spawn { waitUntil {camCommitted cam}; cam camSetPos pos1; cam camCommit 5; };", "docSyntax": "camera camSetDir direction", "broadcasted": false, "description": "Sets the orientation of the given camera in the direction of the given vector. Needs camCommit.", "server": false}, "score": {"reviewLevel": 2, "syntax": "score <objUnit>", "local": false, "example": "_pScore = score player;", "docSyntax": "score unit", "broadcasted": false, "description": "Returns the person's score in MP.", "server": false}, "getPos": {"reviewLevel": 2, "syntax": "getPos <object>", "local": false, "example": "hintSilent str getPos player;", "docSyntax": "getPos object", "broadcasted": false, "description": "Returns the object position in format PositionAGLS. Z value is height over the surface underneath.", "server": true}, "direction": {"reviewLevel": 2, "syntax": "direction <object>", "local": false, "example": "player setDir 90; _d = direction player;//returns 90", "docSyntax": "direction object", "broadcasted": false, "description": "Returns the direction an object or a location is facing (differs from getDir in that this also works with locations).", "server": true}, "typeOf": {"reviewLevel": 2, "syntax": "typeOf <object>", "local": false, "example": "if (typeOf vehicle player == \"B_Heli_Light_01_armed_F\") then {hint \"Player is in AH-9 Pawnee\"};", "docSyntax": "typeOf object", "broadcasted": false, "description": "Returns the config class name of given object or \"\" if object doesn't have config class.", "server": false}, "units": {"reviewLevel": 1, "syntax": "units groupOrUnit", "local": false, "example": "_myUnitCount = count units group player;", "docSyntax": "units groupOrUnit", "broadcasted": false, "description": "Returns an array with all the units in the group or group of the unit.", "server": false}, "saveVar": {"reviewLevel": 1, "syntax": "saveVar varname", "local": false, "example": "saveVar \"varOne\"", "docSyntax": "saveVar varname", "broadcasted": false, "description": "Save variable value into the campaign space. This variable is available to all following missions in the campaign.", "server": false}, "addMagazineCargo": {"reviewLevel": 1, "syntax": "vehicleName addMagazineCargo [magazineName,count]", "local": true, "example": "_truck addMagazineCargo [\"M16\", 5];", "docSyntax": "vehicleName addMagazineCargo [magazineName, count]", "broadcasted": false, "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units. Once the magazine cargo space is filled up, any further addMagazineCargo commands are ignored.", "server": true}, "showGPS": {"reviewLevel": 1, "syntax": "showGPS show", "local": false, "example": "showGPS true;", "docSyntax": "showGPS show", "broadcasted": false, "description": "Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item. (default false)", "server": false}, "showPad": {"reviewLevel": 1, "syntax": "showPad show", "local": false, "example": "showPad false", "docSyntax": "showPad show", "broadcasted": false, "description": "Shows or hides the notebook on the map screen, if enabled for the mission. (default true). It is no longer relevant to Arma 2.", "server": false}, "mod": {"reviewLevel": 1, "syntax": "<scalar> = a mod b", "local": false, "example": "", "docSyntax": "Number = a mod b", "broadcasted": false, "description": "Remainder of a divided by b.", "server": false}, "list": {"reviewLevel": 2, "syntax": "<array> = list <objTrigger>", "local": false, "example": "_tlist = list _triggerOne;", "docSyntax": "Array = list trigger", "broadcasted": false, "description": "List of units that would activate given Trigger. It returns nothing before the simulation started, i.e. in (undelayed) init.sqf files. Returns a pointer to the trigger's list after the simulation started.", "server": true}, "getMarkerColor": {"reviewLevel": 2, "syntax": "getMarkerColor <string>", "local": false, "example": "\"MarkerOne\" setMarkerColor \"ColorBlack\"; _color = getMarkerColor \"MarkerOne\"; //returns \"ColorBlack\"", "docSyntax": "getMarkerColor markerName", "broadcasted": false, "description": "Returns marker color for given marker. See setMarkerColor.", "server": true}, "flyInHeight": {"reviewLevel": 1, "syntax": "aircraft flyInHeight <scalar>", "local": true, "example": "_helicopter flyInHeight 40;", "docSyntax": "aircraft flyInHeight altitude", "broadcasted": true, "description": "Sets the flying altitude for aircraft relatively to the ground surface. Avoid too low altitudes, as helicopters and planes won't evade trees and obstacles on the ground. The default flying altitude is 100 meters.", "server": false}, "time": {"reviewLevel": 2, "syntax": "<scalar>", "local": false, "example": "_future = time + 30; waitUntil {time >= _future}; /* continue after 30 seconds...", "docSyntax": "time", "broadcasted": false, "description": "Returns time elapsed since mission started (in seconds). The value is different on each client. If you need unified time, use serverTime.", "server": false}, "commandStop": {"reviewLevel": 2, "syntax": "commandStop <objUnit>", "local": false, "example": "commandStop _soldier1;", "docSyntax": "commandStop unitName", "broadcasted": true, "description": "Order the given unit(s) to stop (via the radio).", "server": true}, "onBriefingGear": {"reviewLevel": 2, "syntax": "onBriefingGear <string>", "local": false, "example": "onBriefingGear \"GearVoiceOver\"", "docSyntax": "onBriefingGear soundName", "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Gear tab is selected in the briefing.", "server": false}, "fadeSound": {"reviewLevel": 1, "syntax": "<scalar> fadeSound volume", "local": false, "example": "5 fadeSound 0", "docSyntax": "time fadeSound volume", "broadcasted": false, "description": "Changes the sound volume smoothly within the given time.", "server": false}, "shownCompass": {"reviewLevel": 2, "syntax": "shownCompass", "local": false, "example": "if (shownCompass) then {hint \"You have Compass enabled\"};", "docSyntax": "shownCompass", "broadcasted": false, "description": "Checks if client has Compass enabled in description.ext (showCompass param) or force enabled with showCompass command.", "server": false}, "lbAdd": {"reviewLevel": 2, "syntax": "<scalar> = lbAdd [<scalar>,<string>]", "local": true, "example": "_index = lbAdd [101, \"First item\"];", "docSyntax": "Number = lbAdd [idc, text]", "broadcasted": false, "description": "Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.", "server": false}, "globalRadio": {"reviewLevel": 1, "syntax": "<objUnit> globalRadio radioName", "local": false, "example": "_soldierOne globalRadio \"messageOne\";", "docSyntax": "unit globalRadio radioName", "broadcasted": false, "description": "Sends the audio message to the global radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "server": true}, "addEventHandler": {"reviewLevel": 2, "syntax": "<object> addEventHandler [type,command]", "local": true, "example": "_EHkilledIdx = player addEventHandler [\"killed\", {_this exec \"playerKilled.sqs\"}]", "docSyntax": "object addEventHandler [type, command]", "broadcasted": false, "description": "Adds event handler (EH) to the given object and returns EH handle. If EH has some data to return upon event (e.g. the \"killed\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.", "server": true}, "preprocessFile": {"reviewLevel": 1, "syntax": "<string> = preprocessFile fileName", "local": false, "example": "_content = preprocessFile \"myFunction.sqf\";", "docSyntax": "String = preprocessFile fileName", "broadcasted": false, "description": "Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and PreProcessor Commands.", "server": false}, "clearMagazineCargo": {"reviewLevel": 1, "syntax": "clearMagazineCargo vehicleName", "local": false, "example": "clearMagazineCargo _truck;", "docSyntax": "clearMagazineCargo vehicleName", "broadcasted": false, "description": "Remove all magazines from the given vehicle's magazine cargo space.", "server": true}, "stopped": {"reviewLevel": 2, "syntax": "<bool> = stopped <objUnit>", "local": false, "example": "? (stopped _loon1)\u00c2\u00a0: hint \"Loon1 is stopped\"", "docSyntax": "Boolean = stopped unitName", "broadcasted": false, "description": "Check if unit is stopped by stop command.", "server": false}, "behaviour": {"reviewLevel": 2, "syntax": "behaviour <objUnit>", "local": false, "example": "_soldier setBehaviour \"CARELESS\"; _b = behaviour _soldier; //returns \"CARELESS\"", "docSyntax": "behaviour unitName", "broadcasted": false, "description": "Return the behaviour of a unit. For Arma 3 behaviour explanation see Arma_3_AI_Behavior", "server": true}, "cutRsc": {"reviewLevel": 2, "syntax": "cutRsc [class,type,<scalar>,showInMap]", "local": false, "example": "cutRsc [\"binocular\", \"PLAIN\"]; cutRsc [\"binocular\", \"PLAIN\", 2]; cutRsc [\"binocular\", \"PLAIN\", 2, false];", "docSyntax": "cutRsc [class, type, speed, showInMap]", "broadcasted": false, "description": "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.", "server": false}, "cameraEffect": {"reviewLevel": 2, "syntax": "<objCamera> cameraEffect [effectName,effectPosition,r2tName]", "local": true, "example": "_cam cameraEffect [\"internal\", \"BACK\"];", "docSyntax": "camera cameraEffect [effectName, effectPosition, r2tName]", "broadcasted": false, "description": "Sets the given effect on the given camera. If you want to switch the screen directly to the first-person, aiming, third-person or group view of an object, use switchCamera instead. The effect type \"Terminate\" is used to exit the current camera view and switch back to the player's view. Does not need camCommit.", "server": false}, "reveal": {"reviewLevel": 1, "syntax": "toWhom reveal <object>", "local": false, "example": "_soldierOne reveal _soldierTwo; //soldierOne knowsAbout information about soldierTwo is updated", "docSyntax": "toWhom reveal target", "broadcasted": false, "description": "Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered.", "server": true}, "markerPos": {"reviewLevel": 2, "syntax": "markerPos <string>", "local": false, "example": "_mPos = markerPos \"markerOne\";", "docSyntax": "markerPos markerName", "broadcasted": false, "description": "Get marker Position. Note: This function is identical to getMarkerPos.", "server": true}, "flag": {"reviewLevel": 2, "syntax": "<objFlag> <objUnit>", "local": false, "example": "_flag = flag _soldier;", "docSyntax": "flag unit", "broadcasted": false, "description": "Returns the original flag pole of the flag the unit is carrying.", "server": true}, "getWPPos": {"reviewLevel": 2, "syntax": "<array> = getWPPos [<objGroup>,<scalar>]", "local": false, "example": "[_group1,1] setWPPos [200,600,0];", "docSyntax": "Array = getWPPos [group, index]", "broadcasted": false, "description": "Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor.", "server": true}, "titleObj": {"reviewLevel": 2, "syntax": "titleObj [class,type,<scalar>,showInMap]", "local": false, "example": "titleObj [\"BISLogo\", \"PLAIN\"]", "docSyntax": "titleObj [class, type, speed, showInMap]", "broadcasted": false, "description": "Shows object defined in global config in CfgTitles", "server": false}, "switchCamera": {"reviewLevel": 1, "syntax": "<object> switchCamera mode", "local": false, "example": "player switchCamera \"Gunner\";", "docSyntax": "target switchCamera mode", "broadcasted": false, "description": "Switch camera to given vehicle / camera. Mode is one of:", "server": false}, "moveInCargo": {"reviewLevel": 2, "syntax": "<objUnit> moveInCargo <objVehicle>", "local": true, "example": "_soldierOne moveInCargo _jeepOne;", "docSyntax": "unitName moveInCargo vehicle", "broadcasted": true, "description": "Move soldier into vehicle cargo position (Immediate, no animation).", "server": false}, "setMarkerColor": {"reviewLevel": 2, "syntax": "<string> setMarkerColor <scalar>", "local": false, "example": "\"MarkerOne\" setMarkerColor \"ColorBlack\";", "docSyntax": "markerName setMarkerColor color", "broadcasted": true, "description": "Sets marker color. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3", "server": false}, "doFollow": {"reviewLevel": 2, "syntax": "<objUnit> doFollow unitName2", "local": true, "example": "_soldier1 doFollow _soldier2", "docSyntax": "unitName doFollow unitName2", "broadcasted": true, "description": "Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages). Also is used to resume unit formation after doStop, just doFollow leader even if it is the leader himself you want to resume (see Example 2).", "server": false}, "scudState": {"reviewLevel": 1, "syntax": "<scalar> = scudState scudName", "local": false, "example": "if ((scudState _scud) == 3) exitWith { player sideChat \"SCUD Launch status: Missile Ignition\"; };", "docSyntax": "Number = scudState scudName", "broadcasted": false, "description": "Current state of given Scud launcher. Following states are recognized:", "server": false}, "buildingPos": {"reviewLevel": 1, "syntax": "building buildingPos <scalar>", "local": false, "example": "_soldier setPosATL (_house1 buildingPos 2);", "docSyntax": "building buildingPos index", "broadcasted": false, "description": "Returns PositionAGL of a given indexed position in a building. The index is 0-based (i.e. the first possible position would be 0. So if a building has 5 positions listed in the editor, 4 would be the highest position index usable with this command). Command will return [0,0,0] if buildingPos with given index is non-existent.", "server": true}, "shownWarrant": {"reviewLevel": 2, "syntax": "<bool> = shownWarrant", "local": false, "example": "", "docSyntax": "Boolean = shownWarrant", "broadcasted": false, "description": "Check if player has ID card enabled. Obsolete command.", "server": false}, "abs": {"reviewLevel": 2, "syntax": "<scalar> = abs <scalar>", "local": true, "example": "_n = abs -3; // returns 3", "docSyntax": "Number = abs n", "broadcasted": false, "description": "Absolute value of a real number", "server": false}, "buttonSetAction": {"reviewLevel": 2, "syntax": "buttonSetAction [<scalar>,action]", "local": true, "example": "buttonSetAction [100, \"player exec \"\"reply.sqs\"\"\"];", "docSyntax": "buttonSetAction [idc, action]", "broadcasted": false, "description": "Set the action of a control of the currently active user dialog. Can be used for buttons and active texts. See Dialog Control for more information about user dialogs. Works with:", "server": false}, "setMarkerPos": {"reviewLevel": 2, "syntax": "<string> setMarkerPos <array>", "local": false, "example": "\"MarkerOne\" setMarkerPos getMarkerPos \"MarkerTwo\"", "docSyntax": "markerName setMarkerPos pos", "broadcasted": true, "description": "Moves the marker. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. However getMarkerPos and markerPos will always return 0 for z.", "server": false}, "shownRadio": {"reviewLevel": 2, "syntax": "shownRadio", "local": false, "example": "if (shownRadio) then {hint \"You have Radio enabled.\"};", "docSyntax": "shownRadio", "broadcasted": false, "description": "Check if player has Radio enabled.", "server": false}, "camCommitted": {"reviewLevel": 2, "syntax": "camCommitted <objCamera>", "local": false, "example": "SQS: ; create a camera object _cam = \"camera\" camCreate [5600,4800,10] _cam camSetTarget player _cam cameraEffect [\"internal\", \"BACK\"] _cam camCommit 0 ; smoothly move the camera to its new position in 6 seconds _cam camSetPos [5680,4720,20] _cam camCommit 6 @camCommitted _cam ; proceed", "docSyntax": "camCommitted camera", "broadcasted": false, "description": "Checks if the conduction of the last camCommit call already finished.", "server": false}, "camSetFovRange": {"reviewLevel": 1, "syntax": "<objCamera> camSetFovRange fovRange", "local": true, "example": "_cam camSetFovRange [0.1, 0.7];", "docSyntax": "camera camSetFovRange fovRange", "broadcasted": false, "description": "Set the zoom level (Field Of View) start and end values for automatical zooming.", "server": false}, "lbSetPicture": {"returns": "void", "reviewLevel": 4, "syntax": "lbSetPicture [<scalar>, <scalar>, <string>]", "local": true, "example": "lbSetPicture [101, 0, \"iskoda\"];", "broadcasted": false, "docSyntax": "lbSetPicture [idc, index, name] or uiControl lbSetPicture [index, name]", "syntax2": "<uiControl> lbSetPicture [<scalar>,<string>]", "description": "Sets a picture for an listbox item displayed to its left.", "server": false}, "playSound": {"reviewLevel": 2, "syntax": "playSound <string>", "local": false, "example": "playSound \"soundname\"", "docSyntax": "playSound soundName", "broadcasted": false, "description": "Selects sound from Description.ext#CfgSounds or config.cpp.", "server": false}, "and": {"reviewLevel": 1, "syntax": "<bool> = a and b", "local": false, "example": "if ((alive player) and (_enemycount == 0)) then {hint \"you win\u00c2\u00a0!\"}", "docSyntax": "Boolean = a and b", "broadcasted": false, "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).", "server": false}, "showRadio": {"reviewLevel": 1, "syntax": "showRadio show", "local": false, "example": "showRadio false", "docSyntax": "showRadio show", "broadcasted": false, "description": "Shows or hides the radio on the map screen, if enabled for the mission and you possess the item. (default true)", "server": false}, "lbText": {"reviewLevel": 2, "syntax": "lbText [<scalar>,<scalar>]", "local": true, "example": "_text = lbText [101, 0];", "docSyntax": "lbText [idc, index]", "broadcasted": false, "description": "Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "server": false}, "clearWeaponCargo": {"reviewLevel": 1, "syntax": "clearWeaponCargo vehicleName", "local": false, "example": "clearWeaponCargo _truck", "docSyntax": "clearWeaponCargo vehicleName", "broadcasted": false, "description": "Remove all weapons from the given vehicle's weapon cargo space.", "server": true}, "mapAnimClear": {"reviewLevel": 2, "syntax": "mapAnimClear", "local": true, "example": "mapAnimClear;", "docSyntax": "mapAnimClear", "broadcasted": false, "description": "Clear map animation.", "server": false}, "canMove": {"reviewLevel": 2, "syntax": "<bool> = canMove <objUnit>", "local": false, "example": "SQS: ?!(canMove _tank)\u00c2\u00a0: player sideChat \"He's nailed on the ground! Now hurry!\"", "docSyntax": "Boolean = canMove unitName", "broadcasted": false, "description": "Returns if the given vehicle is still able to move. This command checks only the damage value, not the amount of fuel!", "server": true}, "sideChat": {"reviewLevel": 1, "syntax": "<objUnit> sideChat chatText", "local": false, "example": "_soldierOne sideChat \"Show this text\";", "docSyntax": "unitName sideChat chatText", "broadcasted": false, "description": "Types text to the side radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "server": true}, "soundVolume": {"reviewLevel": 2, "syntax": "<scalar> = soundVolume", "local": false, "example": "_vol = soundVolume", "docSyntax": "Number = soundVolume", "broadcasted": false, "description": "Check current sound volume (set by fadeSound).", "server": false}, "lockWP": {"reviewLevel": 1, "syntax": "groupName lockWP lock", "local": true, "example": "_groupOne lockWP true;", "docSyntax": "groupName lockWP lock", "broadcasted": false, "description": "Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes.", "server": false}, "addWeapon": {"reviewLevel": 2, "syntax": "<objUnit> addWeapon <string>", "local": true, "example": "player addMagazine \"30Rnd_556x45_Stanag\"; player addWeapon \"BAF_L85A2_RIS_SUSAT\";", "docSyntax": "unit addWeapon weapon", "broadcasted": true, "description": "Add a weapon to a unit. For a global version of this command see addWeaponGlobal. Infantry units can only carry a specific number of weapons, once the weapon slots are filled, any further addWeapon commands are ignored.", "server": false}, "enableEndDialog": {"reviewLevel": 2, "syntax": "enableEndDialog", "local": false, "example": "enableEndDialog;", "docSyntax": "enableEndDialog", "broadcasted": false, "description": "Enables the execution of a custom camera sequence after the players death, coded in the script onPlayerKilled.sqs.", "server": false}, "format": {"reviewLevel": 2, "syntax": "format [formatString,var1,var2 ...]", "local": false, "example": "format [\"Player:%1, player's side:%2\", player, side player]; returns \"Player:WEST 1-1-A:1 (Username), player's side:WEST\"", "docSyntax": "format [formatString, var1, var2 ...]", "broadcasted": false, "description": "Composes a string containing other variables or other variable types. Converts any variable type to a string. If you want to convert a string back to a number, use parseNumber. NOTE that output of this command is limited to ~8Kb. joinString on the other hand doesn't have such limit.", "server": false}, "tan": {"reviewLevel": 1, "syntax": "tan x", "local": false, "example": "_tangent = tan 45 Result is 1", "docSyntax": "tan x", "broadcasted": false, "description": "Tangent of x, argument in Degrees.", "server": false}, "clearMagazinePool": {"reviewLevel": 2, "syntax": "clearMagazinePool", "local": false, "example": "clearMagazinePool;", "docSyntax": "clearMagazinePool", "broadcasted": false, "description": "Remove all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only.", "server": false}, "player": {"returns": "objUnit", "reviewLevel": 4, "syntax": "player", "local": true, "example": "player addRating 500;", "docSyntax": "player", "broadcasted": false, "description": "Returns the unit controlled by the local user / player.", "server": false}, "setPos": {"reviewLevel": 2, "syntax": "<object> setPos <array>", "local": false, "example": "player setPos [getPos player select 0, getPos player select 1, (getPos player select 2) +10]; //the same as above using modelToWorld: player setPos (player modelToWorld [0,0,10]); //the same as above using vectorAdd: player setPos (getPos player vectorAdd [0,0,10]);", "docSyntax": "object setPos pos", "broadcasted": true, "description": "Sets object position.", "server": true}, "assignAsCargo": {"reviewLevel": 1, "syntax": "<objUnit> assignAsCargo vehicleName", "local": false, "example": "_soldier1 assignAsCargo _truck; [_soldier1] orderGetIn true;", "docSyntax": "unitName assignAsCargo vehicleName", "broadcasted": true, "description": "Assign a unit as cargo of a vehicle. Used together with orderGetIn to order a unit to get in as cargo into a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the cargo space of the vehicle.", "server": true}, "group": {"reviewLevel": 2, "syntax": "<objGroup> <object>", "local": false, "example": "_playerGrp = group player", "docSyntax": "group object", "broadcasted": false, "description": "Returns the group a unit is assigned to.", "server": true}, "allowDammage": {"reviewLevel": 1, "syntax": "<object> allowDammage allow", "local": false, "example": "player allowDammage false;", "docSyntax": "object allowDammage allow", "broadcasted": false, "description": "Allow or prevent an object being damaged (or injured, or killed). Alias of allowDamage.", "server": false}, "countFriendly": {"reviewLevel": 1, "syntax": "<objUnit> countFriendly arrayName", "local": false, "example": "_num = player countFriendly list _triggerOne;", "docSyntax": "unitName countFriendly arrayName", "broadcasted": false, "description": "Count how many units in the array are considered friendly to the given unit.", "server": true}, "mapAnimAdd": {"reviewLevel": 2, "syntax": "mapAnimAdd [<scalar>,<scalar>,position]", "local": true, "example": "mapAnimAdd [1, 0.1, markerPos \"anim1\"]; mapAnimCommit;", "docSyntax": "mapAnimAdd [time, zoom, position]", "broadcasted": false, "description": "Add next frame to map animation.", "server": false}, "unitReady": {"reviewLevel": 2, "syntax": "<bool> = unitReady <objUnit>", "local": false, "example": "_it = unitReady _soldierOne;", "docSyntax": "Boolean = unitReady unitName", "broadcasted": false, "description": "Check if the unit is ready. Unit is busy when it is given some command like move, until the command is finished.", "server": false}, "primaryWeapon": {"reviewLevel": 2, "syntax": "primaryWeapon <objUnit>", "local": false, "example": "_pWeap = primaryWeapon player;", "docSyntax": "primaryWeapon unit", "broadcasted": false, "description": "Returns name of unit's primary weapon (empty string if none).", "server": true}, "camSetFov": {"reviewLevel": 1, "syntax": "<objCamera> camSetFov level", "local": true, "example": "_cam camSetFov 0.75;", "docSyntax": "camera camSetFov level", "broadcasted": false, "description": "Set the zoom level (Field Of View) of the given camera.", "server": false}, "markerSize": {"reviewLevel": 2, "syntax": "markerSize <string>", "local": false, "example": "_mSize = markerSize \"Marker1\";", "docSyntax": "markerSize markerName", "broadcasted": false, "description": "Returns marker size. This command is identical to getMarkerSize.", "server": true}, "camSetDive": {"reviewLevel": 1, "syntax": "<objCamera> camSetDive dive", "local": false, "example": "_camera camSetDive -0.1", "docSyntax": "camera camSetDive dive", "broadcasted": false, "description": "Sets camera dive angle. Does not commit changes.", "server": false}, "lbSetValue": {"reviewLevel": 2, "syntax": "lbSetValue [<scalar>,<scalar>,<scalar>]", "local": false, "example": "lbSetValue [101, 0, 1];", "docSyntax": "lbSetValue [idc, index, value]", "broadcasted": false, "description": "Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value.", "server": false}, "hintCadet": {"reviewLevel": 2, "syntax": "hintCadet <string>", "local": false, "example": "hintCadet \"Press W to move forward\";", "docSyntax": "hintCadet text", "broadcasted": false, "description": "Shows a text hint only when in cadetMode. The text can contain several lines. \\n is used to indicate the end of a line.", "server": false}, "ctrlShow": {"reviewLevel": 2, "syntax": "ctrlShow [<scalar>,show]", "local": true, "example": "ctrlShow [100, false ];", "docSyntax": "ctrlShow [idc, show]", "broadcasted": false, "description": "Set if a control of the currently active user dialog is shown or not. Read Dialog Control for more information about user dialogs and controls.", "server": false}, "saveStatus": {"reviewLevel": 2, "syntax": "<object> saveStatus <string>", "local": false, "example": "player saveStatus \"playerstate\"", "docSyntax": "object saveStatus name", "broadcasted": false, "description": "Saves object's properties to Objects.sav file in campaign directory as entry name.", "server": false}, "speed": {"reviewLevel": 2, "syntax": "<scalar> <object>", "local": false, "example": "if (speed _truck1 >= 100) then {hint \"You're going too fast!\"};", "docSyntax": "speed object", "broadcasted": false, "description": "Object speed (in km/h). Returns relative speed of given object along Y axis. An equivalent to:", "server": false}, "sideEnemy": {"reviewLevel": 2, "syntax": "sideEnemy", "local": false, "example": "if (side player == sideEnemy) then { hint \"We've got a renegade!\"; };", "docSyntax": "sideEnemy", "broadcasted": false, "description": "The enemy side (used for renegades). Unit of this side is enemy to everyone.", "server": false}, "playMove": {"reviewLevel": 1, "syntax": "<objUnit> playMove moveName", "local": true, "example": "soldierOne playMove \"Stand\"", "docSyntax": "unitName playMove moveName", "broadcasted": true, "description": "When used on person, smooth transition to given move will be done.", "server": false}, "shownWatch": {"reviewLevel": 2, "syntax": "shownWatch", "local": false, "example": "if (shownWatch) then {hint \"You have Watch enabled\"};", "docSyntax": "shownWatch", "broadcasted": false, "description": "Checks if client has Watch enabled in description.ext (showWatch param) or force enabled with showWatch command.", "server": false}, "lbClear": {"reviewLevel": 2, "syntax": "lbClear <scalar>", "local": true, "example": "lbClear 101;", "docSyntax": "lbClear idc", "broadcasted": false, "description": "Clear all items in listbox or combobox with id idc of topmost user dialog.", "server": false}, "sliderSetSpeed": {"returns": "void", "reviewLevel": 4, "syntax": "sliderSetSpeed [<scalar>,<scalar>,<scalar>]", "local": false, "example": "sliderSetSpeed [101, 0.5, 2];", "broadcasted": false, "docSyntax": "sliderSetSpeed [idc,line,page] or uiControl sliderSetSpeed [line, page]", "syntax2": "<uiControl> sliderSetSpeed [<scalar>,<scalar>]", "description": "Set speed of slider with id idc of topmost user dialog.", "server": false}, "join": {"reviewLevel": 1, "syntax": "unitArray join <objGroup>", "local": false, "example": "[_unitOne, _unitTwo] join player;", "docSyntax": "unitArray join group", "broadcasted": true, "description": "Join all units in the array to given group. Maximum number of group members is:", "server": true}, "name": {"reviewLevel": 2, "syntax": "<string> <object>", "local": false, "example": "_name = name player;", "docSyntax": "name object", "broadcasted": false, "description": "When argument is Object, the command returns the name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.", "server": false}, "ctrlSetText": {"reviewLevel": 2, "syntax": "ctrlSetText [<scalar>,<string>]", "local": true, "example": "ctrlSetText [100, \"Hello world\"];//for Dialogs", "docSyntax": "ctrlSetText [idc, text]", "broadcasted": false, "description": "Set the text of a control of the currently active user dialog or display. This command can be used for: static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path. Read Dialog Control for more information about user dialogs and controls.", "server": false}, "formLeader": {"reviewLevel": 2, "syntax": "<object> = formLeader <objUnit>", "local": false, "example": "? (formLeader player\u00c2\u00a0!= leader player)\u00c2\u00a0: hint \"The formation leader is different to the group leader!\"", "docSyntax": "Object = formLeader unitName", "broadcasted": false, "description": "Returns the formation leader of a given unit. This is often the same as the group leader, but not always, for example in cases when a unit is ordered to follow another unit.", "server": true}, "selectWeapon": {"reviewLevel": 1, "syntax": "<objUnit> selectWeapon muzzleName", "local": true, "example": "_soldier1 selectWeapon \"LAWLauncher\";", "docSyntax": "unitName selectWeapon muzzleName", "broadcasted": true, "description": "Selects the given weapon. Note: For weapons that have more than one muzzle, you have to input the", "server": false}, "rating": {"reviewLevel": 2, "syntax": "<scalar> = rating <objUnit>", "local": false, "example": "_score = rating player", "docSyntax": "Number = rating unitName", "broadcasted": false, "description": "Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see Rating Values). Can be changed via addRating by the mission designer. The rating of the player is displayed as the \"score\" at the end of the mission. Via Description.ext one can define how many points it takes to get a perfect score, as well as the number of stars.", "server": true}, "doWatch": {"reviewLevel": 1, "syntax": "<objUnit>(s) doWatch position", "local": true, "example": "_soldierOne doWatch markerPos \"MarkerMoveOne\" The unit named \"soldierOne\" will watch the position where the marker \"MarkerMoveOne\" is placed.", "docSyntax": "unit(s) doWatch position", "broadcasted": true, "description": "Order the given unit(s) to watch the given position or target (without radio messages). Use objNull as the target to order a unit to stop watching a position/target.", "server": false}, "driver": {"reviewLevel": 2, "syntax": "<object> = driver <objVehicle>", "local": false, "example": "(driver _tank) action [\"getout\", _tank];", "docSyntax": "Object = driver vehicle", "broadcasted": false, "description": "Returns the driver of a vehicle.", "server": true}, "rad": {"reviewLevel": 2, "syntax": "rad <scalar>", "local": false, "example": "_radians = rad 180; // Returns 3.1415... => pi", "docSyntax": "rad value", "broadcasted": false, "description": "Converts given value in degrees to radians. 1 radian equals 180 degrees divided by pi.", "server": false}, "magazines": {"reviewLevel": 2, "syntax": "magazines <objVehicle>", "local": false, "example": "_mags = magazines player", "docSyntax": "magazines vehicle", "broadcasted": false, "description": "Returns array of type names of all vehicle's magazines. When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazine to get this information for a currently loaded magazine.", "server": false}, "removeAllWeapons": {"reviewLevel": 2, "syntax": "removeAllWeapons <objUnit>", "local": true, "example": "removeAllWeapons player;", "docSyntax": "removeAllWeapons unitName", "broadcasted": true, "description": "Remove all weapons and magazines of the unit. On vehicles only ammo is removed Does not remove map, compass, radio. Use unitname removeweapon \"itemmap\" for that purpose.", "server": false}, "moveInGunner": {"reviewLevel": 2, "syntax": "<objUnit> moveInGunner <objVehicle>", "local": true, "example": "soldierOne moveInGunner tankOne", "docSyntax": "unitName moveInGunner vehicle", "broadcasted": true, "description": "Move soldier into vehicle gunner position (Immediate, no animation).", "server": false}, "skill": {"reviewLevel": 2, "syntax": "skill <objUnit>", "local": false, "example": "_skill = skill unit1;", "docSyntax": "skill unitName", "broadcasted": false, "description": "Returns current level of ability of a unit, in range between 0 and 1, 1 being the highest level of skill.", "server": false}, "putWeaponPool": {"reviewLevel": 2, "syntax": "putWeaponPool <object>", "local": false, "example": "", "docSyntax": "putWeaponPool object", "broadcasted": false, "description": "Transfer weapons and magazines from weapon pool into cargo of object obj. Used in campaign to transfer weapons into next mission.", "server": false}, "unassignVehicle": {"reviewLevel": 2, "syntax": "unassignVehicle <objUnit>", "local": true, "example": "unassignVehicle player;", "docSyntax": "unassignVehicle unitName", "broadcasted": true, "description": "Unassigns individual unit from a vehicle, i.e removes assignedVehicleRole of the unit. If the unit is currently in that vehicle, the group leader will issue an order to disembark.", "server": false}, "setFuelCargo": {"reviewLevel": 1, "syntax": "<objVehicle> setFuelCargo amount", "local": true, "example": "_refuelTruckOne setFuelCargo 0;", "docSyntax": "vehicle setFuelCargo amount", "broadcasted": true, "description": "Sets fuel amount in cargo space of refuel vehicle from empty (0) to full (1) Note, the carrying capacity of each side's refuel trucks differ.", "server": false}, "setFace": {"reviewLevel": 1, "syntax": "<objUnit> setFace face", "local": false, "example": "soldier1 setFace \"WhiteHead_02\"", "docSyntax": "person setFace face", "broadcasted": false, "description": "Set person's face. For a list of available faces, check Category:CfgIdentities.", "server": true}, "captive": {"reviewLevel": 2, "syntax": "captive <object>", "local": false, "example": "if (captive _general) then { removeAllWeapons _general; };", "docSyntax": "captive object", "broadcasted": false, "description": "Returns the captive state of the given unit (set with setCaptive). A captive unit will not be attacked by its enemies.", "server": true}, "lbValue": {"reviewLevel": 2, "syntax": "lbValue [<scalar>,<scalar>]", "local": true, "example": "_value = lbValue [101, 0];", "docSyntax": "lbValue [idc, index]", "broadcasted": false, "description": "Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "server": false}, "someAmmo": {"reviewLevel": 2, "syntax": "<bool> = someAmmo <objUnit>", "local": false, "example": "? not (someAmmo _loon1)\u00c2\u00a0: hint \"Loon1 is out of ammo!\"", "docSyntax": "Boolean = someAmmo unitName", "broadcasted": false, "description": "Check if unit has some ammo.", "server": false}, "ammo": {"reviewLevel": 1, "syntax": "<objUnit> ammo muzzle", "local": false, "example": "_count = player ammo \"M16\"; //returns 30 in case of a full magazine", "docSyntax": "unit ammo muzzle", "broadcasted": false, "description": "Check how many rounds are left in the currently loaded magazine in the given muzzle. Since Arma v1.55.133505 the command also returns ammo for units in vehicles.", "server": true}, "shownMap": {"reviewLevel": 2, "syntax": "shownMap", "local": false, "example": "if (shownMap) then {hint \"You have Map enabled\"};", "docSyntax": "shownMap", "broadcasted": false, "description": "Checks if client has Map enabled in description.ext (showMap param) or force enabled with showMap command.", "server": false}, "doTarget": {"reviewLevel": 2, "syntax": "<objUnit> doTarget <object>", "local": true, "example": "_ESoldier1 doTarget _WSoldier1;", "docSyntax": "unit doTarget target", "broadcasted": true, "description": "Order the given unit(s) to target the given target (without radio messages).", "server": false}, "removeAllEventHandlers": {"reviewLevel": 1, "syntax": "objectName removeAllEventHandlers handlerType", "local": false, "example": "player removeAllEventHandlers \"killed\";", "docSyntax": "objectName removeAllEventHandlers handlerType", "broadcasted": false, "description": "Removes all event handlers of given type that were added by addEventHandler. Since VBS2 v1.24 can be applied on individual weapon rounds.", "server": false}, "setRepairCargo": {"reviewLevel": 1, "syntax": "vehicleName setRepairCargo amount", "local": true, "example": "_repairTruck1 setRepairCargo 0", "docSyntax": "vehicleName setRepairCargo amount", "broadcasted": true, "description": "Set amount of repair resources in cargo space of repair vehicle. Amount 1 is full cargo.", "server": false}, "lbData": {"reviewLevel": 2, "syntax": "<string> = lbData [<scalar>,<scalar>]", "local": true, "example": "_data = lbData [101, 0];", "docSyntax": "String = lbData [idc, index]", "broadcasted": false, "description": "Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "server": false}, "removeEventHandler": {"reviewLevel": 1, "syntax": "objectName removeEventHandler [type,<scalar>]", "local": false, "example": "player removeEventHandler [\"killed\", 0]", "docSyntax": "objectName removeEventHandler [type, index]", "broadcasted": false, "description": "Removes event handler added by addEventHandler. When any handler is removed, all handler indices higher than the deleted one should be decremented.", "server": false}, "drop": {"reviewLevel": 2, "syntax": "drop <array>", "local": false, "example": "drop [\"cl_basic\", \"\", \"Billboard\", 1, 1, [-3.5*(sin(direction xural)), -3.5*(cos(direction xural)),0], [ random 0.1,random 0.1,random 0.5], 1, 0.005, 0.0042, 0.7, [0.3,3], [[0.5,0.5,0.5,0],[0.7,0.7,0.7,0.5],[0.9,0.9,0.9,0]], [0,1,0,1,0,1], 0.2, 0.2, \"\", \"\", xural]", "docSyntax": "drop array", "broadcasted": false, "description": "Creates a particle effect. This command is used to create smoke, fire and similar effects. The particles are single polygons with single textures that always face the player. They can be set to dynamically change their position, size, direction, can be set to different weights and more or less dependant on the wind.", "server": true}, "saveGame": {"reviewLevel": 2, "syntax": "saveGame", "local": false, "example": "saveGame;", "docSyntax": "saveGame", "broadcasted": false, "description": "Autosaves the game (used for Retry). The game can then be loaded from the last autosave with loadGame. Will not save if the player is null or dead.", "server": false}, "distance": {"reviewLevel": 2, "syntax": "param1 <scalar> param2", "local": false, "example": "_meters = player distance _object;", "docSyntax": "param1 distance param2", "broadcasted": false, "description": "Returns a distance in meters between Objects, Positions or Locations.", "server": true}, "log": {"reviewLevel": 1, "syntax": "<scalar> = log x", "local": false, "example": "_log = log 10; // 1", "docSyntax": "Number = log x", "broadcasted": false, "description": "Base-10 logarithm of x.", "server": false}, "hintC": {"reviewLevel": 1, "syntax": "hintC content", "local": false, "example": "hintC \"Press W to move forward\";", "docSyntax": "hintC content", "broadcasted": false, "description": "Displays attractive hint in the center of the screen. Player control is taken away until user presses \"Continue\". After user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.", "server": false}, "setBehaviour": {"reviewLevel": 1, "syntax": "groupName setBehaviour behaviour", "local": true, "example": "_group1 setBehaviour \"SAFE\";", "docSyntax": "groupName setBehaviour behaviour", "broadcasted": true, "description": "Sets group behaviour mode. If a unit is given as argument, behaviour is set for the unit's group. Behaviour is one of:", "server": false}, "lbDelete": {"reviewLevel": 2, "syntax": "lbDelete [<scalar>,<scalar>]", "local": true, "example": "lbDelete [101, 0];", "docSyntax": "lbDelete [idc, index]", "broadcasted": false, "description": "Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog.", "server": false}, "in": {"reviewLevel": 2, "syntax": "<scalar> in <array>", "local": false, "example": "1 in [0,1,2]; //true", "docSyntax": "value in array", "broadcasted": false, "description": "Checks whether value is in array, unit in vehicle or position inside location. In case of value in array check, String values will be compared on CaSEseNsiTIve basis (see Example 2). Note: In Arma 2 you can not test for arrays within arrays using this command.", "server": false}, "lbColor": {"reviewLevel": 2, "syntax": "lbColor [<scalar>,<scalar>]", "local": true, "example": "_colour = lbColor [101, 0];", "docSyntax": "lbColor [idc, index]", "broadcasted": false, "description": "Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "server": false}, "handsHit": {"reviewLevel": 2, "syntax": "<scalar> = handsHit <objUnit>", "local": false, "example": "? (handsHit player == 1)\u00c2\u00a0: player globalChat \"Ouch! Don't shoot at my hands dammit!\"", "docSyntax": "Number = handsHit unitName", "broadcasted": false, "description": "Checks if a soldier's hands are hit, which results in inaccurate aiming.", "server": true}, "onBriefingGroup": {"reviewLevel": 2, "syntax": "onBriefingGroup <string>", "local": false, "example": "onBriefingGroup \"GroupVoiceOver\"", "docSyntax": "onBriefingGroup soundName", "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Group tab is selected in the briefing.", "server": false}, "createVehicle": {"reviewLevel": 1, "syntax": "type createVehicle position", "local": false, "example": "_jeep = \"Jeep\" createVehicle position player;", "docSyntax": "type createVehicle position", "broadcasted": true, "description": "Creates an empty object of given classname type (See Arma 3 Assets or createVehicle/vehicles). Cannot be used to create objects of type \"Logic\", use createUnit command for that.", "server": false}, "closeDialog": {"reviewLevel": 1, "syntax": "closeDialog exitcode", "local": true, "example": "closeDialog 2;", "docSyntax": "closeDialog exitcode", "broadcasted": false, "description": "Close the currently active user dialog with exit code. Most common exit codes are: #define IDC_OK 1 //emulate \"Ok\" button #define IDC_CANCEL 2 //emulate \"Cancel\" button", "server": false}, "setViewDistance": {"reviewLevel": 2, "syntax": "setViewDistance <scalar>", "local": false, "example": "setViewDistance 2250;", "docSyntax": "setViewDistance distance", "broadcasted": false, "description": "Set rendering distance. Setting view distance to <= 0 resets the value to the client's options (set in Options\u00c2\u00a0\u00e2\u2020\u2019\u00c2\u00a0Video\u00c2\u00a0\u00e2\u2020\u2019\u00c2\u00a0General\u00c2\u00a0\u00e2\u2020\u2019\u00c2\u00a0Visibility\u00c2\u00a0\u00e2\u2020\u2019\u00c2\u00a0Overall).", "server": false}, "setMarkerSize": {"reviewLevel": 2, "syntax": "<string> setMarkerSize [a-axis,b-axis]", "local": false, "example": "\"MarkerOne\" setMarkerSize [100, 200];", "docSyntax": "markerName setMarkerSize [a-axis, b-axis]", "broadcasted": true, "description": "Set marker size. Size is in format [a-axis, b-axis].", "server": false}, "say": {"reviewLevel": 1, "syntax": "from say sound", "local": false, "example": "(units player select 1) say [\"whisper1\",5];", "docSyntax": "from say sound", "broadcasted": false, "description": "Unit will say given sound. When the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound. A unit that has been killed or does not exist will not say anything. Compare this with playSound which will always play a sound at the location of the player. If the camera is not within given range, title is not shown and the sound will not be heard. Sound is defined in CfgSound of the Description.ext.", "server": true}, "formation": {"reviewLevel": 2, "syntax": "<string> = formation <objGroup>", "local": false, "example": "formation group player", "docSyntax": "String = formation grp", "broadcasted": false, "description": "Returns the current formation of a group.", "server": true}, "removeMagazines": {"reviewLevel": 1, "syntax": "<objUnit> removeMagazines magazineName", "local": true, "example": "player removeMagazines \"30Rnd_556x45_Stanag\";", "docSyntax": "unitName removeMagazines magazineName", "broadcasted": false, "description": "Removes all magazines of given type from the unit. If magazine class does not exist, nothing happens, not even .rpt message, unlike with addMagazine command.", "server": false}, "objStatus": {"reviewLevel": 1, "syntax": "objectivenumber objStatus status", "local": false, "example": "\"1\" objStatus \"DONE\"", "docSyntax": "objectivenumber objStatus status", "broadcasted": false, "description": "Sets the status of an objective that was defined in briefing.html. Status may be one of:", "server": false}, "secondaryWeapon": {"reviewLevel": 2, "syntax": "secondaryWeapon <objUnit>", "local": false, "example": "_sWeap = secondaryWeapon player;", "docSyntax": "secondaryWeapon unit", "broadcasted": false, "description": "Returns name of a unit's secondary weapon (empty string if none).", "server": false}, "getMarkerPos": {"reviewLevel": 2, "syntax": "getMarkerPos <string>", "local": false, "example": "\"MarkerOne\" setMarkerPos [200,100]; _pos = getMarkerPos \"MarkerOne\" _pos is [200,100,0]", "docSyntax": "getMarkerPos markerName", "broadcasted": false, "description": "Returns the position of a given marker in format [x,y,0]. Array element 3 (height above ground) is always zero. If a non-existing marker is referenced the values returned are [0,0,0].", "server": false}, "nearestObject": {"reviewLevel": 2, "syntax": "nearestObject [position,type]", "local": false, "example": "_nObject = nearestObject [2345,6789]; _nObject = nearestObject [player, \"StreetLamp\"];", "docSyntax": "nearestObject [position, type]", "broadcasted": false, "description": "Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.", "server": false}}, "ARMA3": {"weaponLowered": {"reviewLevel": 2, "syntax": "weaponLowered <objUnit>", "local": false, "example": "isWeaponLowered = weaponLowered player;", "docSyntax": "weaponLowered unit", "broadcasted": false, "description": "True if given soldier's weapon is lowered.", "server": false}, "BIS_fnc_ORBATAddGroupOverlay": {"reviewLevel": 2, "syntax": "[<object>,<string>,colour,widthMulti,heightMulti,angle,<string>,shadow] call BIS_fnc_ORBATAddGroupOverlay", "local": false, "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", \"\\A3\\weapons_f\\data\\UI\\icon_MG_CA.paa\", [0,0,01], 3, 3, 0, \"Some Text\", true ] call BIS_fnc_ORBATAddGroupOverlay;", "docSyntax": "[target, texture, colour, widthMulti, heightMulti, angle, text, shadow] call BIS_fnc_ORBATAddGroupOverlay", "broadcasted": false, "description": "Register texture(s) to be displayed over CfgORBAT group.", "server": false}, "removeItem": {"reviewLevel": 2, "syntax": "<objUnit> removeItem <objItem>", "local": false, "example": "bluforUnit unassignItem \"NVGoggles\"; bluforUnit removeItem \"NVGoggles\"; opforUnit unassignItem \"NVGoggles_OPFOR\"; opforUnit removeItem \"NVGoggles_OPFOR\"; independentUnit unassignItem \"NVGoggles_INDEP\"; independentUnit removeItem \"NVGoggles_INDEP\";", "docSyntax": "unit removeItem item", "broadcasted": true, "description": "Removes item from the inventory.", "server": true}, "BIS_fnc_forceEnd": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "taskAlwaysVisible": {"reviewLevel": 2, "syntax": "taskAlwaysVisible <objTask>", "local": false, "example": "_isAlwaysVisible = taskAlwaysVisible (currentTask player);", "docSyntax": "taskAlwaysVisible task", "broadcasted": false, "description": "Returns true if the task is flagged to be always visible or false if not.", "server": false}, "setSimpleTaskCustomData": {"reviewLevel": 2, "syntax": "<objTask> setSimpleTaskCustomData [IconPath,tooltip,description]", "local": false, "example": "", "docSyntax": "task setSimpleTaskCustomData [IconPath, tooltip, description]", "broadcasted": false, "description": "Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.", "server": false}, "BIS_fnc_setObjectShotParents": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "createSite": {"reviewLevel": 1, "syntax": "type createSite <array>", "local": false, "example": "", "docSyntax": "type createSite pos", "broadcasted": false, "description": "Create a new site.", "server": false}, "BIS_fnc_colorRGBAtoHTML": {"reviewLevel": 1, "syntax": "colorArray call BIS_fnc_colorRGBAtoHTML", "local": false, "example": "[0,0,0,1] call BIS_fnc_colorRGBAtoHTML; // will return #FF000000", "docSyntax": "colorArray call BIS_fnc_colorRGBAtoHTML", "broadcasted": false, "description": "Converts RGBA color format to #AARRGGBB HTML color format.", "server": false}, "getWeaponSway": {"reviewLevel": 2, "syntax": "getWeaponSway <objUnit>", "local": false, "example": "_sway = getWeaponSway player;", "docSyntax": "getWeaponSway unit", "broadcasted": false, "description": "Returns current size of weapon sway of a given unit, in radians", "server": false}, "ctSetCurSel": {"reviewLevel": 2, "syntax": "<uiControl> ctSetCurSel <scalar>", "local": true, "example": "_control ctSetCurSel 0;", "docSyntax": "Control ctSetCurSel Number", "broadcasted": false, "description": "Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing.", "server": false}, "difficulty": {"reviewLevel": 2, "syntax": "difficulty", "local": false, "example": "value = difficulty;", "docSyntax": "difficulty", "broadcasted": false, "description": "Returns high-level selected difficulty mode. Returned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)", "server": false}, "isVehicleRadarOn": {"reviewLevel": 2, "syntax": "isVehicleRadarOn <objVehicle>", "local": false, "example": "isVehicleRadarOn vehicle player\u00c2\u00a0; // returns true if radar is turned on", "docSyntax": "isVehicleRadarOn vehicle", "broadcasted": false, "description": "Returns true if vehicle has active sensors on", "server": false}, "shownCuratorCompass": {"reviewLevel": 2, "syntax": "shownCuratorCompass", "local": false, "example": "_isShown = shownCuratorCompass;", "docSyntax": "shownCuratorCompass", "broadcasted": false, "description": "Returns true if compass is shown.", "server": false}, "BIS_fnc_codePerformance": {"reviewLevel": 2, "syntax": "[expression,arguments,cycles,<uiDisplay>] call BIS_fnc_codePerformance", "local": false, "example": "testArray = []; [\"testArray = testArray + [1]\"] call BIS_fnc_codePerformance;", "docSyntax": "[expression, arguments, cycles, display] call BIS_fnc_codePerformance", "broadcasted": false, "description": "Measures how much time it takes to execute given expression. Results may vary based on overall performance.", "server": false}, "BIS_fnc_VRDrawGrid": {"reviewLevel": 2, "syntax": "[location,colour] call BIS_fnc_VRDrawGrid", "local": false, "example": "[getPosATL player, [0.078, 0.3647, 0.0]] call BIS_fnc_VRDrawGrid;", "docSyntax": "[location, colour] call BIS_fnc_VRDrawGrid", "broadcasted": false, "description": "Visualizes surface grid (used primarily for VR missions).", "server": false}, "particlesQuality": {"reviewLevel": 2, "syntax": "particlesQuality", "local": false, "example": "_currentQuality = particlesQuality;", "docSyntax": "particlesQuality", "broadcasted": false, "description": "Returns current user settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high", "server": false}, "vehicleCargoEnabled": {"reviewLevel": 2, "syntax": "vehicleCargoEnabled <objVehicle>", "local": false, "example": "Blackfish (Vehicle Transport) with given variable name blackfish _canTransportVehicles = vehicleCargoEnabled blackfish; //returns true", "docSyntax": "vehicleCargoEnabled vehicle", "broadcasted": false, "description": "Check if the vehicle has enabled transporting other vehicles or not.", "server": false}, "vectorCrossProduct": {"reviewLevel": 2, "syntax": "vector1 vectorCrossProduct vector2", "local": false, "example": "_vector = [1,1,1] vectorCrossProduct [2,2,2];", "docSyntax": "vector1 vectorCrossProduct vector2", "broadcasted": false, "description": "Cross product of two 3D vectors.", "server": false}, "BIS_fnc_ambientAnim": {"reviewLevel": 2, "syntax": "[<objUnit>,animationset,equipmentlevel,snaptoObject,interpolate] call BIS_fnc_ambientAnim", "local": false, "example": "[player, \"STAND1\", \"NONE\"] call BIS_fnc_ambientAnim;", "docSyntax": "[unit, animationset, equipmentlevel, snaptoObject, interpolate] call BIS_fnc_ambientAnim", "broadcasted": false, "description": "Play set of ambient animations on given unit.", "server": false}, "set3DENAttribute": {"reviewLevel": 1, "syntax": "entity set3DENAttribute [class,<scalar>]", "local": false, "example": "player set3DENAttribute [\"allowDamage\",false ]; Mark player as invincible", "docSyntax": "entity set3DENAttribute [class, value]", "broadcasted": false, "description": "Set one of entity attributes.", "server": false}, "BIS_fnc_feedbackInit": {"reviewLevel": 2, "syntax": "call BIS_fnc_feedbackInit", "local": false, "example": "call BIS_fnc_feedbackInit;", "docSyntax": "call BIS_fnc_feedbackInit", "broadcasted": false, "description": "Init function for feedback system. Declaration of variables, eventhandlers, etc. for in-game effects. Engine use only.", "server": false}, "addGoggles": {"reviewLevel": 1, "syntax": "<objUnit> addGoggles type", "local": false, "example": "player addGoggles \"G_Tactical_Clear\";", "docSyntax": "unit addGoggles type", "broadcasted": false, "description": "Create a new item and try to link it into goggles slot. This command doesn't add NVGoggles. Use addItem and assignItem or just linkItem for latter.", "server": false}, "curatorRegisteredObjects": {"reviewLevel": 2, "syntax": "curatorRegisteredObjects <objCurator>", "local": false, "example": "", "docSyntax": "curatorRegisteredObjects curatorObj", "broadcasted": false, "description": "Returns array with all objects that has curator registered and their settings.", "server": false}, "setDynamicSimulationDistanceCoef": {"reviewLevel": 1, "syntax": "class setDynamicSimulationDistanceCoef multiplier", "local": false, "example": "\"IsMoving\" setDynamicSimulationDistanceCoef 3;", "docSyntax": "class setDynamicSimulationDistanceCoef multiplier", "broadcasted": false, "description": "Sets activation distance multiplier of Arma_3_Dynamic_Simulation for the given class", "server": false}, "BIS_fnc_diagPreviewCycle": {"reviewLevel": 2, "syntax": "[container,position,vector,<uiDisplay>] call BIS_fnc_diagPreviewCycle", "local": false, "example": "[ \"CfgVehicles\"] call BIS_fnc_diagPreviewCycle;", "docSyntax": "[container, position, vector, display] call BIS_fnc_diagPreviewCycle", "broadcasted": false, "description": "Previews selected class from the list. When cheat1 is activated, classnames will be shown instead of display names.", "server": false}, "ctrlAnimationPhaseModel": {"reviewLevel": 1, "syntax": "<uiControl> ctrlAnimationPhaseModel source", "local": false, "example": "_phase = _control3D ctrlAnimationPhaseModel \"Close\";", "docSyntax": "control ctrlAnimationPhaseModel source", "broadcasted": false, "description": "Returns current animation phase of given source. Similar to animationSourcePhase.", "server": false}, "canAddItemToUniform": {"reviewLevel": 2, "syntax": "<objUnit> canAddItemToUniform <objItem>", "local": false, "example": "_item = \"HandGrenade\"; _fits = player canAddItemToUniform _item; if (_fits) then { player addItemToUniform _item; } else { hint \"no room!\"; };", "docSyntax": "unit canAddItemToUniform item", "broadcasted": false, "description": "Checks if given object can be stored into soldier's uniform.", "server": false}, "drawIcon3D": {"reviewLevel": 2, "syntax": "drawIcon3D [<string>,<scalar>,<array>,width,height,angle,<string>,shadow,textSize,font,textAlign,drawSideArrows]", "local": false, "example": "Icon and text:addMissionEventHandler [\"Draw3D\", { drawIcon3D [\"targetIcon.paa\", [1,1,1,1], ASLToAGL getPosASL cursorTarget, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"]; };", "docSyntax": "drawIcon3D [texture, color, pos, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows]", "broadcasted": false, "description": "Draws an ingame icon at a given position. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\". In order for the results of this command to be visible through a custom camera, enable HUD with cameraEffectEnableHUD", "server": false}, "removeAll3DENEventHandlers": {"reviewLevel": 1, "syntax": "removeAll3DENEventHandlers type", "local": false, "example": "removeAll3DENEventHandlers \"onUndo\";", "docSyntax": "removeAll3DENEventHandlers type", "broadcasted": false, "description": "Removes all Eden Editor event handlers of given type.", "server": false}, "vectorFromTo": {"reviewLevel": 2, "syntax": "vector1 vectorFromTo vector2", "local": false, "example": "[1,2,3] vectorFromTo [4,5,6]; //[0.57735,0.57735,0.57735] //is the same as vectorNormalized ([4,5,6] vectorDiff [1,2,3]); //[0.57735,0.57735,0.57735]", "docSyntax": "vector1 vectorFromTo vector2", "broadcasted": false, "description": "Unit vector, equal to direction from vector1 to vector2. In other words this command produces vectorNormalized between given 2 points. To get a normal vector use vectorDiff.", "server": false}, "BIS_fnc_moduleBootcampStage": {"example": "", "server": false, "broadcasted": false, "description": "Change the current Stage in Bootcamp MP Guided Mode Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters", "local": false}, "canAdd": {"reviewLevel": 2, "syntax": "<object> canAdd <objItem>", "local": false, "example": "if (player canAdd \"FirstAidKit\") then { player addItem \"FirstAidKit\"; } else { hint \"Not enough space\"; };", "docSyntax": "object canAdd item", "broadcasted": false, "description": "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit.", "server": false}, "BIS_fnc_VRCoursePlaceables2": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_wpDemine": {"reviewLevel": 2, "syntax": "[<objGroup>,position,<object>,clearUnknownMines] call BIS_fnc_wpDemine", "local": false, "example": "[group player, getMarkerPos \"mineField\", objNull, false] call BIS_fnc_wpDemine;", "docSyntax": "[group, position, target, clearUnknownMines] call BIS_fnc_wpDemine", "broadcasted": false, "description": "Scripted \"CLEAR MINES\" Advanced Waypoint. The script needs a unit with the abiility to demine (engineer or explosive specialist trait and a toolkit).", "server": false}, "addScoreSide": {"reviewLevel": 2, "syntax": "<objSide> addScoreSide <scalar>", "local": false, "example": "west addScoreSide 10;", "docSyntax": "side addScoreSide value", "broadcasted": true, "description": "Adds side score. This is shown in the MP score tab as the total score. MP Only. Server execution only.", "server": true}, "BIS_fnc_setRespawnInventory": {"reviewLevel": 2, "syntax": "[<object>,inventory] call BIS_fnc_setRespawnInventory", "local": false, "example": "[ player, [\"B_T_Recon_TL_F\"] ] call BIS_fnc_setRespawnInventory;", "docSyntax": "[target, inventory] call BIS_fnc_setRespawnInventory", "broadcasted": false, "description": "Set respawn loadouts.", "server": false}, "uniformMagazines": {"reviewLevel": 2, "syntax": "uniformMagazines <objUnit>", "local": false, "example": "uniformMagazines player;", "docSyntax": "uniformMagazines unit", "broadcasted": false, "description": "Get array with all magazines from uniform of the given unit.", "server": false}, "diag_drawMode": {"reviewLevel": 1, "syntax": "diag_drawMode type", "local": false, "example": "diag_drawMode \"normal\"", "docSyntax": "diag_drawMode type", "broadcasted": false, "description": "Activates specific debug visualization.", "server": false}, "ctrlAngle": {"reviewLevel": 2, "syntax": "ctrlAngle <uiControl>", "local": false, "example": "ctrlAngle _control;", "docSyntax": "ctrlAngle control", "broadcasted": false, "description": "Gets rotation info of an ST_PICTURE control.", "server": false}, "setDefaultCamera": {"reviewLevel": 2, "syntax": "setDefaultCamera [position,direction]", "local": false, "example": "setDefaultCamera [[5000,5000,200],[1,1,-1]];", "docSyntax": "setDefaultCamera [position, direction]", "broadcasted": false, "description": "Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)", "server": false}, "getCursorObjectParams": {"reviewLevel": 2, "syntax": "getCursorObjectParams", "local": false, "example": "hint str getCursorObjectParams;", "docSyntax": "getCursorObjectParams", "broadcasted": false, "description": "Returns object and named selections under cursor and distance to object's surface (to the point cursor points at). If object surface is further away than 50 meters, selections are always an empty array and distance is 1e10 (10^10).", "server": false}, "BIS_fnc_liveFeedModuleInit": {"example": "", "server": false, "broadcasted": false, "description": "Display a live feed via a module. Parameters: _this: OBJECT - Live Feed - Init module */ // Need not be run on dedicated servers", "local": false}, "BIS_fnc_moduleRadioChannelCreate": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_setServerVariable": {"reviewLevel": 2, "syntax": "[namespace,varName,<scalar>] call BIS_fnc_setServerVariable", "local": false, "example": "[nil, \"playerHealth\", damage player] call BIS_fnc_setServerVariable;", "docSyntax": "[namespace, varName, value] call BIS_fnc_setServerVariable", "broadcasted": false, "description": "Set variable stored only on server. Clients can the download it using BIS_fnc_getServerVariable. Used when you want to share variables only to specific clients to prevent large traffic.", "server": false}, "remoteExecutedOwner": {"reviewLevel": 2, "syntax": "remoteExecutedOwner", "local": false, "example": "_callerRE = remoteExecutedOwner;", "docSyntax": "remoteExecutedOwner", "broadcasted": false, "description": "Returns clientOwner of the PC, which initiated Remote Execution call. If used in SP or outside of remote executed context, the command returns 0. To check if the context was remote executed or remote executed from JIP queue, use isRemoteExecuted and isRemoteExecutedJIP", "server": false}, "BIS_fnc_addCommMenuItem": {"reviewLevel": 2, "syntax": "[owner,itemClass,textArguments,expressionArguments,notification] call BIS_fnc_addCommMenuItem;", "local": false, "example": "_supportHeli = [player,\"Support_Request_CAS_Heli\"] call BIS_fnc_addCommMenuItem; _supportHeli = [player,\"Support_Request_CAS_Heli\",nil,nil,\"\"] call BIS_fnc_addCommMenuItem; // don't show notification", "docSyntax": "[owner,itemClass,textArguments,expressionArguments,notification] call BIS_fnc_addCommMenuItem;", "broadcasted": false, "description": "Add communication menu to the given unit. The item will be available in the Communication menu and visualized in comm menu icon area.", "server": false}, "isSimpleObject": {"reviewLevel": 2, "syntax": "isSimpleObject <object>", "local": false, "example": "_isSimple = isSimpleObject _obj1;", "docSyntax": "isSimpleObject object", "broadcasted": false, "description": "Returns true if given object is simple object", "server": false}, "BIS_fnc_drawRespawnPositions": {"reviewLevel": 2, "syntax": "[state] call BIS_fnc_drawRespawnPositions", "local": false, "example": "[ true ] call BIS_fnc_drawRespawnPositions;", "docSyntax": "[state] call BIS_fnc_drawRespawnPositions", "broadcasted": false, "description": "Draws respawn positions on the map which were added by BIS_fnc_addRespawnPosition.", "server": false}, "BIS_fnc_removeRespawnPosition": {"reviewLevel": 2, "syntax": "[<object>,<scalar>] call BIS_fnc_removeRespawnPosition;", "local": false, "example": "[west, 1] call BIS_fnc_removeRespawnPosition;", "docSyntax": "[target,id] call BIS_fnc_removeRespawnPosition;", "broadcasted": false, "description": "Remove a respawn position added by BIS_fnc_addRespawnPosition.", "server": false}, "getPilotCameraPosition": {"reviewLevel": 2, "syntax": "getPilotCameraPosition <object>", "local": false, "example": "_pilotCamPos = getPilotCameraPosition vehicle player", "docSyntax": "getPilotCameraPosition object", "broadcasted": false, "description": "Returns model space coordinates of the object airplane or helicopter pilotCamera .", "server": true}, "BIS_fnc_createObjectOO": {"reviewLevel": 2, "syntax": "[class,<any>] call BIS_fnc_createObjectOO", "local": false, "example": "[\"someOOClass\", [1,2,3]] call BIS_fnc_createObjectOO;", "docSyntax": "[class,params] call BIS_fnc_createObjectOO", "broadcasted": false, "description": "Instantiates an object of a certain class.", "server": false}, "debriefingText": {"reviewLevel": 1, "syntax": "debriefingText end", "local": false, "example": "_deathText = debriefingText \"endDeath\";", "docSyntax": "debriefingText end", "broadcasted": false, "description": "Returns debriefing text.", "server": false}, "getUnitTrait": {"reviewLevel": 2, "syntax": "<objUnit> getUnitTrait <string>", "local": false, "example": "player getUnitTrait \"Medic\";", "docSyntax": "unit getUnitTrait skillName", "broadcasted": false, "description": "Gets the current value of a trait of the given unit.", "server": true}, "addItemToUniform": {"reviewLevel": 2, "syntax": "<objUnit> addItemToUniform <objItem>", "local": false, "example": "player addItemToUniform \"itemGPS\";", "docSyntax": "unit addItemToUniform item", "broadcasted": true, "description": "Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.", "server": true}, "vectorModelToWorldVisual": {"reviewLevel": 1, "syntax": "<object> vectorModelToWorldVisual modelDir", "local": false, "example": "Convert model space vector [0,-10,4] to world space; vector gets rotated according to _airplane: _airplane vectorModelToWorldVisual [0,-10,4];", "docSyntax": "object vectorModelToWorldVisual modelDir", "broadcasted": false, "description": "Converts vector from model to world space in render time scope.", "server": false}, "swimInDepth": {"reviewLevel": 2, "syntax": "<objUnit> swimInDepth <scalar>", "local": false, "example": "soldier swimInDepth -20;", "docSyntax": "unit swimInDepth value", "broadcasted": false, "description": "Sets the target depth level for swimming soldier. Depth should be a negative number.", "server": false}, "enableCollisionWith": {"reviewLevel": 2, "syntax": "<objVehicle> enableCollisionWith <objVehicle>", "local": true, "example": "[_veh1, _veh2] remoteExecCall [\"enableCollisionWith\", 0, _veh1];", "docSyntax": "vehicle enableCollisionWith vehicle", "broadcasted": true, "description": "Cancels the effects of disableCollisionWith.", "server": false}, "BIS_fnc_addVirtualMagazineCargo": {"reviewLevel": 2, "syntax": "[<object>,magClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualMagazineCargo", "local": false, "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualMagazineCargo;", "docSyntax": "[object,magClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualMagazineCargo", "broadcasted": false, "description": "Add virtual magazines to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "BIS_fnc_credits_movieSupport": {"example": "", "server": false, "broadcasted": false, "description": "/* File: fn_credits_movieSupport.sqf Description: Movie credits supporters preprocessor. Parameter(s): None. Returned value: _array: Array _array select 0: String - Position name (and tags) as structured text. _array select 1: String - Names (and tags) as structured text - 1st paragraph. _array select 2: String - Names (and tags) as structured text - 2nd paragraph. _array select 3: String - Names (and tags) as structured text - 3rd paragraph. _array select 4: Number - Required space coeficient (numberOfNamesInOneParagraph * textSizeCoef)", "local": false}, "BIS_fnc_getCfgIsClass": {"reviewLevel": 1, "syntax": "configEntry call BIS_fnc_getCfgIsClass", "local": false, "example": "_isClass = (missionConfigFile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call BIS_fnc_getCfgIsClass;", "docSyntax": "configEntry call BIS_fnc_getCfgIsClass", "broadcasted": false, "description": "Return true if it's a class. Can by called in two ways:", "server": false}, "BIS_fnc_moduleModules": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_ambientFlyby": {"reviewLevel": 2, "syntax": "[[0,0,0],[100,100,100],100,\"NORMAL\",\"B_Heli_Light_01_F\",WEST] call BIS_fnc_ambientFlyby;", "local": false, "example": "ambFlyby = [[200,200,50],[250,250,75]] call BIS_fnc_ambientFlyBy; //Spawns a Littlebird that flies from position 200,200,50 to 250,250,75 at height 100 and Normal speed.", "docSyntax": "[[0,0,0],[100,100,100],100,\"NORMAL\",\"B_Heli_Light_01_F\",WEST] call BIS_fnc_ambientFlyby;", "broadcasted": false, "description": "Spawns an air unit that moves from point A to point B, never engaging nor being engaged. It is set as captive and will despawn once it reaches it's destination.", "server": false}, "curatorWaypointCost": {"reviewLevel": 2, "syntax": "curatorWaypointCost <objCurator>", "local": false, "example": "", "docSyntax": "curatorWaypointCost curatorObj", "broadcasted": false, "description": "Return current price for placing waypoints (curator specific).", "server": false}, "setSpeech": {"reviewLevel": 1, "syntax": "location setSpeech speech", "local": false, "example": "", "docSyntax": "location setSpeech speech", "broadcasted": false, "description": "Add speech to location.", "server": false}, "BIS_fnc_moduleDamage": {"reviewLevel": 2, "syntax": "[logic,vehicles,isActivated] call BIS_fnc_moduleDamage", "local": false, "example": "[myLogic, vehicle player, true] call BIS_fnc_moduleDamage;", "docSyntax": "[logic, vehicles, isActivated] call BIS_fnc_moduleDamage", "broadcasted": false, "description": "Damage given vehicles.", "server": false}, "BIS_fnc_curatorChallengeIlluminate": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "logNetworkTerminate": {"reviewLevel": 1, "syntax": "logNetworkTerminate handle", "local": false, "example": "logNetworkTerminate _someHandle;", "docSyntax": "logNetworkTerminate handle", "broadcasted": false, "description": "Terminates a network log file started with logNetwork with the given handle", "server": false}, "BIS_fnc_drawCuratorRespawnMarkers": {"example": "", "server": false, "broadcasted": false, "description": "Create a curator icon on every respawn marker Parameter(s): 0: OBJECT - curator module 1: ARRAY of SIDEs Returns: BOOL", "local": false}, "BIS_fnc_friendlySides": {"reviewLevel": 1, "syntax": "toCheck call BIS_fnc_sortAlphabetically", "local": false, "example": "player call BIS_fnc_friendlySides; // can return [FRIENDLY,WEST,GUER,CIV]", "docSyntax": "toCheck call BIS_fnc_sortAlphabetically", "broadcasted": false, "description": "Returns sides allied to the given side / object.", "server": false}, "curatorCameraAreaCeiling": {"reviewLevel": 2, "syntax": "curatorCameraAreaCeiling <objCurator>", "local": false, "example": "curatorCameraAreCeiling BIS_curatorUnit;", "docSyntax": "curatorCameraAreaCeiling curatorObj", "broadcasted": false, "description": "Returns ceiling height for curator camera.", "server": false}, "BIS_fnc_diagMissionWeapons": {"reviewLevel": 2, "syntax": "[clipboard] call BIS_fnc_diagMissionWeapons", "local": false, "example": "true call BIS_fnc_diagMissionWeapons;", "docSyntax": "[clipboard] call BIS_fnc_diagMissionWeapons", "broadcasted": false, "description": "Lists all weapons and magazines available in a mission.", "server": false}, "getObjectMaterials": {"reviewLevel": 2, "syntax": "getObjectMaterials <object>", "local": false, "example": "_materials = getObjectMaterials car;", "docSyntax": "getObjectMaterials obj", "broadcasted": false, "description": "Gets all custom materials associated with the object.", "server": true}, "BIS_fnc_moduleDate": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "isUniformAllowed": {"reviewLevel": 1, "syntax": "<objUnit> isUniformAllowed type", "local": false, "example": "_canUse = _unit isUniformAllowed \"U_B_CombatUniform_mcam\";", "docSyntax": "unit isUniformAllowed type", "broadcasted": false, "description": "Check whether given uniform can be dressed by target soldier.", "server": true}, "BIS_fnc_typeText2": {"reviewLevel": 2, "syntax": "[stringLines,posX,posY,alignBottom,rootFormat,abortParams,abortCond,playSounds] call BIS_fnc_typeText2", "local": false, "example": "[ [ [\"CAMP ROGAIN,\",\"align = 'center' shadow = '1' size = '0.7' font='PuristaBold'\"], [\"RESSUPLY POINT\",\"align = 'center' shadow = '1' size = '0.7'\",\"#aaaaaa\"], [\"\",\"<br/>\"], [\"10 MINUTES LATER ...\",\"align = 'center' shadow = '1' size = '1.0'\"] ] ] spawn BIS_fnc_typeText2;", "docSyntax": "[stringLines, posX, posY, alignBottom, rootFormat, abortParams, abortCond, playSounds] call BIS_fnc_typeText2", "broadcasted": false, "description": "Types a structured text on the screen, letter by letter, cursor blinking.", "server": false}, "BIS_fnc_moduleTaskCreate": {"example": "", "server": false, "broadcasted": false, "description": "Create Task module function", "local": false}, "getBleedingRemaining": {"reviewLevel": 2, "syntax": "getBleedingRemaining <objUnit>", "local": false, "example": "_bleedingRemaining = getBleedingRemaining _unit;", "docSyntax": "getBleedingRemaining unit", "broadcasted": false, "description": "Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use setBleedingRemaining to set different remaining time.", "server": false}, "addCuratorEditingArea": {"reviewLevel": 2, "syntax": "<objCurator> addCuratorEditingArea [editAreaID,position,radius]", "local": false, "example": "myCurator addCuratorEditingArea [4,position player,1000];", "docSyntax": "curatorObj addCuratorEditingArea [editAreaID,position,radius]", "broadcasted": false, "description": "Adds or changes curator edit area (depends on if ID is already used).", "server": false}, "BIS_fnc_call": {"reviewLevel": 2, "syntax": "[<any>,<code>] call BIS_fnc_call;", "local": false, "example": "Show a message for the current player. [[\"Hello\"], {hint (_this select 0);}] call BIS_fnc_call;", "docSyntax": "[params, code] call BIS_fnc_call;", "broadcasted": false, "description": "Execute given code with or without parameter.", "server": false}, "forceWeaponFire": {"reviewLevel": 2, "syntax": "<objUnit> forceWeaponFire [muzzle,firemode]", "local": true, "example": "_unit forceWeaponFire [\"arifle_MX_F\", \"Single\"]; _unit forceWeaponFire [\"hgun_ACPC2_F\", \"hgun_ACPC2_F\"]; _unit forceWeaponFire [\"HandGrenadeMuzzle\",\"HandGrenadeMuzzle\"]; _unit forceWeaponFire [\"MiniGrenadeMuzzle\",\"MiniGrenadeMuzzle\"]; _unit forceWeaponFire [\"HandGrenade_Stone\",\"HandGrenade_Stone\"]; _unit forceWeaponFire [\"SmokeShellMuzzle\",\"SmokeShellMuzzle\"]; _unit forceWeaponFire [\"ChemlightGreenMuzzle\",\"ChemlightGreenMuzzle\"]; _unit forceWeaponFire [\"IRGrenade\",\"IRGrenade\"]; _unit forceWeaponFire [\"Laserdesignator\",\"Laserdesignator\"];", "docSyntax": "unit forceWeaponFire [muzzle, firemode]", "broadcasted": true, "description": "The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon. Doesnt't seem to work for units in FFV positions. Works on player. See also: BIS_fnc_fire", "server": false}, "BIS_fnc_moduleTimeTrial": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "triggerDynamicSimulation": {"reviewLevel": 2, "syntax": "<objUnit> triggerDynamicSimulation <objTrigger>", "local": false, "example": "player triggerDynamicSimulation false;", "docSyntax": "unit triggerDynamicSimulation trigger", "broadcasted": false, "description": "Controls ability of given unit to activate entities with disabled Arma_3_Dynamic_Simulation. If false dynamically disabled entities will not be activated by unit presence", "server": false}, "displayParent": {"reviewLevel": 2, "syntax": "displayParent <uiDisplay>", "local": false, "example": "_display = displayParent findDisplay 49; // Display #46", "docSyntax": "displayParent display", "broadcasted": false, "description": "Returns parent display of the given display.", "server": false}, "ctSetValue": {"reviewLevel": 2, "syntax": "<uiControl> ctSetValue <scalar>", "local": true, "example": "_control ctSetValue 0;", "docSyntax": "Control ctSetValue Number", "broadcasted": false, "description": "Associates metadata (number) with the row determined by the index. Returns Nothing.", "server": false}, "BIS_fnc_fatigueEffect": {"reviewLevel": 2, "syntax": "call BIS_fnc_fatigueEffect", "local": false, "example": "call BIS_fnc_fatigueEffect;", "docSyntax": "call BIS_fnc_fatigueEffect", "broadcasted": false, "description": "Effects for high fatigue values. Internal engine use only, as it relies on internal BIS_* variables.", "server": false}, "BIS_fnc_tridentExecute": {"reviewLevel": 2, "syntax": "[side_1,side_2,codeFriendly,codeEnemy] call BIS_fnc_tridentExecute", "local": false, "example": "[west, east, {params [\"_higherScore\",\"_lowerScore\",\"_areAllied\"]}] call BIS_fnc_tridentExecute;", "docSyntax": "[side_1,side_2,codeFriendly,codeEnemy] call BIS_fnc_tridentExecute", "broadcasted": false, "description": "Execute a code based on Trident relationship.", "server": false}, "BIS_fnc_StrategicMapMouseButtonClick": {"example": "", "server": false, "broadcasted": false, "description": "Internal function used by BIS_fnc_StrategicMapOpen.", "local": false}, "BIS_fnc_diagConfig": {"example": "", "server": false, "broadcasted": false, "description": "Prints config entries. Results are printed to debug log and wiki compatible table is copied to clipboard.", "local": false}, "BIS_fnc_createLogRecord": {"reviewLevel": 2, "syntax": "[owner,title,<string>] call BIS_fnc_createLogRecord", "local": false, "example": "[player, \"Title\", \"This is a log entry. Have fun!\"] call BIS_fnc_createLogRecord;", "docSyntax": "[owner, title, text] call BIS_fnc_createLogRecord", "broadcasted": false, "description": "Create a dated, timed diary record in the owner's \"Log\" subject.", "server": false}, "flagTexture": {"reviewLevel": 1, "syntax": "flagTexture flagCarrier", "local": false, "example": "_flagTexture = flagTexture _flag1;", "docSyntax": "flagTexture flagCarrier", "broadcasted": false, "description": "Returns texture of the local instance of the flag. A getter for setFlagTexture. It will not return flag textures applied using forceFlagTexture, use getForcedFlagTexture for that.", "server": true}, "BIS_fnc_finishCuratorChallenge": {"reviewLevel": 2, "syntax": "[curator,input,taskState]] call BIS_fnc_finishCuratorChallenge", "local": false, "example": "[BIS_curator,[\"DestroyVehicle\",BIS_curator],\"SUCCEEDED\"] call BIS_fnc_finishCuratorChallenge;", "docSyntax": "[curator,input,taskState]] call BIS_fnc_finishCuratorChallenge", "broadcasted": false, "description": "Handle repeated curator challenges. When rewards defined in the argument are exceeded, refilling points bar fill be offered instead. Number of challenges can be retrieved by", "server": false}, "waypointsEnabledUAV": {"reviewLevel": 1, "syntax": "waypointsEnabledUAV uav", "local": false, "example": "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; // returns false", "docSyntax": "waypointsEnabledUAV uav", "broadcasted": false, "description": "Checks if the UAV has waypoints enabled.", "server": false}, "visibleScoretable": {"reviewLevel": 2, "syntax": "visibleScoretable", "local": false, "example": "_visible = visibleScoretable;", "docSyntax": "visibleScoretable", "broadcasted": false, "description": "Checks whether the score table is visible.", "server": false}, "addItemToBackpack": {"reviewLevel": 2, "syntax": "<objUnit> addItemToBackpack <objItem>", "local": false, "example": "player addItemToBackpack \"arifle_MXM_Hamr_pointer_F\";", "docSyntax": "unit addItemToBackpack item", "broadcasted": true, "description": "Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.", "server": true}, "BIS_fnc_setFog": {"reviewLevel": 2, "syntax": "[strenght,density,<scalar>] call BIS_fnc_setFog", "local": false, "example": "[1,1,100] call BIS_fnc_setFog;//Returns [1,1,100]", "docSyntax": "[strenght, density, altitude] call BIS_fnc_setFog", "broadcasted": false, "description": "Instantly set weather conditions and share it across network.", "server": false}, "findIf": {"reviewLevel": 2, "syntax": "<array> findIf <code>", "local": false, "example": "[unit1,unit2,unit3] findIf {!alive _x}; //return index of first dead unit", "docSyntax": "array findIf code", "broadcasted": false, "description": "Searches for an element within array for which the code evaluates to true. Returns the 0 based index on success or -1 if not found. Code on the right side of the command is evaluated for each element of the array, processed element can be referenced in code as _x.", "server": false}, "BIS_fnc_isDemo": {"reviewLevel": 2, "syntax": "call BIS_fnc_isDemo", "local": false, "example": "_isDemo = call BIS_fnc_isDemo;", "docSyntax": "call BIS_fnc_isDemo", "broadcasted": false, "description": "Returns true when game version is demo.", "server": false}, "getTerrainGrid": {"reviewLevel": 2, "syntax": "getTerrainGrid", "local": false, "example": "_terrainGrid = getTerrainGrid;", "docSyntax": "getTerrainGrid", "broadcasted": false, "description": "Returns the current terrain grid", "server": false}, "setSpeaker": {"reviewLevel": 1, "syntax": "<objUnit> setSpeaker speaker", "local": false, "example": "unit1 setSpeaker \"Male02GRE\";", "docSyntax": "person setSpeaker speaker", "broadcasted": false, "description": "Sets the speaker of a person. In order to setSpeaker dynamically in MP, the command needs to run on every computer with exactly the same params otherwise the speaking unit could appear silent on other PCs. Run this on server:", "server": true}, "BIS_fnc_refreshCommMenu": {"reviewLevel": 2, "syntax": "call BIS_fnc_refreshCommMenu", "local": false, "example": "call BIS_fnc_refreshCommMenu;", "docSyntax": "call BIS_fnc_refreshCommMenu", "broadcasted": false, "description": "Refresh the communication menu variable.", "server": false}, "setSlingLoad": {"reviewLevel": 2, "syntax": "<objVehicle> setSlingLoad <objVehicle>", "local": false, "example": "_success = heli1 setSlingLoad veh1;", "docSyntax": "vehicle setSlingLoad cargo", "broadcasted": false, "description": "Creates sling loading from first object to second object if possible. To unload cargo, pass objNull as second param.", "server": false}, "BIS_fnc_removeVirtualWeaponCargo": {"reviewLevel": 2, "syntax": "[<object>,weaponClasses,removeGlobally] call BIS_fnc_removeVirtualWeaponCargo", "local": false, "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualWeaponCargo;", "docSyntax": "[object,weaponClasses,removeGlobally] call BIS_fnc_removeVirtualWeaponCargo", "broadcasted": false, "description": "Remove virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "BIS_fnc_moduleCuratorAddEditingAreaPlayers": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "curatorCameraArea": {"reviewLevel": 2, "syntax": "curatorCameraArea <objCurator>", "local": false, "example": "_camArea = curatorCameraArea myCurator;", "docSyntax": "curatorCameraArea curatorObj", "broadcasted": false, "description": "Returns all curator camera areas.", "server": false}, "BIS_fnc_EXP_camp_playSubtitles": {"reviewLevel": 2, "syntax": "[ [<array>] ] spawn BIS_fnc_EXP_camp_playSubtitles;", "local": false, "example": "[ [\"CROSSROAD\",\"Mission is a go, I repeat, mission is a go! Crossroad, out.\",0] ] spawn BIS_fnc_EXP_camp_playSubtitles;//Shows a subtitle immediately", "docSyntax": "[ [Array] ] spawn BIS_fnc_EXP_camp_playSubtitles;", "broadcasted": false, "description": "Displays the given subtitles at the correctly defined moments. Each array added to the parameters represents one subtitle.", "server": false}, "missionDifficulty": {"reviewLevel": 2, "syntax": "missionDifficulty", "local": false, "example": "_number = missionDifficulty;", "docSyntax": "missionDifficulty", "broadcasted": false, "description": "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it's used one from player's options.", "server": false}, "diag_codePerformance": {"reviewLevel": 2, "syntax": "diag_codePerformance [<code>,arguments,cycles]", "local": false, "example": "_result = diag_codePerformance [{private _a = 123;}, 0, 10000];", "docSyntax": "diag_codePerformance [code, arguments, cycles]", "broadcasted": false, "description": "Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed. The command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second. Engine alternative to BIS_fnc_codePerformance", "server": false}, "BIS_fnc_showRespawnMenuDisableItem": {"reviewLevel": 2, "syntax": "[mode,uiControl,<objItem>,message] call BIS_fnc_showRespawnMenuDisableItem;", "local": false, "example": "[\"disable\",uiNamespace getVariable \"BIS_RscRespawnControlsMap_ctrlRoleList\",2,\"Restricted for this part of mission!\"] call BIS_fnc_showRespawnMenuDisableItem;", "docSyntax": "[mode, uiControl, item, message] call BIS_fnc_showRespawnMenuDisableItem;", "broadcasted": false, "description": "Limits respawn loadout or role for Arma 3 Respawn.", "server": false}, "selectMin": {"reviewLevel": 2, "syntax": "selectMin <array>", "local": false, "example": "_min = selectMin [1,2,3,4,5]; //1", "docSyntax": "selectMin array", "broadcasted": false, "description": "Returns the array element with minimum numerical value. Engine solution to BIS_fnc_lowestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.", "server": false}, "visibleWatch": {"reviewLevel": 2, "syntax": "visibleWatch", "local": false, "example": "if (visibleWatch) then {hint \"Watch is visible\"};", "docSyntax": "visibleWatch", "broadcasted": false, "description": "Checks if the player has watch opened and visible", "server": false}, "BIS_fnc_configPath": {"reviewLevel": 2, "syntax": "[config,format,strict] call BIS_fnc_configPath;", "local": false, "example": "[\"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"] call BIS_fnc_configPath; // [\"configFile\",\"CfgVehicles\",\"Car\"] [[\"configFile\",\"CfgVehicles\",\"Car\"]] call BIS_fnc_configPath; // bin\\config.cpp/CfgVehicles/Car [\"bin\\config.cpp/CfgVehicles/Car\"] call BIS_fnc_configPath; // [\"configFile\",\"CfgVehicles\",\"Car\"] [configFile >> \"CfgVehicles\" >> \"Car\", \"\"] call BIS_fnc_configPath; // \"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"", "docSyntax": "[config, format, strict] call BIS_fnc_configPath;", "broadcasted": false, "description": "Returns config path to given entry in given format", "server": false}, "ropeEndPosition": {"reviewLevel": 1, "syntax": "ropeEndPosition rope", "local": false, "example": "_ends = ropeEndPosition (ropes heli1 select 0); _end1 = _ends select 0; _end2 = _ends select 1;", "docSyntax": "ropeEndPosition rope", "broadcasted": false, "description": "Return rope end positions in Position3D format", "server": false}, "BIS_fnc_loadInventory": {"reviewLevel": 1, "syntax": "param call BIS_fnc_loadInventory;", "local": false, "example": "loadout = [player,configfile >> \"CfgVehicles\" >> \"B_Soldier_SL_F\"] call BIS_fnc_loadInventory; // Gives loadout of BLUFOR Squad Leader to player unit.", "docSyntax": "param call BIS_fnc_loadInventory;", "broadcasted": false, "description": "Adds a predefined loadout (either via CfgVehicles, CfgRespawnInventory, or a custom inventory saved via BIS_fnc_saveInventory) to a specified unit.", "server": false}, "BIS_fnc_initIntelObject": {"reviewLevel": 2, "syntax": "[ <object> ] call BIS_fnc_initIntelObject;", "local": false, "example": "Setup an object as intel from its init attribute in the editor.", "docSyntax": "[ object ] call BIS_fnc_initIntelObject;", "broadcasted": false, "description": "The function sets up an object as intel retrievable by the players by adding a \"Take Intel\" addAction to it.", "server": false}, "addMagazineGlobal": {"reviewLevel": 1, "syntax": "<objUnit> addMagazineGlobal magazineName", "local": false, "example": "player addMagazineGlobal \"30Rnd_65x39_caseless_mag\";", "docSyntax": "unit addMagazineGlobal magazineName", "broadcasted": true, "description": "Adds a magazine to the unit. Note: You may create invalid combinations by adding more magazines than the free space in unit's inventory allows. When doing so, application behaviour is undefined.", "server": true}, "BIS_fnc_createRuin": {"reviewLevel": 1, "syntax": "building call BIS_fnc_createRuin", "local": false, "example": "aBuilding call BIS_fnc_createRuin;", "docSyntax": "building call BIS_fnc_createRuin", "broadcasted": false, "description": "Create a building ruin and hide the original object.", "server": false}, "BIS_fnc_respawnMenuSpectator": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "isEqualTypeArray": {"reviewLevel": 2, "syntax": "arr1 isEqualTypeArray arr2", "local": false, "example": "_arr = [1,true,\"three\"]; _arr isEqualTypeArray [0,objNull,\"\"]; // false _arr isEqualTypeArray [0,false,\"\"]; // true", "docSyntax": "arr1 isEqualTypeArray arr2", "broadcasted": false, "description": "Compares types of all elements of one array to types of all elements of another array.", "server": false}, "BIS_fnc_disableSaving": {"reviewLevel": 2, "syntax": "<scalar> call BIS_fnc_disableSaving", "local": false, "example": "\"savingID\" call BIS_fnc_disableSaving;", "docSyntax": "id call BIS_fnc_disableSaving", "broadcasted": false, "description": "Controls the disabling of saving, stacking each request to prevent saving being enabled too early.", "server": false}, "BIS_fnc_VRCourseBallistics3": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "isEqualTypeAll": {"reviewLevel": 1, "syntax": "arr isEqualTypeAll val", "local": false, "example": "_arr = [1,2,3,4,5,6,7,8,9,0]; _arr isEqualTypeAll \"\"; //false _arr isEqualTypeAll 0; //true", "docSyntax": "arr isEqualTypeAll val", "broadcasted": false, "description": "Compares types of all elements of an array to the type of a single value.", "server": false}, "BIS_fnc_removeVirtualBackpackCargo": {"reviewLevel": 2, "syntax": "[<object>,backpackClasses,removeGlobally] call BIS_fnc_removeVirtualBackpackCargo", "local": false, "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualBackpackCargo;", "docSyntax": "[object,backpackClasses,removeGlobally] call BIS_fnc_removeVirtualBackpackCargo", "broadcasted": false, "description": "Remove virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "addCuratorAddons": {"reviewLevel": 1, "syntax": "<objCurator> addCuratorAddons addons", "local": false, "example": "curatorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];", "docSyntax": "curatorObj addCuratorAddons addons", "broadcasted": false, "description": "Allow curator use of given addon.", "server": false}, "nearSupplies": {"reviewLevel": 1, "syntax": "origin nearSupplies radius", "local": false, "example": "_list = player nearSupplies 50;", "docSyntax": "origin nearSupplies radius", "broadcasted": false, "description": "Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.", "server": false}, "customChat": {"reviewLevel": 2, "syntax": "<objUnit> customChat [channel,message]", "local": false, "example": "_unit customChat [1, \"Hi, I am a custom chat message\"];", "docSyntax": "unit customChat [channel, message]", "broadcasted": false, "description": "Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with radioChannelCreate command.", "server": true}, "remoteExec": {"reviewLevel": 4, "syntax": "<any> remoteExec [<string>, <scalar|object|array>, <bool>]", "local": false, "example": "\"hello\" remoteExec [\"hint\"];", "docSyntax": "params remoteExec [functionName, targets, JIP]", "broadcasted": true, "description": "Remote async execution of given funtion on given machines. Function can contain delaying commands (i.e. sleep).", "server": false}, "getSlingLoad": {"reviewLevel": 2, "syntax": "getSlingLoad <objVehicle>", "local": false, "example": "_cargo = getSlingLoad heli1;", "docSyntax": "getSlingLoad vehicle", "broadcasted": false, "description": "Return object which is sling loaded by vehicle", "server": false}, "currentMagazineDetail": {"reviewLevel": 2, "syntax": "currentMagazineDetail <objVehicle>", "local": false, "example": "_currentMagazineDetail = currentMagazineDetail player; //\"6.5mm 30Rnd STANAG Mag(30/30)[id:0]\"", "docSyntax": "currentMagazineDetail vehicle", "broadcasted": false, "description": "Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.", "server": false}, "synchronizedTriggers": {"reviewLevel": 1, "syntax": "synchronizedTriggers waypoint", "local": false, "example": "", "docSyntax": "synchronizedTriggers waypoint", "broadcasted": false, "description": "Returns the list of triggers synchronized with a given waypoint.", "server": false}, "BIS_fnc_curatorChallengeFindIntel": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "drawTriangle": {"reviewLevel": 2, "syntax": "<objMap> drawTriangle [vertices,<scalar>,fill]", "local": false, "example": "findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { _this select 0 drawTriangle [ [ player getRelPos [100, 0], player getRelPos [100, -135], player getRelPos [100, 135] ], [1,0,0,0.5], \"#(rgb,1,1,1)color(1,1,1,1)\" ]; }];", "docSyntax": "map drawTriangle [vertices, color, fill]", "broadcasted": false, "description": "Draws a single triangle or multiple triangles on the map. Triangle is defined by 3 positions of its verticies: p0, p1, p2 in a single array [p0, p1, p2]. Next 3 positions in the same array [p0, p1, p2, p0, p1, p2] will be used to draw second triangle, another 3 positions [p0, p1, p2, p0, p1, p2, p0, p1, p2] to draw 3rd and so on.", "server": false}, "BIS_fnc_taskCreate": {"reviewLevel": 2, "syntax": "[owner,taskID,description,destination,state,priority,showNotification,type,visibleIn3D] call BIS_fnc_taskCreate", "local": false, "example": "[civilian,[\"task1\"],[\"Do this and you get a cookie\",\"Earn Cookie\",\"cookiemarker\"],[0,0,0],1,2,true] call BIS_fnc_taskCreate", "docSyntax": "[owner, taskID, description, destination, state, priority, showNotification, type, visibleIn3D] call BIS_fnc_taskCreate", "broadcasted": false, "description": "Create a task.", "server": false}, "BIS_fnc_exportFunctionsToWiki": {"reviewLevel": 2, "syntax": "[filter,timestamp] call BIS_fnc_exportFunctionsToWiki", "local": false, "example": "[] spawn BIS_fnc_exportFunctionsToWiki; // export all functions", "docSyntax": "[filter, timestamp] call BIS_fnc_exportFunctionsToWiki", "broadcasted": false, "description": "", "server": false}, "vectorDistance": {"reviewLevel": 2, "syntax": "vector1 vectorDistance vector2", "local": false, "example": "_euclideanDist = getPosASL player vectorDistance [0,0,0];", "docSyntax": "vector1 vectorDistance vector2", "broadcasted": false, "description": "Distance between two 3D vectors.", "server": false}, "MP_End_Game": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_moduleCuratorAddPoints": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "getDLCs": {"reviewLevel": 1, "syntax": "getDLCs filter", "local": false, "example": "_ownedDLCs = getDLCs 1;", "docSyntax": "getDLCs filter", "broadcasted": false, "description": "Returns array of appIDs of DLCs. A list of all official DLCs:", "server": false}, "BIS_fnc_moduleLightning": {"example": "", "server": false, "broadcasted": false, "description": "http://community.bistudio.com/wiki/Arma_3_Modules", "local": false}, "disableDebriefingStats": {"reviewLevel": 2, "syntax": "disableDebriefingStats", "local": false, "example": "disableDebriefingStats;", "docSyntax": "disableDebriefingStats", "broadcasted": false, "description": "Disable debriefing score table.", "server": false}, "getSoundController": {"reviewLevel": 1, "syntax": "<objVehicle> getSoundController controller", "local": false, "example": "vehicle player getSoundController \"rpm\"; //600", "docSyntax": "vehicle getSoundController controller", "broadcasted": false, "description": "Returns value of the given sound controller.", "server": false}, "ropeDestroy": {"reviewLevel": 1, "syntax": "ropeDestroy rope", "local": false, "example": "ropeDestroy myRope;", "docSyntax": "ropeDestroy rope", "broadcasted": false, "description": "Destroy a rope.", "server": false}, "BIS_fnc_terrainGradAngle": {"example": "_radGrad = [getPos player, getDir player] call BIS_fnc_terrainGradAngle;", "server": false, "broadcasted": false, "description": "Returns the gradient angle (in radians) of the terrain at a specified position and a compass direction. It is an angle of the slope of a tangent plane to the terrain at the specified position in the specified direction.", "local": false}, "BIS_fnc_VRSpawnSelector": {"reviewLevel": 2, "syntax": "[center,type] call BIS_fnc_VRSpawnSelector", "local": false, "example": "[ [0,0,0], \"exit\" ] call BIS_fnc_VRSpawnSelector;", "docSyntax": "[center, type] call BIS_fnc_VRSpawnSelector", "broadcasted": false, "description": "Spawns the course selector (used primarily for VR missions).", "server": false}, "BIS_fnc_cinemaBorder": {"reviewLevel": 2, "syntax": "[mode,duration,sound,view] call BIS_fnc_cinemaBorder", "local": false, "example": "[1, 2, true, true ] call BIS_fnc_cinemaBorder;", "docSyntax": "[mode, duration, sound, view] call BIS_fnc_cinemaBorder", "broadcasted": false, "description": "Creates cinematic borders. Player cannot move during cutscene.", "server": false}, "BIS_fnc_logFormat": {"reviewLevel": 2, "syntax": "[<string>,<Parameters>] call BIS_fnc_logFormat;", "local": false, "example": "[\"my message goes here\"] call BIS_fnc_logFormat;", "docSyntax": "[Text, <Parameters>] call BIS_fnc_logFormat;", "broadcasted": false, "description": "Display debug message.", "server": false}, "BIS_fnc_curatorChallengeGetInVehicle": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_InstructorFigure": {"example": "", "server": false, "broadcasted": false, "description": "/******************************************************************************* Version: 0.1 Name: Instructor Figure DESCRIPTION: www. PARAMETERS: 1) function called - string, list of functions: - Init - Destroy 2) parameter for the function For more informations see https://wiki.bistudio.com/index.php/A3_InstructorFigure RETURNED VALUE: depends on the function called TODO: + PlayTopic + Fade out New Intel text + wait for TAB press + use functions for dynamic text - kbTell support - logging + rework data structure (add, remove, search) - ContainerExists function + display only if difficulty is low + disableSerialization + GetTopics should return array, not just debuglog info + deny play more than one topic in a time + Localize + check and fix return values of functions + correct debuglog informations - deny addtopic during playing + safe work with BIS_GroupCommunication - dont overwrite user menus + remove INSTRUCTOR FIGURE from BIS_GroupCommunication + PlayTopicRandom - rule exceeding selection of a previous sentence *******************************************************************************/ //Variables", "local": false}, "humidity": {"reviewLevel": 2, "syntax": "humidity", "local": false, "example": "currentHumidity = humidity;", "docSyntax": "humidity", "broadcasted": false, "description": "Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.", "server": false}, "BIS_fnc_respawnTickets": {"reviewLevel": 2, "syntax": "[<<object>>,(<tickets>,<dynamicTarget>)] call BIS_fnc_respawnTickets;", "local": false, "example": "Add 5 tickets for BLUFOR [west, 5] call BIS_fnc_respawnTickets;", "docSyntax": "[<target>,(<tickets>,<dynamicTarget>)] call BIS_fnc_respawnTickets;", "broadcasted": false, "description": "Manage respawn tickets used by Tickets respawn template. When player dies, number of tickets is decreased by 1. The most local tickets are always used. Example: When you first add tickets to player's side, they will be affected. If you later define tickets also to player's group, they will completely replace the side tickets. When player runs out of the tickets, his respawn is disabled. If you use also EndMission respawn template, the mission will automatically end once tickets in all name spaces are exhausted.", "server": false}, "isTouchingGround": {"reviewLevel": 2, "syntax": "isTouchingGround <object>", "local": false, "example": "if (isTouchingGround player) then {hint \"Terraferma!\";};", "docSyntax": "isTouchingGround object", "broadcasted": false, "description": "Returns true if object is touching the ground.", "server": true}, "getItemCargo": {"reviewLevel": 1, "syntax": "getItemCargo box", "local": false, "example": "hint str getItemCargo cursorTarget;", "docSyntax": "getItemCargo box", "broadcasted": false, "description": "Returns all items names and count from ammo box (or any general weapon holder container).", "server": true}, "setLightnings": {"reviewLevel": 2, "syntax": "<scalar> setLightnings <scalar>", "local": false, "example": "1800 setLightnings 0.7;", "docSyntax": "time setLightnings value", "broadcasted": false, "description": "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "server": false}, "BIS_fnc_completedCuratorChallengesCount": {"reviewLevel": 1, "syntax": "curator call BIS_fnc_completedCuratorChallengesCount", "local": false, "example": "curatorModule call BIS_fnc_completedCuratorChallengesCount;", "docSyntax": "curator call BIS_fnc_completedCuratorChallengesCount", "broadcasted": false, "description": "Return number of completed curator challenges.", "server": false}, "BIS_fnc_isLeapYear": {"reviewLevel": 1, "syntax": "year call BIS_fnc_isLeapYear", "local": false, "example": "_isLeapYear = 2035 call BIS_fnc_isLeapYear;", "docSyntax": "year call BIS_fnc_isLeapYear", "broadcasted": false, "description": "Returns true if given year is a leap year, otherwise false.", "server": false}, "BIS_fnc_VRCourseCommandingVehicles3": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_moduleTTCPOut": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "inAreaArray": {"reviewLevel": 1, "syntax": "positions inAreaArray <objTrigger>", "local": false, "example": "vehicles inAreaArray trigger_1;", "docSyntax": "positions inAreaArray trigger", "broadcasted": false, "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area", "server": false}, "showUAVFeed": {"reviewLevel": 1, "syntax": "showUAVFeed show", "local": false, "example": "showUAVFeed true;", "docSyntax": "showUAVFeed show", "broadcasted": false, "description": "Shows/hides video feed transmitted from UAV. When enabled, the video is streamed to following texture", "server": false}, "BIS_fnc_listCuratorPlayers": {"reviewLevel": 2, "syntax": "[] call BIS_fnc_listCuratorPlayers", "local": false, "example": "call BIS_fnc_listCuratorPlayers;", "docSyntax": "[] call BIS_fnc_listCuratorPlayers", "broadcasted": false, "description": "Returns list of playable units with access to curator.", "server": false}, "setVehicleRadar": {"reviewLevel": 1, "syntax": "<objVehicle> setVehicleRadar rules", "local": false, "example": "_vehicle setVehicleRadar 1;", "docSyntax": "vehicle setVehicleRadar rules", "broadcasted": false, "description": "Sets the AI rules of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat. The command doesn't affect player-controlled vehicles.", "server": false}, "magazineTurretAmmo": {"reviewLevel": 2, "syntax": "<objVehicle> magazineTurretAmmo [magazineClass,turretPath]", "local": false, "example": "vehicle player magazineTurretAmmo [\"cls\", [0]]", "docSyntax": "vehicle magazineTurretAmmo [magazineClass, turretPath]", "broadcasted": false, "description": "Returns ammo count of given type from given turret", "server": false}, "BIS_fnc_unitHeadgear": {"reviewLevel": 2, "syntax": "[<objUnit>,headgear,facewear] call BIS_fnc_unitHeadgear", "local": false, "example": "[this] call BIS_fnc_unitHeadgear; // headgear and face wear, same as [this, [], []]", "docSyntax": "[unit, headgear, facewear] call BIS_fnc_unitHeadgear", "broadcasted": false, "description": "Randomise headgear and facewear of a character.", "server": false}, "BIS_fnc_earthquake": {"reviewLevel": 2, "syntax": "[intensity] call BIS_fnc_earthquake", "local": false, "example": "[4] call BIS_fnc_earthquake;", "docSyntax": "[intensity] call BIS_fnc_earthquake", "broadcasted": false, "description": "Earthquake simulation - now just camera shake and sound. Stamina is impacted by the earthquake too.", "server": false}, "curatorEditableObjects": {"reviewLevel": 2, "syntax": "curatorEditableObjects <objCurator>", "local": false, "example": "_objects = curatorEditableObjects myCurator;", "docSyntax": "curatorEditableObjects curatorObj", "broadcasted": false, "description": "Returns all editable objects which belong to a curator.", "server": true}, "BIS_fnc_getUnitByUid": {"reviewLevel": 1, "syntax": "playerUID call BIS_fnc_getUnitByUid", "local": false, "example": "_unitPlayedByUID550055 = \"550055\" call BIS_fnc_getUnitByUid;", "docSyntax": "playerUID call BIS_fnc_getUnitByUid", "broadcasted": false, "description": "Returns object belonging to given player UID", "server": false}, "tvSetPictureColor": {"reviewLevel": 2, "syntax": "tvSetPictureColor [<scalar>,path,<scalar>]", "local": true, "example": "tvSetPictureColor [101, [0,2], [1,0,1,1]];", "docSyntax": "tvSetPictureColor [idc, path, color]", "broadcasted": false, "description": "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.", "server": false}, "ctFindHeaderRows": {"reviewLevel": 2, "syntax": "<uiControl> ctFindHeaderRows <scalar>", "local": true, "example": "_array = _control ctFindHeaderRows 0;", "docSyntax": "ctrl ctFindHeaderRows index", "broadcasted": false, "description": "Takes index of a header as a parameter. Returns array of indices of rows under this header.", "server": false}, "magazinesAmmoFull": {"reviewLevel": 2, "syntax": "magazinesAmmoFull <objVehicle>", "local": false, "example": "_magazinesAmmoFull = magazinesAmmoFull player; /* [ [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Uniform\"], [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\"], [\"16Rnd_9x21_Mag\",16,false,-1,\"Vest\"], [\"SmokeShellGreen\",1,true,0,\"SmokeShellGreenMuzzle\"], [\"Chemlight_green\",1,true,0,\"ChemlightGreenMuzzle\"], [\"HandGrenade\",1,true,0,\"HandGrenadeMuzzle\"], [\"30Rnd_65x39_caseless_mag\",30,true,1,\"arifle_MX_ACO_pointer_F\"], [\"16Rnd_9x21_Mag\",16,true,2,\"hgun_P07_F\"] ]", "docSyntax": "magazinesAmmoFull vehicle", "broadcasted": false, "description": "Returns array of arrays of all vehicle's magazines with extended information about them. Magazine type is available for loaded magazines only, otherwise it is -1.", "server": false}, "BIS_fnc_moduleFDCPOut": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_addStackedEventHandler": {"reviewLevel": 2, "syntax": "[<scalar>,event,<code>,arguments] call BIS_fnc_addStackedEventHandler;", "local": false, "example": "[\"someId\", \"onEachFrame\", {hintSilent str time}] call BIS_fnc_addStackedEventHandler;", "docSyntax": "[id, event, code, arguments] call BIS_fnc_addStackedEventHandler;", "broadcasted": false, "description": "Stacks an event handler. All event handlers accept user arguments, which are passed to the EH code in _this variable. If the EH has own params returned in _this variable as well, user arguments are appended to the end of _this array. Note that if you try to add empty EH, i.e. with empty code, it will simply be ignored.", "server": false}, "BIS_fnc_dynamicGroups": {"example": "[\"Initialize\"] call BIS_fnc_dynamicGroups;//Exec on Server", "server": false, "broadcasted": false, "description": "Function that adds dynamic groups to the mission as seen in End Game. Function needs to be initialized on server and client. Clients can then use action TeamSwitch (\"U\" by default) to access the Dynamic Groups interface.", "local": false}, "BIS_fnc_moduleHealth": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_ORBATSetGroupParams": {"reviewLevel": 2, "syntax": "[IDType,size,type,<objSide>,<string>,shortName,<string>,textSizeCoef,insignia,textColour,commName,commRank,description,assets] call BIS_fnc_ORBATSetGroupParams", "local": false, "example": "[ 1, \"Platoon\", \"Infantry\", \"West\", \"Name:\u00c2\u00a0%1\u00c2\u00a0%2\u00c2\u00a0%3\", \"Short Name:\u00c2\u00a0%1\u00c2\u00a0%2\u00c2\u00a0%3\", \"b_air\", 3, \"\\A3\\Air_F_EPB\\Heli_Light_03\\data\\UI\\Heli_Light_03_CA.paa\", [0,0,0,1], \"Commander Name\", \"General\", \"Description\", [ [\"B_MRAP_01_F\",5] ] ] call BIS_fnc_ORBATAddGroupOverlay;", "docSyntax": "[IDType, size, type, side, name, shortName, texture, textSizeCoef, insignia, textColour, commName, commRank, description, assets] call BIS_fnc_ORBATSetGroupParams", "broadcasted": false, "description": "Overrides group params from CfgORBAT. See ORBAT Viewer for a detailed explaination.", "server": false}, "isMultiplayerSolo": {"reviewLevel": 2, "syntax": "isMultiplayerSolo", "local": false, "example": "_state = isMultiplayerSolo;", "docSyntax": "isMultiplayerSolo", "broadcasted": false, "description": "Returns true when playing a game in solo multiplayer (for example Apex coop campaign PLAY SOLO option).", "server": false}, "enableVehicleCargo": {"reviewLevel": 2, "syntax": "<objVehicle> enableVehicleCargo <bool>", "local": false, "example": "vehicle enableVehicleCargo true;", "docSyntax": "vehicle enableVehicleCargo enable", "broadcasted": false, "description": "Enable/disable option to transport other vehicles (if configured) or be transported.", "server": false}, "setWaves": {"reviewLevel": 2, "syntax": "<scalar> setWaves <scalar>", "local": false, "example": "180 setWaves .5;", "docSyntax": "time setWaves value", "broadcasted": false, "description": "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "server": false}, "customRadio": {"reviewLevel": 2, "syntax": "<objUnit> customRadio [channel,message]", "local": false, "example": "_soldierOne customRadio [1, \"WordEnemy\"];", "docSyntax": "unit customRadio [channel, message]", "broadcasted": false, "description": "Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol.", "server": true}, "get3DENConnections": {"reviewLevel": 1, "syntax": "get3DENConnections entity", "local": false, "example": "", "docSyntax": "get3DENConnections entity", "broadcasted": false, "description": "Return all connections currently present on an entity.", "server": false}, "BIS_fnc_diagFindMissingAuthors": {"reviewLevel": 2, "syntax": "call BIS_fnc_diagFindMissingAuthors", "local": false, "example": "call BIS_fnc_diagFindMissingAuthors;", "docSyntax": "call BIS_fnc_diagFindMissingAuthors", "broadcasted": false, "description": "Copies a list of objects to the clipboard which miss the author attribute.", "server": false}, "BIS_fnc_modulePositioning": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_taskCurrent": {"reviewLevel": 2, "syntax": "<objUnit> call BIS_fnc_taskCurrent", "local": false, "example": "_currentTask = player call BIS_fnc_taskCurrent;", "docSyntax": "unit call BIS_fnc_taskCurrent", "broadcasted": false, "description": "Returns unit's current task.", "server": false}, "BIS_fnc_respawnNone": {"reviewLevel": 2, "syntax": "[<objUnit>,<objUnit>] spawn BIS_fnc_respawnNone", "local": false, "example": "[ player, someUnit ] spawn BIS_fnc_respawnNone;", "docSyntax": "[killed,killer] spawn BIS_fnc_respawnNone", "broadcasted": false, "description": "Creates a death screen.", "server": false}, "pixelGrid": {"reviewLevel": 2, "syntax": "pixelGrid", "local": false, "example": "_gridHeight = pixelH * pixelGrid;", "docSyntax": "pixelGrid", "broadcasted": false, "description": "Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids.", "server": false}, "getCenterOfMass": {"reviewLevel": 2, "syntax": "getCenterOfMass <object>", "local": false, "example": "_com = getCenterOfMass _myCar;", "docSyntax": "getCenterOfMass object", "broadcasted": false, "description": "Returns center of mass of an object.", "server": true}, "hasPilotCamera": {"reviewLevel": 2, "syntax": "hasPilotCamera <object>", "local": false, "example": "hasPilotCamera vehicle player", "docSyntax": "hasPilotCamera object", "broadcasted": false, "description": "Returns true if the object airplane or helicopter has a pilotCamera.", "server": true}, "roleDescription": {"reviewLevel": 2, "syntax": "roleDescription <objUnit>", "local": false, "example": "_playerRole = roleDescription player;", "docSyntax": "roleDescription unit", "broadcasted": false, "description": "Returns unit description set in Editor and visible on role selection screen in MP. Works in MP and SP.", "server": false}, "fullCrew": {"reviewLevel": 2, "syntax": "fullCrew <objVehicle>", "local": false, "example": "_list = fullCrew vehicle player;", "docSyntax": "fullCrew vehicle", "broadcasted": false, "description": "Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well.", "server": true}, "setStaminaScheme": {"reviewLevel": 1, "syntax": "setStaminaScheme scheme", "local": false, "example": "setStaminaScheme \"Default\";", "docSyntax": "setStaminaScheme scheme", "broadcasted": false, "description": "Set stamina bar color. The scheme can be \"Normal\", \"FastDrain\", \"Exhausted\" or \"Default\".", "server": false}, "independent": {"reviewLevel": 2, "syntax": "independent", "local": false, "example": "SQF:if ((side _unit) == independent) then { hint \"This is a independent unit!\"; };", "docSyntax": "independent", "broadcasted": false, "description": "Pre-defined variable for the independent side.", "server": false}, "remove3DENEventHandler": {"reviewLevel": 2, "syntax": "remove3DENEventHandler [type,<scalar>]", "local": false, "example": "eh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}]; remove3DENEventHandler [\"onUndo\",eh];", "docSyntax": "remove3DENEventHandler [type,id]", "broadcasted": false, "description": "Removes Eden Editor event handler of given type and ID.", "server": false}, "forceFlagTexture": {"reviewLevel": 2, "syntax": "<object> forceFlagTexture <string>", "local": false, "example": "player forceFlagTexture \"\\A3\\Data_F\\Flags\\Flag_red_CO.paa\";", "docSyntax": "object forceFlagTexture texture", "broadcasted": true, "description": "Forces a flag texture onto a flag carrier (unit, vehicle or flag pole). No flag holder is required. If \"\" is used as texture, the texture is removed. This will override regularly owned flags. This type of flag texture cannot be retrieved using flagTexture.", "server": true}, "setAirplaneThrottle": {"reviewLevel": 1, "syntax": "airplane setAirplaneThrottle <scalar>", "local": false, "example": "", "docSyntax": "airplane setAirplaneThrottle value", "broadcasted": false, "description": "Sets a wanted throttle position, works only on player's vehicle.", "server": false}, "setShotParents": {"reviewLevel": 1, "syntax": "projectile setShotParents [<objVehicle>,instigator]", "local": false, "example": "myProjectile setShotParents [vehicle bob, bob];", "docSyntax": "projectile setShotParents [vehicle, instigator]", "broadcasted": true, "description": "Sets vehicle and instigator pair for the given projectile.", "server": true}, "BIS_fnc_diagMissionPositions": {"reviewLevel": 2, "syntax": "[configPath,allUnits,isCampaign] call BIS_fnc_diagMissionPositions", "local": false, "example": "[configFile >> \"CfgMissions\", true, false] call BIS_fnc_diagMissionPositions;", "docSyntax": "[configPath, allUnits, isCampaign] call BIS_fnc_diagMissionPositions", "broadcasted": false, "description": "Displays positions of units from all missions", "server": false}, "BIS_fnc_addClassOO": {"reviewLevel": 1, "syntax": "class call BIS_fnc_addClassOO", "local": false, "example": "\"someOOClass\" call BIS_fnc_addClassOO;", "docSyntax": "class call BIS_fnc_addClassOO", "broadcasted": false, "description": "Registering a class for the OO scripting shell.", "server": false}, "difficultyOption": {"reviewLevel": 1, "syntax": "difficultyOption optionName", "local": false, "example": "hint str (difficultyOption \"friendlyTags\");", "docSyntax": "difficultyOption optionName", "broadcasted": false, "description": "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the CfgDifficultyPresets config class or in ArmA profile file under class DifficultyPresets/xxx/Options (xxx being Recruit, Regular or Veteran).", "server": false}, "BIS_fnc_initVirtualUnit": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_initVirtualUnit", "local": false, "example": "someObject call BIS_fnc_initVirtualUnit;", "docSyntax": "[object] call BIS_fnc_initVirtualUnit", "broadcasted": false, "description": "Initialize virtual unit. Disable it, turn the camera upwards and save its correct side.", "server": false}, "weightRTD": {"reviewLevel": 1, "syntax": "weightRTD helicopter", "local": false, "example": "_taruWeight = weightRTD taru// Returns [7000,300,1990.56,0,0]", "docSyntax": "weightRTD helicopter", "broadcasted": false, "description": "Returns weight of RTD helicopter.", "server": false}, "BIS_fnc_addSupportLink": {"reviewLevel": 2, "syntax": "[requesterUnit,requesterMod,providerMod] call BIS_fnc_addSupportLink", "local": false, "example": "[ player, BIS_requesterMod, BIS_providerMod ] call BIS_fnc_addSupportLink;", "docSyntax": "[requesterUnit, requesterMod, providerMod] call BIS_fnc_addSupportLink", "broadcasted": false, "description": "Adds support types during a mission.", "server": false}, "diag_mergeConfigFile": {"reviewLevel": 1, "syntax": "diag_mergeConfigFile path", "local": false, "example": "diag_mergeConfigFile [\"O:\\Arma3\\A3\\Stuff_F\\config.cpp\"]", "docSyntax": "diag_mergeConfigFile path", "broadcasted": false, "description": "Adjust configs on-the-fly without the need of restarting the game (by merging the given config file into the main config in memory). Location is relative to the Userdir (default) or mission directory depending on the the value of UserDir [FileName,UserDir]. Doesn't work with cfgAmmo & few other classes. (Since 1.69, cfgAmmo should be mergeable!) Merging config file means also that you can't delete parameters through diag_mergeConfigFile. Changes applied by diag_mergeConfigFile are applied to all new entities so restart of mission is not necessarily required - spawning vehicle again or changing back forth weapon should usually do the trick.", "server": false}, "all3DENEntities": {"reviewLevel": 2, "syntax": "all3DENEntities", "local": false, "example": "systemChat str all3DENEntities;", "docSyntax": "all3DENEntities", "broadcasted": false, "description": "Returns an array of all currently placed Eden Editor entities, including groups, waypoints, and markers in following format:", "server": false}, "getAssignedCuratorLogic": {"reviewLevel": 2, "syntax": "getAssignedCuratorLogic <objUnit>", "local": false, "example": "(getAssignedCuratorLogic player) removeCuratorEditableObjects [allDead,true];", "docSyntax": "getAssignedCuratorLogic player", "broadcasted": false, "description": "Returns curator logic to which given player has access.", "server": false}, "BIS_fnc_removeFromPairs": {"example": "", "server": false, "broadcasted": false, "description": "Removes an item from pair array.", "local": false}, "BIS_fnc_respawnSeagull": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_showMarkers": {"reviewLevel": 2, "syntax": "[action,markers] call BIS_fnc_showMarkers", "local": false, "example": "[\"hide\", [\"respawn_west\", \"respawn_east\"]] call BIS_fnc_showMarkers;", "docSyntax": "[action, markers] call BIS_fnc_showMarkers", "broadcasted": false, "description": "Show or hide given markers using fade effect.", "server": false}, "BIS_fnc_moduleEffectsEmitterCreator": {"example": "", "server": false, "broadcasted": false, "description": "/* File: fn_moduleEffectsEmitterCreator.sqf Description: Module function. Creates particle emitters and calls effect function. Parameter(s): _this select 0 (Object) - Module logic. _this select 1 (String) - Function name. _this select 2 (Number) - Optional - Number of emitters. Returned value: None.", "local": false}, "setApertureNew": {"reviewLevel": 2, "syntax": "setApertureNew [min,std,max,stdLum]", "local": false, "example": "setApertureNew [0.3, 0.2, 0.1, 1];", "docSyntax": "setApertureNew [min, std, max, stdLum]", "broadcasted": false, "description": "Sets custom camera aperture ([-1] to do it automatically).", "server": false}, "nameSound": {"reviewLevel": 2, "syntax": "nameSound <objUnit>", "local": false, "example": "nameSound player", "docSyntax": "nameSound person", "broadcasted": false, "description": "Returns the nameSound of a person.", "server": false}, "BIS_fnc_moduleProjectile": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_objectVar": {"reviewLevel": 2, "syntax": "[<object>,varNameRoot] call BIS_fnc_objectVar", "local": false, "example": "hint str (player call BIS_fnc_objectVar); // \"bis_o1\" hint str (player == (missionNamespace getVariable \"bis_o1\")); // true", "docSyntax": "[object, varNameRoot] call BIS_fnc_objectVar", "broadcasted": false, "description": "Return a unique object variable. The variable is preserved after unit respawn.", "server": false}, "BIS_fnc_getVirtualMagazineCargo": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_getVirtualMagazineCargo", "local": false, "example": "BIS_ammoBox call BIS_fnc_getVirtualMagazineCargo;", "docSyntax": "object call BIS_fnc_getVirtualMagazineCargo", "broadcasted": false, "description": "Get virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "lbSetPictureColor": {"reviewLevel": 2, "syntax": "lbSetPictureColor [<scalar>,<scalar>,<scalar>]", "local": false, "example": "lbSetPictureColor [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetPictureColor [idc, index, color]", "broadcasted": false, "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", "server": false}, "BIS_fnc_limitSupport": {"reviewLevel": 2, "syntax": "[caller,supportType,quantity] call BIS_fnc_limitSupport", "local": false, "example": "[player, \"Transport\", -1] call BIS_fnc_limitSupport;", "docSyntax": "[caller, supportType, quantity] call BIS_fnc_limitSupport", "broadcasted": false, "description": "Limits support runs during a mission.", "server": false}, "BIS_fnc_setCuratorVisionModes": {"reviewLevel": 2, "syntax": "[curator,mode] call BIS_fnc_setCuratorVisionModes", "local": false, "example": "[BIS_curator,[-1,-2]] call BIS_fnc_setCuratorVisionModes;", "docSyntax": "[curator,mode] call BIS_fnc_setCuratorVisionModes", "broadcasted": false, "description": "Set which vision modes curator can access.", "server": false}, "animateSource": {"reviewLevel": 2, "syntax": "<object> animateSource [source,phase,<scalar>]", "local": false, "example": "house animateSource [\"Door_1_source\", 1, true];", "docSyntax": "object animateSource [source, phase, speed]", "broadcasted": true, "description": "Process an animation of the object. If animate uses class name from CfgModels Animations, animateSource uses name defined by source property. This allows to use just one command on a bunch of animations related to the same source simultaneously. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.", "server": true}, "BIS_fnc_showMissionStatus": {"reviewLevel": 2, "syntax": "[] call BIS_fnc_showMissionStatus", "local": false, "example": "call BIS_fnc_showMissionStatus;", "docSyntax": "[] call BIS_fnc_showMissionStatus", "broadcasted": false, "description": "Show mission status with sectors, respawn tickets, etc.", "server": false}, "getAimingCoef": {"reviewLevel": 2, "syntax": "getAimingCoef <objUnit>", "local": false, "example": "_coef = getAimingCoef player", "docSyntax": "getAimingCoef unit", "broadcasted": false, "description": "Get current aiming coefficient (higher ~ less precise, default is 1)", "server": false}, "removeItemFromVest": {"reviewLevel": 2, "syntax": "<objUnit> removeItemFromVest <objItem>", "local": false, "example": "", "docSyntax": "unit removeItemFromVest item", "broadcasted": true, "description": "Removes item from soldier's vest.", "server": true}, "ppEffectForceInNVG": {"reviewLevel": 2, "syntax": "<scalar> ppEffectForceInNVG <bool>", "local": false, "example": "_ppGrain ppEffectForceInNVG true;", "docSyntax": "number ppEffectForceInNVG bool", "broadcasted": false, "description": "Forces use of Post process effects in NVG.", "server": false}, "BIS_fnc_prepareAO": {"reviewLevel": 1, "syntax": "density call BIS_fnc_prepareAO", "local": false, "example": "0.75 call BIS_fnc_prepareAO;", "docSyntax": "density call BIS_fnc_prepareAO", "broadcasted": false, "description": "Spawns random patrols and/or vehicles in trigger areas with proper names. Side selected in the triggers \"Activation\" listbox will determine the side of the spawned asset(s).", "server": false}, "fogParams": {"reviewLevel": 2, "syntax": "fogParams", "local": false, "example": "_fog = fogParams", "docSyntax": "fogParams", "broadcasted": false, "description": "A getter for setFog (Alt Syntax). Returns extended params for the fog", "server": false}, "tvValue": {"reviewLevel": 2, "syntax": "tvValue [<scalar>,[path]]", "local": true, "example": "tvValue [101, [0]];", "docSyntax": "tvValue [idc, [path]]", "broadcasted": false, "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.", "server": false}, "removeHandgunItem": {"reviewLevel": 2, "syntax": "<objUnit> removeHandgunItem <objItem>", "local": true, "example": "player removeHandgunItem \"muzzle_snds_L\";", "docSyntax": "unit removeHandgunItem item", "broadcasted": true, "description": "Removes given weapon item from the handgun weapon cargo space.", "server": false}, "isDLCAvailable": {"reviewLevel": 1, "syntax": "isDLCAvailable appid", "local": false, "example": "_Karts = 288520; isDLCAvailable _Karts;//Returns true", "docSyntax": "isDLCAvailable appid", "broadcasted": false, "description": "Returns true if the DLC is marked as available. (Steam)", "server": false}, "BIS_fnc_moduleTaskSetDestination": {"example": "", "server": false, "broadcasted": false, "description": "Set Task Destination module function", "local": false}, "canAddItemToBackpack": {"reviewLevel": 2, "syntax": "<objUnit> canAddItemToBackpack <objItem>", "local": false, "example": "_item = \"HandGrenade\"; _fits = player canAddItemToBackpack _item; if (_fits) then { player addItemToBackpack _item; } else { hint \"no room!\"; };", "docSyntax": "unit canAddItemToBackpack item", "broadcasted": false, "description": "Checks if given object can be stored into soldier's backpack.", "server": false}, "BIS_fnc_showRespawnMenu": {"example": "[\"open\"] call BIS_fnc_showRespawnMenu; // spawn does work as well", "server": false, "broadcasted": false, "description": "Triggers the respawn screen in the given mode", "local": false}, "BIS_fnc_isCuratorEditable": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_isCuratorEditable", "local": false, "example": "[object_1] call BIS_fnc_isCuratorEditable;", "docSyntax": "[object] call BIS_fnc_isCuratorEditable", "broadcasted": false, "description": "Return true if given object is editable by player (when he's curator).", "server": false}, "BIS_fnc_setUnitInsignia": {"reviewLevel": 2, "syntax": "[<object> ,className] call BIS_fnc_setUnitInsignia", "local": false, "example": "Place insignia: [player, \"111thID\"] call BIS_fnc_setUnitInsignia;", "docSyntax": "[target , className] call BIS_fnc_setUnitInsignia", "broadcasted": false, "description": "Sets unit insignia (e.g., shoulder insignia on soldiers). See Arma 3 Unit Insignia for more details. This function is global and should work from any client. Do not remote execute", "server": false}, "isStaminaEnabled": {"reviewLevel": 2, "syntax": "isStaminaEnabled <objUnit>;", "local": false, "example": "isStaminaEnabled player;", "docSyntax": "isStaminaEnabled unit;", "broadcasted": false, "description": "Check if stamina depletion is enabled", "server": true}, "BIS_fnc_effectFiredSmokeLauncher": {"example": "", "server": false, "broadcasted": false, "description": "/*ArmA 2 smokscreen, by Maddmatt Uses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron", "local": false}, "BIS_fnc_initLeaflet": {"reviewLevel": 2, "syntax": "[mode,parameters] call BIS_fnc_initLeaflet", "local": false, "example": "[\"init\", [myLeaflet, \"#(argb,8,8,3)color(1,1,0,1)\", \"Yellow pages\"]] call BIS__fnc_initLeaflet;", "docSyntax": "[mode, parameters] call BIS_fnc_initLeaflet", "broadcasted": false, "description": "Initialize interactive leaflet.", "server": false}, "waypointForceBehaviour": {"reviewLevel": 2, "syntax": "waypointForceBehaviour waypoint;", "local": false, "example": "_isForced = waypointForceBehaviour [groupOne, 1];", "docSyntax": "waypointForceBehaviour waypoint;", "broadcasted": false, "description": "Returns true if the waypoint behavior is forced.", "server": false}, "BIS_fnc_moduleArsenal": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_StrategicMapOpen": {"reviewLevel": 2, "syntax": "[<uiDisplay>,<array>,missions,ORBATs,markers,images,weather,night,<scalar>,simulation,label,missionName,missionIcon] call BIS_fnc_StrategicMapOpen", "local": false, "example": "[ findDisplay 46, [2000,2000,0], [ [ [2000,2000,0], {systemChat format [\"%1\",name ((_this # 9) # 0)]}, \"1st Mission\", \"This is mission one\", \"Name of mission's player\", \"\\A3\\Data_F_Exp\\Logos\\arma3_exp_icon_ca.paa\", 1.5, [ player ] ], [ [1000,1000,0], {systemChat format [\"%1\",name ((_this # 9) # 0)]}, \"2nd Mission\", \"This is mission two\", \"Name of mission's player\", \"\\A3\\Data_F_Argo\\Logos\\arma3_argo_logoTitle_ca.paa\", 1.5, [ player ] ] ], [ [ [3000,3000,0], configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1\", [], 10 ] ], [ \"marker_1\", \"marker_2\" ], [ [ \"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\", [0,0,0,1], [4000,4000,0], 8, 8, 0, \"Arma 3 Logo\", true ] ], 0, false, 1, true, \"Strategic Map Example\", false, \"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\" ] call BIS_fnc_StrategicMapOpen;", "docSyntax": "[display,pos,missions,ORBATs,markers,images,weather,night,scale,simulation,label,missionName,missionIcon] call BIS_fnc_StrategicMapOpen", "broadcasted": false, "description": "Creates a strategic map.", "server": false}, "handgunWeapon": {"reviewLevel": 2, "syntax": "handgunWeapon <objUnit>", "local": false, "example": "hint handgunWeapon player; //\"hgun_P07_F\"", "docSyntax": "handgunWeapon unit", "broadcasted": false, "description": "Returns the name of a unit's handgun (an empty string if there is none).", "server": true}, "BIS_fnc_setCuratorCamera": {"reviewLevel": 2, "syntax": "[camPos,targetPos,<scalar>] spawn BIS_fnc_setCuratorCamera", "local": false, "example": "[nil,player,5] spawn BIS_fnc_setCuratorCamera;", "docSyntax": "[camPos,targetPos,time] spawn BIS_fnc_setCuratorCamera", "broadcasted": false, "description": "Move curator camera to a position and direction. Finished when animation ends.", "server": false}, "BIS_fnc_advHintCall": {"returns": "void", "reviewLevel": 4, "syntax": "<string> call BIS_fnc_advHintCall", "local": false, "example": "false call BIS_fnc_advHintCall;", "docSyntax": "fullTextcall call BIS_fnc_advHintCall", "broadcasted": false, "description": "Advanced hint call, creates hint itself.", "server": false}, "markAsFinishedOnSteam": {"reviewLevel": 2, "syntax": "markAsFinishedOnSteam", "local": false, "example": "markAsFinishedOnSteam; endMission \"END1\";", "docSyntax": "markAsFinishedOnSteam", "broadcasted": false, "description": "Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.", "server": false}, "BIS_fnc_didJIP": {"reviewLevel": 2, "syntax": "[] call BIS_fnc_didJIP", "local": false, "example": "if ([] call BIS_fnc_didJIP) then { forceRespawn player };", "docSyntax": "[] call BIS_fnc_didJIP", "broadcasted": false, "description": "Return whether or not the local player joined the game while it was already in progress.", "server": false}, "environmentEnabled": {"reviewLevel": 2, "syntax": "environmentEnabled", "local": false, "example": "_enabled = environmentEnabled;", "docSyntax": "environmentEnabled", "broadcasted": false, "description": "Returns status of enableEnvironment command", "server": false}, "enablePersonTurret": {"reviewLevel": 2, "syntax": "<objVehicle> enablePersonTurret [turretPath,<bool>]", "local": false, "example": "heli enablePersonTurret [[1],true];", "docSyntax": "vehicle enablePersonTurret [turretPath, enable]", "broadcasted": false, "description": "Enables or disables firing from a vehicle cargo position. To get the turret path use assignedVehicleRole or getCargoIndex command.", "server": false}, "Dynamic_Groups": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_moduleAmmo": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "getRepairCargo": {"reviewLevel": 2, "syntax": "getRepairCargo <objVehicle>", "local": false, "example": "value = getRepairCargo vehicleName;", "docSyntax": "getRepairCargo vehicle", "broadcasted": false, "description": "Returns the amount of repair resources from empty (0) to full (1) in the cargo space of a repair vehicle.", "server": true}, "allPlayers": {"reviewLevel": 2, "syntax": "allPlayers", "local": false, "example": "{ systemChat format [ \"Player\u00c2\u00a0%1 is\u00c2\u00a0%2\", name _x, [\"dead\", \"alive\"] select alive _x ]; } forEach allPlayers;", "docSyntax": "allPlayers", "broadcasted": false, "description": "Returns a list of all human players including dead players. The command also returns all connected headless clients. To filter headless clients out: _justPlayers = allPlayers - entities \"HeadlessClient_F\"; NOTES:", "server": false}, "BIS_fnc_sortBy": {"reviewLevel": 2, "syntax": "[<array>,parameters,algorithm,direction,filter] call BIS_fnc_sortBy", "local": false, "example": "// sort numbers from lowest to highest _sortedNumbers = [[1,-80,0,480,15,-40], [], {_x}, \"ASCEND\"] call BIS_fnc_sortBy;", "docSyntax": "[array, parameters, algorithm, direction, filter] call BIS_fnc_sortBy", "broadcasted": false, "description": "Sorts an array according to given algorithm. See sort for simple sorts.", "server": false}, "BIS_fnc_filterString": {"reviewLevel": 2, "syntax": "[ <string>,filter ] call BIS_fnc_filterString;", "local": false, "example": "[\"Player 1 @%!@$\"] call BIS_fnc_filterString; Returns \"Player1\"", "docSyntax": "[ text, filter ] call BIS_fnc_filterString;", "broadcasted": false, "description": "Removes characters from a string based on the list of allowed characters.", "server": false}, "getMass": {"reviewLevel": 2, "syntax": "getMass <object>", "local": false, "example": "_mass = getMass _myCar", "docSyntax": "getMass object", "broadcasted": false, "description": "Returns mass of a PhysX object.", "server": true}, "BIS_fnc_simpleObjectData": {"reviewLevel": 2, "syntax": "[classname] call BIS_fnc_simpleObjectData", "local": false, "example": "[\"B_Boat_Armed_01_minigun_F\"] call BIS_fnc_simpleObjectData;", "docSyntax": "[classname] call BIS_fnc_simpleObjectData", "broadcasted": false, "description": "Get complete data needed for simple object creation.", "server": false}, "BIS_fnc_moduleUnlockObject": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_moduleMPTypeSeize": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "magazinesDetailVest": {"reviewLevel": 2, "syntax": "magazinesDetailVest <objUnit>", "local": false, "example": "magazinesDetailVest player", "docSyntax": "magazinesDetailVest unit", "broadcasted": false, "description": "Returns an array with the type names of all the unit's vest magazines.", "server": false}, "get3DENCamera": {"reviewLevel": 2, "syntax": "get3DENCamera", "local": false, "example": "// set exact yaw, pitch, and roll _y = 45; _p = -80; _r = 0; get3DENCamera setVectorDirAndUp [ [ sin _y * cos _p,cos _y * cos _p,sin _p], [ [ sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D ];", "docSyntax": "get3DENCamera", "broadcasted": false, "description": "Returns the camera Object used by the Eden Editor.", "server": false}, "cursorObject": {"reviewLevel": 2, "syntax": "cursorObject", "local": false, "example": "hint str [getModelInfo cursorObject, typeOf cursorObject];", "docSyntax": "cursorObject", "broadcasted": false, "description": "Returns the object under cursor. This command is quite different from cursorTarget as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.", "server": false}, "linearConversion": {"reviewLevel": 2, "syntax": "linearConversion [minFrom,maxFrom,<scalar>,minTo,maxTo,clip]", "local": false, "example": "linearConversion [4, 8, 5, 0, 1, false];", "docSyntax": "linearConversion [minFrom, maxFrom, value, minTo, maxTo, clip]", "broadcasted": false, "description": "Converts given value from given \"from\" range to wanted \"to\" range. If clipping is set to true, the resulting value is guaranteed to be within \"to\" range no matter what.", "server": false}, "BIS_fnc_establishingShot": {"reviewLevel": 2, "syntax": "[<object>,<string>,<scalar>,radius,angle,<array>,iconOptions,mode,fadeIn,waitTime] spawn BIS_fnc_establishingShot", "local": false, "example": "[player, \"I can see my house from here\", 500, 250, 75, 1, [], 0, true] spawn BIS_fnc_establishingShot", "docSyntax": "[target, text, altitude, radius, angle, rotation, iconOptions, mode, fadeIn,waitTime] spawn BIS_fnc_establishingShot", "broadcasted": false, "description": "Play a fake UAV observational sequence which serves as an establishing shot.", "server": false}, "BIS_fnc_diagRadio": {"reviewLevel": 2, "syntax": "call BIS_fnc_diagRadio;", "local": false, "example": "call BIS_fnc_diagRadio;", "docSyntax": "call BIS_fnc_diagRadio;", "broadcasted": false, "description": "Tracks played radio sentences.", "server": false}, "sideEmpty": {"reviewLevel": 2, "syntax": "sideEmpty", "local": false, "example": "_sideEmpty = sideEmpty;", "docSyntax": "sideEmpty", "broadcasted": false, "description": "Returns empty side, for example static buildings in Eden Editor.", "server": false}, "isSteamMission": {"reviewLevel": 2, "syntax": "isSteamMission", "local": false, "example": "if (isSteamMission) then { hint \"Thank you for subscribing to my mission on Steam!\"; } else { hint \"Thank you for downloading my mission off the Internet!\"; };", "docSyntax": "isSteamMission", "broadcasted": false, "description": "Returns true if the current mission is a Steam Workshop mission.", "server": false}, "hmd": {"reviewLevel": 2, "syntax": "hmd <objUnit>", "local": false, "example": "_nvgs = hmd player; //NVGoggles", "docSyntax": "hmd unit", "broadcasted": false, "description": "Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.", "server": true}, "loadVest": {"reviewLevel": 2, "syntax": "loadVest <objUnit>", "local": false, "example": "_weight = loadVest player", "docSyntax": "loadVest unit", "broadcasted": false, "description": "Returns current sum of mass from items stored in a vest.", "server": false}, "BIS_fnc_moduleRespawnInventory": {"example": "", "server": false, "broadcasted": false, "description": "Set respawn loadouts a curator can assign to players Parameter(s): 0: OBJECT - curator logic 1: BOOL - true to make all loadouts availale, false to base them on units the curator can place Returns: BOOL", "local": false}, "BIS_fnc_spawn": {"reviewLevel": 2, "syntax": "[<any>,<code>] spawn BIS_fnc_spawn;", "local": false, "example": "Show a message for the current player. [[\"Hello\"], {hint (_this select 0);}] spawn BIS_fnc_spawn;", "docSyntax": "[params, code] spawn BIS_fnc_spawn;", "broadcasted": false, "description": "Execute given code with or without parameter.", "server": false}, "pixelH": {"reviewLevel": 2, "syntax": "pixelH", "local": false, "example": "_pixelHeight = pixelH;", "docSyntax": "pixelH", "broadcasted": false, "description": "Returns the height of one pixel for current resolution.", "server": false}, "BIS_fnc_returnChildren": {"reviewLevel": 2, "syntax": "[config,depth,lastTier,firstTier]] call BIS_fnc_returnChildren", "local": false, "example": "[ configFile >> \"CfgFunctions\", 0, false, false ] call BIS_fnc_returnChildren;", "docSyntax": "[config,depth,lastTier,firstTier]] call BIS_fnc_returnChildren", "broadcasted": false, "description": "Returns all subclasses within given class.", "server": false}, "lineIntersectsSurfaces": {"reviewLevel": 2, "syntax": "lineIntersectsSurfaces [begPosASL,endPosASL,ignoreObj1,ignoreObj2,sortMode,maxResults,LOD1,LOD2,returnUnique]", "local": false, "example": "_intersections = lineIntersectsSurfaces [eyePos player, aimPos chopper, player, chopper, true, -1];", "docSyntax": "lineIntersectsSurfaces [begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2, returnUnique]", "broadcasted": false, "description": "Returns list of intersections with surfaces from begPosASL to endPosASL. If there is ground intersection, it is also included. Works on units. Works underwater. Doesn't return intersection with sea surface. Hardcoded max distance: 5000m. By default, for speed purposes, command will return only 1st intersection with unique objects. Since Arma 3 v1.69.140138, this could be tweaked with an optional param. NOTE: if begPosASL is under the ground and endPosASL is above it, the command will only return intersection with the ground, this is engine limitation and none of the intersectXXX commands will work when initiated from under the ground.", "server": true}, "BIS_fnc_addCuratorIcon": {"reviewLevel": 2, "syntax": "[<object>,iconParams,<objMap>,3D] call BIS_fnc_addCuratorIcon", "local": false, "example": "[ curatorModule, [\"targetIcon.paa\", [1,1,1,1], position player, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"], false ] call BIS_fnc_addCuratorIcon;", "docSyntax": "[object, iconParams, map, 3D] call BIS_fnc_addCuratorIcon", "broadcasted": false, "description": "Add an icon displayed in curator interface.", "server": false}, "tvSetValue": {"reviewLevel": 2, "syntax": "tvSetValue [<scalar>,[path],val]", "local": true, "example": "tvSetValue [101, [0], 555];", "docSyntax": "tvSetValue [idc, [path], val]", "broadcasted": false, "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer", "server": false}, "BIS_fnc_moduleAI": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "magazinesDetail": {"reviewLevel": 2, "syntax": "magazinesDetail <objVehicle>", "local": false, "example": "_magazinesDetail = magazinesDetail player; /* [ \"6.5mm 30Rnd STANAG Mag(30/30)[id:3]\", \"6.5mm 30Rnd STANAG Mag(30/30)[id:9]\", \"9mm 16Rnd Mag(16/16)[id:12]\", \"Smoke Grenade (Green)(1/1)[id:14]\", \"Chemlight (Green)(1/1)[id:16]\", \"RGO Frag Grenade(1/1)[id:18]\" ]", "docSyntax": "magazinesDetail vehicle", "broadcasted": false, "description": "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids. When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine.", "server": false}, "BIS_fnc_loadEntry": {"reviewLevel": 2, "syntax": "[path,defaultConfig] call BIS_fnc_loadEntry", "local": false, "example": "[ [\"CfgWeapons\",\"hgun_Rook40_snds_F\",\"bullet3\"], configfile >> \"CfgWeapons\" >> \"hgun_Rook40_snds_F\" >> \"baseWeapon\" ] call BIS_fnc_loadEntry;", "docSyntax": "[path,defaultConfig] call BIS_fnc_loadEntry", "broadcasted": false, "description": "Searches for config entry in mission, campaign and then in global config file.", "server": false}, "AGLToASL": {"reviewLevel": 1, "syntax": "AGLToASL posAGL", "local": false, "example": "_playerPosASL = AGLToASL (player modelToWorld [0,0,0]);", "docSyntax": "AGLToASL posAGL", "broadcasted": false, "description": "Converts position from PositionAGL to PositionASL", "server": false}, "params": {"reviewLevel": 2, "syntax": "<any> [element1,element2,...elementN]", "local": false, "example": "[1, 2, 3] call { private [\"_one\", \"_two\", \"_three\"]; _one = _this select 0; _two = _this select 1; _three = _this select 2; // ..... }; // Same as above, only using params [1, 2, 3] call { params [\"_one\", \"_two\", \"_three\"]; // ..... };", "docSyntax": "params [element1, element2,...elementN]", "broadcasted": false, "description": "Parses input argument into array of private variables. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument.", "server": false}, "BIS_fnc_drawCuratorDeaths": {"reviewLevel": 2, "syntax": "[<objUnit>] call BIS_fnc_drawCuratorDeaths", "local": false, "example": "player call BIS_fnc_drawCuratorDeaths;", "docSyntax": "[unit] call BIS_fnc_drawCuratorDeaths", "broadcasted": false, "description": "Show skull unit for curator when the unit dies.", "server": false}, "configProperties": {"reviewLevel": 2, "syntax": "configProperties [config,condition,inherit]", "local": false, "example": "_configs = configProperties [configFile >> \"CfgVehicles\" >> \"O_Truck_02_box_F\"];", "docSyntax": "configProperties [config, condition, inherit]", "broadcasted": false, "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry. If 3rd param is true the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at property to be added to the resulting array. A bit slower than configClasses but allows to access inherited entires.", "server": false}, "ctData": {"reviewLevel": 2, "syntax": "<uiControl> ctData <scalar>", "local": true, "example": "ctData _control;", "docSyntax": "ctrl ctData row", "broadcasted": false, "description": "Returns metadata (string) associated with a particular row of RscControlsTable.", "server": false}, "BIS_fnc_updatePlayerArray": {"reviewLevel": 2, "syntax": "[input] call BIS_fnc_updatePlayerArray", "local": false, "example": "_newPlayerObjects = _oldPlayerObjects call BIS_fnc_updatePlayerArray;", "docSyntax": "[input] call BIS_fnc_updatePlayerArray", "broadcasted": false, "description": "Updates dead player objects to their current respawned objects.", "server": false}, "get3DENMouseOver": {"reviewLevel": 2, "syntax": "get3DENMouseOver", "local": false, "example": "systemChat str get3DENMouseOver;// returns: [\"Object\",B Alpha 1-1:1]", "docSyntax": "get3DENMouseOver", "broadcasted": false, "description": "Returns the Eden Entity the mouse is hovering over in Eden Editor.", "server": false}, "BIS_fnc_moduleRating": {"reviewLevel": 2, "syntax": "[logic,units,activated] call BIS_fnc_moduleRating;", "local": false, "example": "[myLogic, units group player, true] call BIS_fnc_moduleRating;", "docSyntax": "[logic, units, activated] call BIS_fnc_moduleRating;", "broadcasted": false, "description": "Function used by the Rating module.", "server": false}, "BIS_fnc_curatorObjectRegisteredTable": {"reviewLevel": 2, "syntax": "[curatorLogic,[className,cost,className,cost...]] call BIS_fnc_curatorObjectRegisteredTable;", "local": false, "example": "// Nothing but the listed flare modules will show up in the curator's unit list", "docSyntax": "[curatorLogic, [className, cost, className, cost...]] call BIS_fnc_curatorObjectRegisteredTable;", "broadcasted": false, "description": "Register curator object costs from a table.", "server": false}, "waypointName": {"reviewLevel": 1, "syntax": "waypointName waypoint", "local": false, "example": "_wpName = waypointName [_grp,2];", "docSyntax": "waypointName waypoint", "broadcasted": false, "description": "Gets the waypoint name.", "server": false}, "BIS_fnc_effectFiredRifle": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_arrayShuffle": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_arrayShuffle", "local": false, "example": "[1,2,3] call BIS_fnc_arrayShuffle; // can return [1,2,3], [3,1,2], [2,3,1], [1,3,2], [2,1,3] or [3,2,1]", "docSyntax": "array call BIS_fnc_arrayShuffle", "broadcasted": false, "description": "Return a new array with randomized order of elements from input array.", "server": false}, "BIS_fnc_moduleCuratorAddIcon": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "enableVehicleSensor": {"reviewLevel": 2, "syntax": "<objVehicle> enableVehicleSensor [componentName,state]", "local": false, "example": "vehicle player enableVehicleSensor [\"PassiveRadarSensorComponent\",false]; // disables passive radar", "docSyntax": "vehicle enableVehicleSensor [componentName, state]", "broadcasted": false, "description": "Enable/disable given sensor", "server": false}, "endl": {"reviewLevel": 2, "syntax": "endl", "local": false, "example": "diag_log (\"line1\" + endl + \"line2\");", "docSyntax": "endl", "broadcasted": false, "description": "Creates a string containing a line break, similar to lineBreak for text. The name is inspired by c++ std::endl (line end). The command returns \"\\r\\n\", which contains control characters rather than printable characters:", "server": false}, "setVehicleReceiveRemoteTargets": {"reviewLevel": 2, "syntax": "<objVehicle> setVehicleReceiveRemoteTargets <bool>", "local": false, "example": "(vehicle player) setVehicleReceiveRemoteTargets true;", "docSyntax": "vehicle setVehicleReceiveRemoteTargets bool", "broadcasted": false, "description": "Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the Side center.", "server": false}, "getMissionDLCs": {"reviewLevel": 2, "syntax": "getMissionDLCs", "local": false, "example": "_list = getMissionDLCs", "docSyntax": "getMissionDLCs", "broadcasted": false, "description": "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and doesn't detect units created by scripts!", "server": false}, "setCuratorCameraAreaCeiling": {"reviewLevel": 1, "syntax": "<objCurator> setCuratorCameraAreaCeiling height", "local": false, "example": "myCurator setCuratorCameraAreaCeiling 50;", "docSyntax": "curatorObj setCuratorCameraAreaCeiling height", "broadcasted": false, "description": "Sets maximal height to which curator camera can move.", "server": false}, "BIS_fnc_moduleTrident": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_addToPairs": {"reviewLevel": 2, "syntax": "<array> = [_pairs:<array>,_key:<string>,_value:<scalar>,_copyArray:<bool>] call BIS_fnc_addToPairs;", "local": false, "example": "[[\"apple\",1],[\"pear\",2]] = [[[\"apple\",3],[\"pear\",2]],\"apple\",-2] call BIS_fnc_addToPairs;", "docSyntax": "array = [_pairs:array,_key:string,_value:number,_copyArray:bool] call BIS_fnc_addToPairs;", "broadcasted": false, "description": "Adds given value to pair array, stored under unique key.", "server": false}, "BIS_fnc_areFriendly": {"reviewLevel": 2, "syntax": "[side1,side2] call BIS_fnc_areFriendly", "local": false, "example": "_areFriendly = [west, east] call BIS_fnc_areFriendly;", "docSyntax": "[side1, side2] call BIS_fnc_areFriendly", "broadcasted": false, "description": "Function that takes two Sides and compares them, returning whether they are friendly or not.", "server": false}, "isSprintAllowed": {"reviewLevel": 2, "syntax": "isSprintAllowed <objUnit>", "local": false, "example": "isSprintAllowed player;", "docSyntax": "isSprintAllowed unit", "broadcasted": false, "description": "Returns true if player is allowed to sprint", "server": false}, "BIS_fnc_missionTasksLocal": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "simulCloudOcclusion": {"reviewLevel": 2, "syntax": "simulCloudOcclusion [pos1,pos2]", "local": false, "example": "canSeeSun = (simulCloudOcclusion == 0)", "docSyntax": "simulCloudOcclusion [pos1,pos2]", "broadcasted": false, "description": "Returns clouds occlusion between two given points (0 - no clouds, 1 - full clouds).", "server": false}, "BIS_fnc_taskState": {"reviewLevel": 1, "syntax": "taskID call BIS_fnc_taskState", "local": false, "example": "\"task_1\" call BIS_fnc_taskState;", "docSyntax": "taskID call BIS_fnc_taskState", "broadcasted": false, "description": "Returns task's state.", "server": false}, "BIS_fnc_MP": {"reviewLevel": 2, "syntax": "[<any>,functionName,<object>,isPersistent,isCall] call BIS_fnc_MP;", "local": false, "example": "// Logs a message for every player on the server. [\"Imma spamming your log!\",\"BIS_fnc_log\"] call BIS_fnc_MP;", "docSyntax": "[params, functionName, target, isPersistent, isCall] call BIS_fnc_MP;", "broadcasted": false, "description": "Send function for remote execution (and executes locally if conditions are met).", "server": false}, "enableAimPrecision": {"reviewLevel": 2, "syntax": "<objUnit> enableAimPrecision <bool>", "local": false, "example": "player enableAimPrecision false;", "docSyntax": "unit enableAimPrecision enable", "broadcasted": false, "description": "Set whether animation's aim precision affects weapon sway.", "server": false}, "BIS_fnc_netId": {"reviewLevel": 1, "syntax": "objOrGrp call BIS_fnc_netId;", "local": false, "example": "_objNetId = player call BIS_fnc_netId; // \"0:2\"", "docSyntax": "objOrGrp call BIS_fnc_netId;", "broadcasted": false, "description": "Extends MP-only netId functionality to SP", "server": false}, "BIS_fnc_fixDate": {"reviewLevel": 1, "syntax": "date call BIS_fnc_fixDate", "local": false, "example": "_fixedDate = [2033,-2,89,25,75] call BIS_fnc_fixDate;", "docSyntax": "date call BIS_fnc_fixDate", "broadcasted": false, "description": "Checks the array with date data and makes sure, the values are within the boundries.", "server": false}, "modelToWorldVisualWorld": {"reviewLevel": 1, "syntax": "<object> modelToWorldVisualWorld modelPos", "local": false, "example": "player modelToWorldVisualWorld [0,1,0]", "docSyntax": "obj modelToWorldVisualWorld modelPos", "broadcasted": false, "description": "Converts position from object model space to world space in render time.", "server": false}, "backpackItems": {"reviewLevel": 2, "syntax": "backpackItems <objUnit>", "local": false, "example": "backpackItems player;", "docSyntax": "backpackItems unit", "broadcasted": false, "description": "Get array with all items (of any kind, even weapons) in backpack of the given unit.", "server": false}, "BIS_fnc_sortAlphabetically": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_sortAlphabetically", "local": false, "example": "_sortedNames = [\"John\", \"Jane\", \"Julia\", \"Geronimo\"] call BIS_fnc_sortAlphabetically; // will return [\"Geronimo\", \"Jane\", \"John\", \"Julia\"]", "docSyntax": "array call BIS_fnc_sortAlphabetically", "broadcasted": false, "description": "Alphabetically sort an array of strings without modifying the original. See also sort.", "server": false}, "BIS_fnc_effectFiredRocket": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setPilotCameraDirection": {"reviewLevel": 2, "syntax": "<object> setPilotCameraDirection Vector3D", "local": true, "example": "vehicle player setPilotCameraDirection [0,1,0] //re-centers the camera", "docSyntax": "object setPilotCameraDirection Vector3D", "broadcasted": false, "description": "Sets the direction of object airplane or helicopter pilotCamera (vector in model space).", "server": false}, "BIS_fnc_moduleDiary": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "set3DENLinesVisible": {"reviewLevel": 2, "syntax": "set3DENLinesVisible [showMap,showScene]", "local": false, "example": "set3DENLinesVisible [ false, false ]; Hide all lines", "docSyntax": "set3DENLinesVisible [showMap, showScene]", "broadcasted": false, "description": "Toggle visibility of Eden Editor lines.", "server": false}, "isInstructorFigureEnabled": {"reviewLevel": 2, "syntax": "isInstructorFigureEnabled", "local": false, "example": "hint str isInstructorFigureEnabled;", "docSyntax": "isInstructorFigureEnabled", "broadcasted": false, "description": "Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).", "server": false}, "BIS_fnc_createSimpleObject": {"reviewLevel": 2, "syntax": "[input,position,direction,followTerrain,forceSuperSimpleObject] call BIS_fnc_createSimpleObject", "local": false, "example": "[\"B_Boat_Armed_01_minigun_F\", getPosWorld player, getDir player] call BIS_fnc_createSimpleObject;", "docSyntax": "[input, position, direction, followTerrain, forceSuperSimpleObject] call BIS_fnc_createSimpleObject", "broadcasted": false, "description": "Creates non-simulated framerate and network performance friendly object - a simple object - and applies different adjustments to fake non-existing physX and engine interactions. The adjustments need either to be stored in the object config or provided as the function input, otherwise they need to be done manually.", "server": false}, "primaryWeaponItems": {"reviewLevel": 2, "syntax": "primaryWeaponItems <objUnit>", "local": false, "example": "primaryWeaponItems player; /* [ \"muzzle_snds_H\", //silencer \"acc_pointer_IR\", //laser \"optic_Aco\", //optics \"bipod_01_F_blk\" //bipod ]", "docSyntax": "primaryWeaponItems unit", "broadcasted": false, "description": "Returns array with all items assigned to the primary weapon. This command is used for infantry weapons only.", "server": false}, "removeGoggles": {"reviewLevel": 2, "syntax": "removeGoggles <objUnit>", "local": false, "example": "removeGoggles assaultDiver;", "docSyntax": "removeGoggles unit", "broadcasted": true, "description": "Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use unassignItem and removeItem or just unlinkItem for latter.", "server": true}, "BIS_fnc_getCfgDataBool": {"reviewLevel": 1, "syntax": "config call BIS_fnc_getCfgDataBool", "local": false, "example": "_value = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataBool;", "docSyntax": "config call BIS_fnc_getCfgDataBool", "broadcasted": false, "description": "Gets a number defined in config]] and retype it into a boolean. Everything bigger then 0 is true, otherwise it's false.", "server": false}, "BIS_fnc_moveToRespawnPosition": {"reviewLevel": 2, "syntax": "[<objUnit>,position,canBeDead] call BIS_fnc_moveToRespawnPosition", "local": false, "example": "[player, \"SpawnMarker1\"] call BIS_fnc_moveToRespawnPosition;", "docSyntax": "[unit, position, canBeDead] call BIS_fnc_moveToRespawnPosition", "broadcasted": false, "description": "Move given unit to given respawn position. Units moved to height >= 30m will start on parachute. Position [0,0,0] is blacklisted. This function must be executed where unit to be moved is local", "server": false}, "dynamicSimulationSystemEnabled": {"reviewLevel": 2, "syntax": "dynamicSimulationSystemEnabled", "local": false, "example": "hint str dynamicSimulationSystemEnabled;", "docSyntax": "dynamicSimulationSystemEnabled", "broadcasted": false, "description": "A getter for enableDynamicSimulationSystem", "server": false}, "waypointLoiterRadius": {"reviewLevel": 1, "syntax": "waypointLoiterRadius Waypoint", "local": false, "example": "_radius = waypointLoiterRadius [groupOne, 1];", "docSyntax": "waypointLoiterRadius Waypoint", "broadcasted": false, "description": "Gets the waypoint loiter radius. Waypoint uses format Waypoint.", "server": false}, "Arma_3_Revive": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_incapacitatedEffect": {"reviewLevel": 2, "syntax": "call BIS_fnc_incapacitatedEffect", "local": false, "example": "call BIS_fnc_incapacitatedEffect;", "docSyntax": "call BIS_fnc_incapacitatedEffect", "broadcasted": false, "description": "A draft of incapacitated effects function.", "server": false}, "triggerTimeoutCurrent": {"reviewLevel": 2, "syntax": "triggerTimeoutCurrent <objTrigger>", "local": false, "example": "_remaining = triggerTimeoutCurrent _trigger;", "docSyntax": "triggerTimeoutCurrent trigger", "broadcasted": false, "description": "Returns current timeout of the given trigger or -1 if countdown is not in progress.", "server": true}, "cbSetChecked": {"reviewLevel": 1, "syntax": "<uiControl> cbSetChecked state", "local": false, "example": "_myCheckBox cbSetChecked true;", "docSyntax": "control cbSetChecked state", "broadcasted": false, "description": "Sets the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control). Use \"CheckedChanged\" control event handler with it.", "server": false}, "BIS_fnc_liveFeed": {"reviewLevel": 2, "syntax": "[source,<object>,receiver,effect] call BIS_fnc_liveFeed", "local": false, "example": "[myUAV, player, player, 2] call BIS_fnc_liveFeed;", "docSyntax": "[source, target, receiver, effect] call BIS_fnc_liveFeed", "broadcasted": false, "description": "Display a live feed.", "server": false}, "taskCustomData": {"reviewLevel": 2, "syntax": "taskCustomData <objTask>", "local": false, "example": "_data = taskCustomData \"someTask\";", "docSyntax": "taskCustomData task", "broadcasted": false, "description": "Returns custom data attached to the local task or an empty array if there are no custom data attached.", "server": false}, "BIS_fnc_traceBullets": {"reviewLevel": 2, "syntax": "[<objUnit>,<scalar>] call BIS_fnc_traceBullets", "local": false, "example": "[player] spawn BIS_fnc_traceBullets;", "docSyntax": "[unit, number] call BIS_fnc_traceBullets", "broadcasted": false, "description": "Visualise unit's bullet trajectories. Can only be used on one shooter in a single instance.", "server": false}, "setStatValue": {"reviewLevel": 2, "syntax": "setStatValue [<string>,<scalar>]", "local": false, "example": "setStatValue [\"ExpWarlockDown\", 1]; //Unlocks the \"Warlock Down\" Steam achivement", "docSyntax": "setStatValue [name, value]", "broadcasted": false, "description": "Sets a value to a given stat.", "server": false}, "BIS_fnc_mirrorCuratorSettings": {"reviewLevel": 2, "syntax": "[from,to,modes,shareType] call BIS_fnc_mirrorCuratorSettings", "local": false, "example": "[ [curator_1,curator_2], [curator_3,curator_4], [\"addons\",\"objects\",\"coefs\"] ] call BIS_fnc_mirrorCuratorSettings;", "docSyntax": "[from,to,modes,shareType] call BIS_fnc_mirrorCuratorSettings", "broadcasted": false, "description": "Mirrors settings from one curator to another.", "server": false}, "BIS_fnc_ORBATOpen": {"reviewLevel": 2, "syntax": "[path,<uiDisplay>,tags,numTiers,parameters] call BIS_fnc_ORBATOpen", "local": false, "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\",findDisplay 46, [], 4, [\"ConfigClass_1\",{systemChat \"ConfigClass_1\"}] ] call BIS_fnc_ORBATOpen;", "docSyntax": "[path, display, tags, numTiers, parameters] call BIS_fnc_ORBATOpen", "broadcasted": false, "description": "Opens the ORBAT Viewer.", "server": false}, "groupId": {"reviewLevel": 2, "syntax": "groupId <objGroup>", "local": false, "example": "_name = groupId (group player);", "docSyntax": "groupId group", "broadcasted": false, "description": "Returns group name.", "server": true}, "BIS_fnc_taskExists": {"reviewLevel": 2, "syntax": "[<string>] call BIS_fnc_taskExists", "local": false, "example": "_exists = [\"MyTask\"] call BIS_fnc_taskExists;", "docSyntax": "[taskName] call BIS_fnc_taskExists", "broadcasted": false, "description": "Return true if a task exists.", "server": false}, "allMapMarkers": {"reviewLevel": 2, "syntax": "allMapMarkers", "local": false, "example": "_markers = allMapMarkers; returns: [\"marker1\",\"_USER_DEFINED #2/0\"]", "docSyntax": "allMapMarkers", "broadcasted": false, "description": "Return all markers in map including user placed markers (_USER_DEFINED #).", "server": false}, "BIS_fnc_mapSize": {"reviewLevel": 1, "syntax": "terrainName call BIS_fnc_mapSize", "local": false, "example": "\"Altis\" call BIS_fnc_mapSize;", "docSyntax": "terrainName call BIS_fnc_mapSize", "broadcasted": false, "description": "Returns map size.", "server": false}, "modelToWorldWorld": {"reviewLevel": 1, "syntax": "<object> modelToWorldWorld modelPos", "local": false, "example": "player modelToWorldWorld [0,1,0]", "docSyntax": "obj modelToWorldWorld modelPos", "broadcasted": false, "description": "Converts position from object model space to world space (usable by setPosWorld for example).", "server": false}, "shownChat": {"reviewLevel": 2, "syntax": "shownChat", "local": false, "example": "_bool = shownChat;", "docSyntax": "shownChat", "broadcasted": false, "description": "Returns true if chat window is enabled. Chat window can be disabled with showChat command.", "server": false}, "BIS_fnc_exportCfgPatches": {"reviewLevel": 2, "syntax": "[config,classes] call BIS_fnc_exportCfgPatches", "local": false, "example": "call BIS_fnc_exportCfgPatches;", "docSyntax": "[config,classes] call BIS_fnc_exportCfgPatches", "broadcasted": false, "description": "Export list of addons for Community Wiki http://community.bistudio.com/wiki/Category:Arma_3:_Assets.", "server": false}, "BIS_fnc_holdKey": {"reviewLevel": 2, "syntax": "[<uiDisplay>,key,<scalar>,<code>,<uiControl>] call BIS_fnc_holdKey", "local": false, "example": "[findDisplay 46,36,5, {hint \"Key 'J' pressed for 5 seconds\"}] call BIS_fnc_holdKey; // Action is added to the mission display", "docSyntax": "[display, key, time, code, control] call BIS_fnc_holdKey", "broadcasted": false, "description": "Function that executes a user-defined code when a key has been held down for a long enough time.", "server": false}, "selectRandomWeighted": {"reviewLevel": 1, "syntax": "selectRandomWeighted valuesAndWeights", "local": false, "example": "_randomWeightedElement = selectRandomWeighted [1,0.1,2,0.2,3,1.3,4,2.4,5,7.5];", "docSyntax": "selectRandomWeighted valuesAndWeights", "broadcasted": false, "description": "Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted. A few notes:", "server": false}, "BIS_fnc_keyCode": {"reviewLevel": 1, "syntax": "input call BIS_fnc_keyCode", "local": false, "example": "13 call BIS_fnc_keyCode;//Returns \"EQUALS\"", "docSyntax": "input call BIS_fnc_keyCode", "broadcasted": false, "description": "Returns DIK code of a given key.", "server": false}, "ropes": {"reviewLevel": 1, "syntax": "ropes ropesOwner", "local": false, "example": "hint str (ropes vehicle player);", "docSyntax": "ropes ropesOwner", "broadcasted": false, "description": "Returns all ropes attached to a ropes owner vehicle in an Array.", "server": false}, "useAISteeringComponent": {"reviewLevel": 1, "syntax": "useAISteeringComponent state", "local": false, "example": "useAISteeringComponent true", "docSyntax": "useAISteeringComponent state", "broadcasted": true, "description": "Enable the new AI driving, used to test the old and new AI driving.", "server": false}, "tvSortByValue": {"reviewLevel": 2, "syntax": "<uiControl> tvSortByValue [path,reversed]", "local": false, "example": "control tvSortByValue [[0], false];", "docSyntax": "control tvSortByValue [path, reversed]", "broadcasted": false, "description": "Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View.", "server": false}, "tvSort": {"reviewLevel": 2, "syntax": "<uiControl> tvSort [path,reversed]", "local": false, "example": "control tvSort [[0], true];", "docSyntax": "control tvSort [path, reversed]", "broadcasted": false, "description": "Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.", "server": false}, "setFatigue": {"reviewLevel": 2, "syntax": "<objUnit> setFatigue <scalar>", "local": false, "example": "player setFatigue 1;", "docSyntax": "unit setFatigue value", "broadcasted": false, "description": "Sets the person's fatigue, from 0 to 1.", "server": true}, "leaderboardInit": {"reviewLevel": 2, "syntax": "leaderboardInit <string>", "local": false, "example": "leaderboardInit \"TT01\"", "docSyntax": "leaderboardInit boardName", "broadcasted": false, "description": "Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.", "server": false}, "addMusicEventHandler": {"reviewLevel": 2, "syntax": "addMusicEventHandler [type,function]", "local": false, "example": "_ehID = addMusicEventHandler [\"MusicStart\", {hint str _this}];", "docSyntax": "addMusicEventHandler [type, function]", "broadcasted": false, "description": "Adds playMusic event handler. Returns id of the handler or -1 when failed. Just like addMissionEventHandler, music EH is also attached to the mission.", "server": false}, "setSimulWeatherLayers": {"reviewLevel": 1, "syntax": "setSimulWeatherLayers layers", "local": false, "example": "", "docSyntax": "setSimulWeatherLayers layers", "broadcasted": false, "description": "Sets number of simul weather layers, affects quality of simul weather clouds.", "server": false}, "getCargoIndex": {"reviewLevel": 2, "syntax": "<objVehicle> getCargoIndex <objUnit>", "local": false, "example": "player moveInCargo heli; hint str (heli getCargoIndex player);", "docSyntax": "vehicle getCargoIndex unit", "broadcasted": false, "description": "Returns index of the unit in cargo. 0,1,2... or -1 if not in cargo.", "server": true}, "getRemoteSensorsDisabled": {"reviewLevel": 2, "syntax": "getRemoteSensorsDisabled", "local": false, "example": "_status = getRemoteSensorsDisabled;", "docSyntax": "getRemoteSensorsDisabled", "broadcasted": false, "description": "Get status of disabled raycasts for remote entities. See disableRemoteSensors for detailed description.", "server": false}, "BIS_fnc_modulePostprocess": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "getPosWorld": {"reviewLevel": 2, "syntax": "getPosWorld <object>", "local": false, "example": "_obj setPosWorld getPosWorld _obj;", "docSyntax": "getPosWorld object", "broadcasted": false, "description": "Returns PositionWorld, which is PositionASL of the model centre [0,0,0] of an object, rather than transformed boundingCenter or LandContact vertices.", "server": true}, "BIS_fnc_moduleZoneRestriction": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "ropeAttachEnabled": {"reviewLevel": 2, "syntax": "ropeAttachEnabled <objVehicle>", "local": false, "example": "ropeAttachEnabled veh1;", "docSyntax": "ropeAttachEnabled vehicle", "broadcasted": false, "description": "Returns true if vehicle can be attached to ropes", "server": false}, "configSourceModList": {"reviewLevel": 1, "syntax": "configSourceModList config", "local": false, "example": "_mods = configSourceModList (configFile >> \"CfgVehicles\" >> \"Man\"); hint str _mods; // [\"A3\",\"curator\",\"heli\"]", "docSyntax": "configSourceModList config", "broadcasted": false, "description": "Returns an array of mods (CfgMods) in which the given config class is defined.", "server": false}, "getAnimSpeedCoef": {"reviewLevel": 2, "syntax": "getAnimSpeedCoef <objUnit>", "local": false, "example": "getAnimSpeedCoef player;", "docSyntax": "getAnimSpeedCoef unit", "broadcasted": false, "description": "Get coefficient for animation speed.", "server": false}, "BIS_fnc_respawnTimePenalty": {"example": "", "server": false, "broadcasted": false, "description": "Set or execute respawn time penalty Parameter(s): 0: CODE - penalty condition 1: NUMBER - penalty delay 2: TEXT - text displayed when penalty is in effect Returns: BOOL", "local": false}, "BIS_fnc_VRCourseCommandingBehaviour2": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "setWindDir": {"reviewLevel": 2, "syntax": "<scalar> setWindDir <scalar>", "local": false, "example": "60 setWindDir 180", "docSyntax": "time setWindDir value", "broadcasted": true, "description": "Changes the wind direction smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "server": false}, "createVehicleCrew": {"reviewLevel": 2, "syntax": "createVehicleCrew <objVehicle>", "local": false, "example": "_veh = createVehicle [\"B_MRAP_01_F\", getMarkerPos \"createVeh\", [], 0, \"NONE\"]; createVehicleCrew _veh;", "docSyntax": "createVehicleCrew vehicle", "broadcasted": false, "description": "Creates crew to given empty vehicle. Crew members are default crew defined in config. Crew side will also correspond to vehicle's faction.", "server": false}, "underwater": {"reviewLevel": 2, "syntax": "underwater <object>", "local": false, "example": "_isUnderwater = underwater player;", "docSyntax": "underwater object", "broadcasted": false, "description": "Return whether object is fully underwater. From Arma 3 v1.66, this also works for units.", "server": false}, "removeOwnedMine": {"reviewLevel": 1, "syntax": "<objUnit> removeOwnedMine mine", "local": false, "example": "player removeOwnedMine SuperMine;", "docSyntax": "unit removeOwnedMine mine", "broadcasted": false, "description": "Removes ownership over a remotely detonatable mine from the unit.", "server": false}, "BIS_fnc_groupVehicles": {"reviewLevel": 2, "syntax": "[<object>,assignedVeh] call BIS_fnc_groupVehicles", "local": false, "example": "[ group player, true ] call BIS_fnc_groupVehicles;", "docSyntax": "[target, assignedVeh] call BIS_fnc_groupVehicles", "broadcasted": false, "description": "Returns all vehicles a group possesses, assigned vehicles can be included.", "server": false}, "setUnitLoadout": {"reviewLevel": 1, "syntax": "<objUnit> setUnitLoadout loadout", "local": false, "example": "player_2 setUnitLoadout (getUnitLoadout player_1); // Copies loadout from player_1 and applies it to player_2", "docSyntax": "unit setUnitLoadout loadout", "broadcasted": true, "description": "Creates a loadout from given inventory structure and applies it to a unit. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:", "server": true}, "BIS_fnc_radialRedOut": {"reviewLevel": 2, "syntax": "call BIS_fnc_radialRedOut", "local": false, "example": "call BIS_fnc_radialRedOut;", "docSyntax": "call BIS_fnc_radialRedOut", "broadcasted": false, "description": "Removes red radial postprocess (fire damage) created by BIS_fnc_radialRed.", "server": false}, "isGroupDeletedWhenEmpty": {"reviewLevel": 2, "syntax": "isGroupDeletedWhenEmpty <objGroup>", "local": false, "example": "_isMarked = isGroupDeletedWhenEmpty _group;", "docSyntax": "isGroupDeletedWhenEmpty group", "broadcasted": false, "description": "Checks if the given group marked for auto-deletion when empty. See deleteGroupWhenEmpty.", "server": false}, "allControls": {"reviewLevel": 2, "syntax": "allControls <uiDisplay>", "local": false, "example": "_allCtrls = allControls findDisplay 46;", "docSyntax": "allControls display", "broadcasted": false, "description": "Returns a list of all controls for desired existing display. Returned controls also include controls from control groups", "server": false}, "BIS_fnc_moduleCombatGetIn": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "tvExpand": {"reviewLevel": 2, "syntax": "tvExpand [<scalar>,path]", "local": true, "example": "tvExpand [101, [0]];", "docSyntax": "tvExpand [idc, path]", "broadcasted": false, "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.", "server": false}, "BIS_fnc_diagKey": {"reviewLevel": 2, "syntax": "call BIS_fnc_diagKey", "local": false, "example": "call BIS_fnc_diagKey;", "docSyntax": "call BIS_fnc_diagKey", "broadcasted": false, "description": "Tracks pressed keys. (getNumber (missionConfigFile >> \"diagKey\") > 0) has to be true.", "server": false}, "BIS_fnc_VRCourseBallistics2": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "didJIPOwner": {"reviewLevel": 2, "syntax": "didJIPOwner <object>", "local": false, "example": "ownerDidJip = didJIPOwner tank;", "docSyntax": "didJIPOwner object", "broadcasted": false, "description": "Checks if the current owner of supplied Object Joined In Progress. Server execution only. On clients returns false.", "server": false}, "setObjectMaterial": {"reviewLevel": 2, "syntax": "<object> setObjectMaterial [selectionNumber,material]", "local": false, "example": "_vehicle setObjectMaterial [0,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];", "docSyntax": "obj setObjectMaterial [selectionNumber, material]", "broadcasted": false, "description": "Sets material of object selection. The selection number is defined through the hiddenselection[]={} array in the vehicle's config (starting with 0).", "server": true}, "BIS_fnc_enemyTargets": {"reviewLevel": 2, "syntax": "<objUnit> call BIS_fnc_enemyTargets", "local": false, "example": "_targets = _unit call BIS_fnc_enemyTargets;", "docSyntax": "unit call BIS_fnc_enemyTargets", "broadcasted": false, "description": "Return list of nearby enemy targets for given unit.", "server": false}, "BIS_fnc_liveFeedModuleSetTarget": {"example": "", "server": false, "broadcasted": false, "description": "Set a live feed's target via a module. Parameters: _this: OBJECT - Live Feed - Set Target module */ // On dedicated servers, player is not you", "local": false}, "setBleedingRemaining": {"reviewLevel": 2, "syntax": "<objUnit> setBleedingRemaining <scalar>", "local": false, "example": "_unit setBleedingRemaining 60;", "docSyntax": "unit setBleedingRemaining time", "broadcasted": false, "description": "Sets for how many seconds injured unit leaves blood trail. The unit damage must be >= 0.1 for this command to have an effect, otherwise, the getBleedingRemaining will return 0 and no blood trail is left behind.", "server": false}, "addMagazineAmmoCargo": {"reviewLevel": 1, "syntax": "cargospace addMagazineAmmoCargo [<string>,quantity,ammocount]", "local": false, "example": "_ammobox addMagazineAmmoCargo [\"30Rnd_65x39_caseless_mag\", 2, 5];", "docSyntax": "cargospace addMagazineAmmoCargo [magazine, quantity, ammocount]", "broadcasted": true, "description": "Adds magazines with specified ammo count to the cargo space of a vehicle or a container.", "server": true}, "parseSimpleArray": {"reviewLevel": 1, "syntax": "parseSimpleArray stringArray", "local": false, "example": "_arr = parseSimpleArray \"[1,2,3]\";", "docSyntax": "parseSimpleArray stringArray", "broadcasted": false, "description": "Converts given, formatted as simple array, String into a valid Array. Simple array is array consisting of Numbers, Strings, Booleans and Arrays of all of the above. For example: [1,\"2\",true,[4,\"five\",false]]. The string representation of this array compatible with parseSimpleArray will be \"[1,\"\"2\"\",true,[4,\"\"five\"\",false]]\" accordingly.", "server": false}, "BIS_fnc_carAlarm": {"reviewLevel": 2, "syntax": "[mode,<objVehicle>] call BIS_fnc_carAlarm", "local": false, "example": "[\"init\", myCar] call BIS_fnc_carAlarm;", "docSyntax": "[mode, car] call BIS_fnc_carAlarm", "broadcasted": false, "description": "Play car alarm effect.", "server": false}, "ctAddRow": {"reviewLevel": 2, "syntax": "<array> = ctAddRow <uiControl>", "local": true, "example": "_array = ctAddRow _control;", "docSyntax": "Array = ctAddRow Control", "broadcasted": false, "description": "Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [<rowIndex>, [<control0>, <control1>...<control n>]].", "server": false}, "BIS_fnc_VRCourseTargetDesignation1": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_getTurrets": {"reviewLevel": 2, "syntax": "[input,outputType] call BIS_fnc_getTurrets", "local": false, "example": "[ vehicle player ] call BIS_fnc_getTurrets;", "docSyntax": "[input, outputType] call BIS_fnc_getTurrets", "broadcasted": false, "description": "Return vehicle turrets.", "server": false}, "BIS_fnc_missionConversations": {"example": "", "server": false, "broadcasted": false, "description": "Header function of local mission conversations Parameter(s): 0: STRING - unique mode 1 (Optional): ANY - additional params Returns: BOOL", "local": false}, "ropeCut": {"reviewLevel": 2, "syntax": "ropeCut [rope,<scalar>]", "local": false, "example": "ropeCut [ ropes heli1 select 0, 5];", "docSyntax": "ropeCut [rope, distance]", "broadcasted": false, "description": "Cut rope and detach rope from vehicle", "server": false}, "BIS_fnc_dirtEffect": {"reviewLevel": 2, "syntax": "[<objUnit>,<scalar>] call BIS_fnc_dirtEffect", "local": false, "example": "[nil, 0.5] call BIS_fnc_dirtEffect;", "docSyntax": "[unit, damage] call BIS_fnc_dirtEffect", "broadcasted": false, "description": "Screen dirt (texture) postprocess. Displays dust PP according to damage obtained from near explosion; takes array from \"Explosion\" event handler.", "server": false}, "BIS_fnc_addVirtualItemCargo": {"reviewLevel": 2, "syntax": "[<object>,itemClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualItemCargo", "local": false, "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualItemCargo;", "docSyntax": "[object,itemClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualItemCargo", "broadcasted": false, "description": "Add virtual items to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "BIS_fnc_showNotification": {"reviewLevel": 2, "syntax": "[template,(arguments)] call BIS_fnc_showNotification;", "local": false, "example": "[\"TaskSucceeded\",[\"\",\"Disable the nuke\"]] call BIS_fnc_showNotification;", "docSyntax": "[template,(arguments)] call BIS_fnc_showNotification;", "broadcasted": false, "description": "Show Notification.", "server": false}, "BIS_fnc_spawnObjects": {"reviewLevel": 2, "syntax": "[position,className,count,offsetMatrix,offsetDir,dirNoise,enableSimulation] call BIS_fnc_spawnObjects", "local": false, "example": "_randomPos = [(random 0.2) -0.1, (random 0.2) -0.1, 0]; _objects = [[_table, \"TOP\"], \"Box_NATO_Wps_F\", 3, _randomPos,(random 20)-10] call BIS_fnc_spawnObjects;", "docSyntax": "[position, className, count, offsetMatrix, offsetDir, dirNoise, enableSimulation] call BIS_fnc_spawnObjects", "broadcasted": false, "description": "Create a stack of objects at given position or on top of given object (eg. table).", "server": false}, "shownScoretable": {"reviewLevel": 2, "syntax": "shownScoretable", "local": false, "example": "_state = shownScoretable;", "docSyntax": "shownScoretable", "broadcasted": false, "description": "Returns the state of the score table set with showScoretable command.", "server": false}, "setHorizonParallaxCoef": {"reviewLevel": 2, "syntax": "setHorizonParallaxCoef <scalar>", "local": false, "example": "setHorizonParallaxCoef 1;", "docSyntax": "setHorizonParallaxCoef coef", "broadcasted": false, "description": "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).", "server": false}, "deleteGroupWhenEmpty": {"reviewLevel": 1, "syntax": "<objGroup> deleteGroupWhenEmpty delete", "local": false, "example": "_group deleteGroupWhenEmpty true;", "docSyntax": "group deleteGroupWhenEmpty delete", "broadcasted": true, "description": "Marks given group for auto-deletion when group is empty. true will mark the group for auto-deletion, however false will only unmark the group that was marked previously. There are other engine group auto-deletion mechanisms in place, which are not affected by this.", "server": true}, "BIS_fnc_teamColor": {"reviewLevel": 2, "syntax": "[teamId,getColour] call BIS_fnc_teamColor", "local": false, "example": "[2, true] call BIS_fnc_teamColor;", "docSyntax": "[teamId, getColour] call BIS_fnc_teamColor", "broadcasted": false, "description": "Convert number to color team name or color.", "server": false}, "BIS_fnc_VRTimer": {"reviewLevel": 1, "syntax": "colour call BIS_fnc_VRTimer", "local": false, "example": "call BIS_fnc_VRTimer;", "docSyntax": "colour call BIS_fnc_VRTimer", "broadcasted": false, "description": "Timer for VR and time trials. The following variables can be used:", "server": false}, "vectorMagnitudeSqr": {"reviewLevel": 1, "syntax": "vectorMagnitudeSqr vector", "local": false, "example": "_sizeSqr = vectorMagnitudeSqr [0,3,4]; //25", "docSyntax": "vectorMagnitudeSqr vector", "broadcasted": false, "description": "Squared magnitude of a 3D vector.", "server": false}, "tvSetPicture": {"reviewLevel": 2, "syntax": "tvSetPicture [<scalar>,path,<string>]", "local": false, "example": "tvSetPicture [101, [0], \"picture\"];", "docSyntax": "tvSetPicture [idc, path, name]", "broadcasted": false, "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.", "server": false}, "BIS_fnc_ORBATConfigPreview": {"reviewLevel": 2, "syntax": "[class] call BIS_fnc_ORBATConfigPreview", "local": false, "example": "[configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\"] call BIS_fnc_ORBATConfigPreview;", "docSyntax": "[class] call BIS_fnc_ORBATConfigPreview", "broadcasted": false, "description": "Opens config viewer and shows CfgORBAT. Used to retrieve CfgOrbat data", "server": false}, "BIS_fnc_exportInventory": {"reviewLevel": 2, "syntax": "[<objUnit>,type,identity] call BIS_fnc_exportInventory", "local": false, "example": "[ player, \"init\", true ] call BIS_fnc_exportInventory;", "docSyntax": "[unit,type,identity] call BIS_fnc_exportInventory", "broadcasted": false, "description": "Export unit's loadout.", "server": false}, "getClientState": {"reviewLevel": 2, "syntax": "getClientState", "local": false, "example": "_state = getClientState;", "docSyntax": "getClientState", "broadcasted": false, "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:", "server": false}, "forceRespawn": {"reviewLevel": 2, "syntax": "forceRespawn <objUnit>", "local": true, "example": "forceRespawn player;", "docSyntax": "forceRespawn unit", "broadcasted": true, "description": "Forces unit to respawn. The effect as if the player pressed RESPAWN button in the game pause menu, the unit is killed only there is no \"so and so was killed\" message and no score adjustment.", "server": false}, "BIS_fnc_missionFlow": {"example": "", "server": false, "broadcasted": false, "description": "FSM for internal use.", "local": false}, "setUserMFDText": {"reviewLevel": 2, "syntax": "<objVehicle> setUserMFDText [<scalar>,<scalar>]", "local": false, "example": "_vehicle setUserMFDText [0, 123];", "docSyntax": "vehicle setUserMFDText [index, value]", "broadcasted": false, "description": "Stored user text value in MFD, limit is 50, user0...user49", "server": false}, "BIS_fnc_removeStackedEventHandler": {"reviewLevel": 2, "syntax": "[<scalar>,event] call BIS_fnc_removeStackedEventHandler;", "local": false, "example": "[\"someId\", \"onEachFrame\"] call BIS_fnc_removeStackedEventHandler;", "docSyntax": "[id, event] call BIS_fnc_removeStackedEventHandler;", "broadcasted": false, "description": "Removes a stacked event handler with specified custom id.", "server": false}, "diag_resetShapes": {"reviewLevel": 2, "syntax": "diag_resetShapes", "local": false, "example": "diag_resetShapes", "docSyntax": "diag_resetShapes", "broadcasted": false, "description": "Reload models on-the-fly without the need of restarting the game. Changes applied by diag_resetShapes are applied to all new entities so restart of mission is not necessarily required - spawning vehicle again or changing back forth weapon should usually do the trick. It works only with \"-FilePatching\" in combination with local data. Command will reload only models present in local data.", "server": false}, "BIS_fnc_curatorAttributes": {"example": "", "server": false, "broadcasted": false, "description": "Return attributes available for given entity Parameter(s): 0: OBJECT - curator 1: OBJECT or GROUp or ARRAY or STRING - checked entity Returns: ARRAY of STRINGs", "local": false}, "BIS_fnc_moduleFiringDrill": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_skirmishTrigger": {"example": "", "server": false, "broadcasted": false, "description": "An internally used .fsm.", "local": false}, "allowCuratorLogicIgnoreAreas": {"reviewLevel": 1, "syntax": "<objCurator> allowCuratorLogicIgnoreAreas allow", "local": false, "example": "curatorModule allowCuratorLogicIgnoreAreas true", "docSyntax": "curatorObj allowCuratorLogicIgnoreAreas allow", "broadcasted": false, "description": "Allows curator placing and working with modules outside of edit areas.", "server": false}, "exportJIPMessages": {"reviewLevel": 1, "syntax": "exportJIPMessages fileName", "local": false, "example": "exportJIPMessages \"myFileNameWithoutExtension\";", "docSyntax": "exportJIPMessages fileName", "broadcasted": false, "description": "Export list of JIP to a file.", "server": false}, "flyInHeightASL": {"reviewLevel": 1, "syntax": "aircraft flyInHeightASL <any>", "local": false, "example": "cobraOne flyInHeightASL [200, 100, 400];", "docSyntax": "aircraft flyInHeightASL params", "broadcasted": false, "description": "Sets the minimal ASL height. Final height is max(flyInHeight, flyInHeightASL).", "server": false}, "BIS_fnc_ORBATSetGroupFade": {"reviewLevel": 2, "syntax": "[path,alpha,<scalar>] call BIS_fnc_ORBATSetGroupFade", "local": false, "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 0.5, 5 ] call BIS_fnc_ORBATSetGroupFade;", "docSyntax": "[path, alpha, time] call BIS_fnc_ORBATSetGroupFade", "broadcasted": false, "description": "Set fade value of CfgORBAT group and all groups below it.", "server": false}, "BIS_fnc_paramGuerFriendly": {"reviewLevel": 2, "syntax": "<scalar> call BIS_fnc_paramGuerFriendly", "local": false, "example": "2 call BIS_fnc_paramGuerFriendly;", "docSyntax": "number call BIS_fnc_paramGuerFriendly", "broadcasted": false, "description": "Set relationship between Independents and remaining sides.", "server": false}, "BIS_fnc_endMissionServer": {"reviewLevel": 1, "syntax": "endType call BIS_fnc_endMissionServer", "local": false, "example": "\"SideScore\" call BIS_fnc_endMissionServer;", "docSyntax": "endType call BIS_fnc_endMissionServer", "broadcasted": false, "description": "Ends the mission properly for all players in a multiplayer environment.", "server": false}, "BIS_fnc_moduleStrategicMapImage": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_moduleWeather": {"example": "", "server": false, "broadcasted": false, "description": "Set overcast and fog Parameter(s): 0: STRING - mode, can be one of following \"enableDelay\" - enable delayed activation (i.e., weather changes are not applied manually and have to be confirmed by mission) 1: BOOL - true to enbale, false to disable Returns: Nothing \"isDelayEnabled\" Returns: true if delayed activation is enabled, otherwise false \"commit\" - apply weather changes Returns: Nothing", "local": false}, "saveJoysticks": {"reviewLevel": 2, "syntax": "saveJoysticks", "local": false, "example": "", "docSyntax": "saveJoysticks", "broadcasted": false, "description": "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.", "server": false}, "BIS_fnc_moduleSkill": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_curatorChallengeSpawnLightning": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "removeItemFromBackpack": {"reviewLevel": 2, "syntax": "<objUnit> removeItemFromBackpack <objItem>", "local": false, "example": "", "docSyntax": "unit removeItemFromBackpack item", "broadcasted": true, "description": "Removes item from soldier's backpack.", "server": true}, "move3DENCamera": {"reviewLevel": 2, "syntax": "move3DENCamera [position,useOffset]", "local": false, "example": "move3DENCamera [ getPos player,true];", "docSyntax": "move3DENCamera [position,useOffset]", "broadcasted": false, "description": "Moves Eden Editor camera to given position, with or without offset.", "server": false}, "BIS_fnc_subClasses": {"example": "", "server": false, "broadcasted": false, "description": "Same function as BIS_fnc_returnChildren", "local": false}, "BIS_fnc_execFSM": {"reviewLevel": 1, "syntax": "filename call BIS_fnc_execFSM;", "local": false, "example": "_handle = [[_param1, _param2, etc..], \"test.fsm\"] call BIS_fnc_execFSM;", "docSyntax": "filename call BIS_fnc_execFSM;", "broadcasted": false, "description": "Execute the scripted FSM. Shell for execFSM command", "server": false}, "addItem": {"reviewLevel": 2, "syntax": "<objUnit> addItem <objItem>", "local": false, "example": "bluforUnit addItem \"NVGoggles\"; bluforUnit assignItem \"NVGoggles\"; opforUnit addItem \"NVGoggles_OPFOR\"; opforUnit assignItem \"NVGoggles_OPFOR\"; independentUnit addItem \"NVGoggles_INDEP\"; independentUnit assignItem \"NVGoggles_INDEP\";", "docSyntax": "unit addItem item", "broadcasted": true, "description": "Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.", "server": true}, "is3DENMultiplayer": {"reviewLevel": 2, "syntax": "is3DENMultiplayer", "local": false, "example": "if is3DENMultiplayer then {systemChat \"Your hosting a test server!\"};", "docSyntax": "is3DENMultiplayer", "broadcasted": false, "description": "Returns true if the Eden Editor is in multiplayer mode. Returns true in the following cases:", "server": false}, "attachedObjects": {"reviewLevel": 2, "syntax": "attachedObjects <object>", "local": false, "example": "{ detach _x; } forEach attachedObjects player;", "docSyntax": "attachedObjects obj", "broadcasted": false, "description": "Returns a list of attached objects.", "server": false}, "BIS_fnc_getVirtualItemCargo": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_getVirtualItemCargo", "local": false, "example": "BIS_ammoBox call BIS_fnc_getVirtualItemCargo;", "docSyntax": "object call BIS_fnc_getVirtualItemCargo", "broadcasted": false, "description": "Get virtual items from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "skillFinal": {"reviewLevel": 2, "syntax": "<objUnit> skillFinal <string>", "local": false, "example": "_unitTrueCourage = unit1 skillFinal \"courage\";", "docSyntax": "unit skillFinal skillName", "broadcasted": false, "description": "Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).", "server": false}, "timeMultiplier": {"reviewLevel": 2, "syntax": "timeMultiplier", "local": false, "example": "_multiplier = timeMultiplier;", "docSyntax": "timeMultiplier", "broadcasted": false, "description": "Returns the value set with setTimeMultiplier.", "server": false}, "removeAllCuratorCameraAreas": {"reviewLevel": 2, "syntax": "removeAllCuratorCameraAreas <objCurator>", "local": false, "example": "removeAllCuratorCameraAreas myCurator;", "docSyntax": "removeAllCuratorCameraAreas curatorObj", "broadcasted": false, "description": "Delete all curator camera areas.", "server": false}, "BIS_fnc_moduleSound": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "everyContainer": {"reviewLevel": 1, "syntax": "everyContainer box", "local": false, "example": "everyContainer cursorTarget;", "docSyntax": "everyContainer box", "broadcasted": false, "description": "Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.", "server": false}, "BIS_fnc_moduleCuratorSetCostsVehicleClass": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_registerCuratorObject": {"reviewLevel": 2, "syntax": "[class,status,cost] call BIS_fnc_registerCuratorObject", "local": false, "example": "[\"someClass\", true, 5] call BIS_fnc_registerCuratorObject;", "docSyntax": "[class, status, cost] call BIS_fnc_registerCuratorObject", "broadcasted": false, "description": "Get individual cost of an object.", "server": false}, "leaderboardGetRows": {"reviewLevel": 2, "syntax": "leaderboardGetRows <string>", "local": false, "example": "leaderboardGetRows \"TT01\"", "docSyntax": "leaderboardGetRows boardName", "broadcasted": false, "description": "Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank], [player2Name, score, rank], [player3Name, score, rank] ... ]; This can be called after the one of the row request function has been called and successfully finished!", "server": false}, "tvClear": {"reviewLevel": 2, "syntax": "tvClear <scalar>", "local": true, "example": "tvClear 101;", "docSyntax": "tvClear idc", "broadcasted": false, "description": "Removes all items from Tree View with given idc.", "server": false}, "ctRemoveHeaders": {"reviewLevel": 1, "syntax": "<uiControl> ctRemoveHeaders indices", "local": true, "example": "_control ctRemoveHeaders [0, 1, 2];", "docSyntax": "ctrl ctRemoveHeaders indices", "broadcasted": false, "description": "Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed.", "server": false}, "weaponAccessories": {"reviewLevel": 2, "syntax": "<objUnit> weaponAccessories <string>", "local": false, "example": "player weaponAccessories primaryWeapon player; [\"\",\"acc_pointer_IR\",\"optic_Aco\",\"\"]", "docSyntax": "unit weaponAccessories weapon", "broadcasted": false, "description": "Get array with all items linked to a given weapon.", "server": false}, "BIS_fnc_addWeapon": {"reviewLevel": 2, "syntax": "[<objUnit>,\"weaponClassName\",1,0] call BIS_fnc_addWeapon;", "local": false, "example": "newGun = [player, \"arifle_SDAR_F\", 6] call BIS_fnc_addWeapon; // Adds 6 dual-purpose magazines and the underwater gun to the player.", "docSyntax": "[unit, \"weaponClassName\", 1, 0] call BIS_fnc_addWeapon;", "broadcasted": false, "description": "Adds a weapon to the specified unit, with magazine classnames taken from the weapon's config (in CfgWeapons). This function does not remove magazines nor weapons prior to adding the new weapon, so that still has to be done manually.", "server": false}, "ctrlIDD": {"reviewLevel": 2, "syntax": "ctrlIDD <uiDisplay>", "local": false, "example": "ctrlIDD findDisplay 46; //46", "docSyntax": "ctrlIDD display", "broadcasted": false, "description": "Returns display IDD.", "server": false}, "animationNames": {"reviewLevel": 2, "syntax": "animationNames <object>", "local": false, "example": "_names = animationNames static_AT; Returns: [\"MainTurret\", \"MainGun\", \"MainTurret_destructX\", \"MainTurret_destructY\", \"MainTurret_destructZ\", \"MainGun_destructX\", \"MainGun_destructY\", \"MainGun_destructZ\", \"magazine_destruct\", \"ammo_belt_destruct\", \"bolt_destruct\", \"charging_handle_destruct\", \"damagehideVez_destruct\", \"damagehideHlaven_destruct\", \"damagehideRecoil_destruct\", \"Turret_shake\", \"Turret_shake_aside\", \"Magazine_hide\", \"Ammo_belt_hide\", \"muzzleFlash\", \"AddAutonomous_unhide\", \"bullet001_reload_hide\", \"bullet002_reload_hide\", \"bullet003_reload_hide\", \"bullet004_reload_hide\", \"bullet005_reload_hide\", \"bullet006_reload_hide\", \"bullet007_reload_hide\", \"bullet008_reload_hide\"]", "docSyntax": "animationNames object", "broadcasted": false, "description": "Returns Array of Strings where elements are the names of model animations, which should theoretically be available for use with animate command. However in practice this depends on whether animation is also made available for use in scripts via config.", "server": false}, "disableCollisionWith": {"reviewLevel": 2, "syntax": "<objVehicle> disableCollisionWith <objVehicle>", "local": true, "example": "[_veh1, _veh2] remoteExecCall [\"disableCollisionWith\", 0, _veh1];", "docSyntax": "vehicle disableCollisionWith vehicle", "broadcasted": true, "description": "Disable collision between vehicles. This command doesn't disable collision between PhysX objects.", "server": false}, "BIS_fnc_moduleInit": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "playSound3D": {"reviewLevel": 2, "syntax": "playSound3D [filename,soundSource,isInside,soundPosition,volume,soundPitch,<scalar>]", "local": false, "example": "playSound3D [\"A3\\Sounds_F\\sfx\\blip1.wav\", player]", "docSyntax": "playSound3D [filename, soundSource, isInside, soundPosition, volume, soundPitch, distance]", "broadcasted": true, "description": "Plays positional sound with given filename on every computer on network. At least 2 parameters must be specified.", "server": true}, "BIS_fnc_consolidateArray": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_consolidateArray", "local": false, "example": "[\"apple\",\"apple\",\"pear\",\"pear\",\"apple\"] call BIS_fnc_consolidateArray; // Return: [[\"apple\",3],[\"pear\",2]]", "docSyntax": "array call BIS_fnc_consolidateArray", "broadcasted": false, "description": "Finds duplicities in the given array of anything and consolidates them into an array of sub-arrays", "server": false}, "setPilotCameraRotation": {"reviewLevel": 2, "syntax": "<object> setPilotCameraRotation <array>", "local": true, "example": "vehicle player setPilotCameraRotation [ rad 90, rad 45 ]", "docSyntax": "object setPilotCameraRotation rotation", "broadcasted": false, "description": "Sets rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .", "server": false}, "get3DENLinesVisible": {"reviewLevel": 2, "syntax": "get3DENLinesVisible", "local": false, "example": "if (get3DENLinesVisible select 0) then {hint \"Lines are visible in the map.\";};", "docSyntax": "get3DENLinesVisible", "broadcasted": false, "description": "Get visibility state of Eden Editor lines.", "server": false}, "create3DENComposition": {"reviewLevel": 2, "syntax": "create3DENComposition [configPath,position]", "local": false, "example": "myComposition = create3DENComposition [ configFile >> \"CfgGroups\" >> \"West\" >> \"BLU_F\" >> \"Infantry\" >> \"BUS_InfSquad\", screenToWorld [0.5,0.5] ];", "docSyntax": "create3DENComposition [configPath, position]", "broadcasted": false, "description": "Create new Composition. To create individual entities, use create3DENEntity.", "server": false}, "get3DENMissionAttribute": {"reviewLevel": 1, "syntax": "section get3DENMissionAttribute class", "local": false, "example": "systemChat str (\"Multiplayer\" get3DENMissionAttribute \"respawn\");", "docSyntax": "section get3DENMissionAttribute class", "broadcasted": false, "description": "Return value of scenario attribute.", "server": false}, "BIS_fnc_jukebox": {"reviewLevel": 2, "syntax": "[function,parameters] call BIS_fnc_jukebox", "local": false, "example": "[] call BIS_fnc_jukebox;", "docSyntax": "[function, parameters] call BIS_fnc_jukebox", "broadcasted": false, "description": "Plays music, depending on the player group status.", "server": false}, "getObjectDLC": {"reviewLevel": 2, "syntax": "getObjectDLC <object>", "local": false, "example": "_appID = getObjectDLC cursorTarget; if (!isNil \"_appID\") then { hint format [\"This object belongs to DLC with id:\u00c2\u00a0%1\", _appID]; } else { hint \"This object is vanilla\"; };", "docSyntax": "getObjectDLC obj", "broadcasted": false, "description": "Returns appID of the DLC the object belongs to or nil if object is vanilla.", "server": true}, "getObjectViewDistance": {"reviewLevel": 2, "syntax": "getObjectViewDistance", "local": false, "example": "_arr = getObjectViewDistance;", "docSyntax": "getObjectViewDistance", "broadcasted": false, "description": "Gets the values of rendering distances of objects and shadows.", "server": false}, "BIS_fnc_unpackStaticWeapon": {"reviewLevel": 2, "syntax": "[<objGroup>,weaponPos,targetPos,<array>] call BIS_fnc_unpackStaticWeapon;", "local": false, "example": "[leader1, \"weapon_mrk\", \"target_mrk\"] call BIS_fnc_unpackStaticWeapon;", "docSyntax": "[group, weaponPos, targetPos, leaderPos] call BIS_fnc_unpackStaticWeapon;", "broadcasted": false, "description": "This function will move given support team to the given weapon position. The weapon crew will unpack carried weapon and start watching given target position. Requires three personnel in the team: Team Leader, Gunner and Asst. Gunner. This function is MP compatible.", "server": false}, "getAssignedCuratorUnit": {"reviewLevel": 2, "syntax": "getAssignedCuratorUnit <objCurator>", "local": false, "example": "_curatorUnit = getAssignedCuratorUnit (allCurators select 0); _curatorUnit joinAs [createGroup civilian, 0];", "docSyntax": "getAssignedCuratorUnit curatorObj", "broadcasted": false, "description": "Returns unit assigned to curator logic.", "server": false}, "freeLook": {"reviewLevel": 2, "syntax": "freeLook", "local": false, "example": "systemChat (if freeLook then {\"Quit looking around player!\"} else {\"\"});", "docSyntax": "freeLook", "broadcasted": false, "description": "Returns true if freelook is active.", "server": false}, "getMissionConfig": {"reviewLevel": 1, "syntax": "getMissionConfig attribute", "local": false, "example": "_header = getMissionConfig \"Header\" Returns scenario header config. Replaces the previous approach which would scan only the external Description.ext file, but ignore the value set in the Eden Editor: _header = missionConfigFile >> \"Header\"; // Old approach", "docSyntax": "getMissionConfig attribute", "broadcasted": false, "description": "Returns Config entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property. If it is defined in multiple places, the command checks them in the following order:", "server": false}, "BIS_fnc_initExpo": {"reviewLevel": 2, "syntax": "call BIS_fnc_initExpo", "local": false, "example": "call BIS_fnc_initExpo;", "docSyntax": "call BIS_fnc_initExpo", "broadcasted": false, "description": "Disable parts of the main menu during public presentation. Press Ctrl+Shift+U to toggle the lock.", "server": false}, "setCustomAimCoef": {"reviewLevel": 2, "syntax": "<objUnit> setCustomAimCoef <scalar>", "local": false, "example": "player setCustomAimCoef 1;", "docSyntax": "unit setCustomAimCoef coef", "broadcasted": false, "description": "Set custom aim precision coefficient for weapon sway", "server": false}, "setConvoySeparation": {"reviewLevel": 2, "syntax": "<objVehicle> setConvoySeparation <scalar>", "local": false, "example": "vehicle setConvoySeparation 20;", "docSyntax": "vehicle setConvoySeparation distance", "broadcasted": false, "description": "Sets the distance to keep to the vehicle which is in front.", "server": false}, "lineIntersectsObjs": {"reviewLevel": 2, "syntax": "lineIntersectsObjs [begPos,endPos,withObj,ignoreObj,sortByDistance,flags]", "local": false, "example": "Sto = []; Fn = { { Sto set [_foreachindex,lineIntersectsObjs [(eyePos player),(ATLtoASL screenToWorld [0.5,0.5]),objNull,objNull,false,_x]]; } forEach [1,2,4,8,16,32]; hintSilent format [\" ONLY_WATER:\u00c2\u00a0%1, NEAREST_CONTACT:\u00c2\u00a0%2, ONLY_STATIC:\u00c2\u00a0%3, ONLY_DYNAMIC:\u00c2\u00a0%4, FIRST_CONTACT:\u00c2\u00a0%5, ALL_OBJECTS:\u00c2\u00a0%6\", Sto select 0,Sto select 1,Sto select 2,Sto select 3,Sto select 4,Sto select 5]; }; [\"sample_id\",\"onEachFrame\",\"Fn\"] call BIS_fnc_addStackedEventHandler; //Example display objects' array in the middle of the screen sorted by 6 flags", "docSyntax": "lineIntersectsObjs [begPos, endPos, withObj, ignoreObj, sortByDistance, flags]", "broadcasted": false, "description": "Returns list of objects intersected by given line from begPos to endPos.", "server": true}, "BIS_fnc_executeStackedEventHandler": {"reviewLevel": 2, "syntax": "[EHType] call BIS_fnc_executeStackedEventHandler", "local": false, "example": "[\"onEachFrame\"] call BIS_fnc_executeStackedEventHandler;", "docSyntax": "[EHType] call BIS_fnc_executeStackedEventHandler", "broadcasted": false, "description": "This function executes the stacked items.", "server": false}, "BIS_fnc_getRespawnPositions": {"reviewLevel": 1, "syntax": "input call BIS_fnc_getRespawnPositions", "local": false, "example": "_respawnPositions = missionNamespace call BIS_fnc_getRespawnPositions;", "docSyntax": "input call BIS_fnc_getRespawnPositions", "broadcasted": false, "description": "Return scripted respawn positions available for the given unit.", "server": false}, "addForce": {"reviewLevel": 2, "syntax": "<object> addForce [force,position]", "local": false, "example": "Apply force [0,1000,0] defined in world space (not factoring object actual positioning) to object position [1,0,0]: _object addForce [[0,1000,0],[1,0,0]];", "docSyntax": "object addForce [force, position]", "broadcasted": true, "description": "Applies force to given object at given position. Force is defined as vector [x, y, z] in world space, position is vector [x, y, z] in model space. If you need to define force in model space, use vectorModelToWorld or vectorModelToWorldVisual commands first. The force applied as impulse. For more information see NVIDIA docs", "server": true}, "doSuppressiveFire": {"reviewLevel": 2, "syntax": "<objUnit> doSuppressiveFire <object>", "local": true, "example": "_soldier doSuppressiveFire [1869.508,5760.962,0.000]", "docSyntax": "unitName doSuppressiveFire target", "broadcasted": false, "description": "Order the given unit to suppress a given position or target (without radio messages).", "server": false}, "logNetwork": {"reviewLevel": 1, "syntax": "logNetwork logFile", "local": false, "example": "_handle = logNetwork [\"myLog.txt\",[\"\"]];", "docSyntax": "logNetwork logFile", "broadcasted": false, "description": "Registers new log file recording a network traffic and returns handle of the log. The log file is saved inside the Arma 3 root folder.", "server": false}, "setPosASLW": {"reviewLevel": 2, "syntax": "<object> setPosASLW <array>", "local": false, "example": "_diver setPosASLW [(position _diver) select 0, (position _diver) select 1, -10];", "docSyntax": "obj setPosASLW pos", "broadcasted": true, "description": "Sets the object position above sea surface. The pos array uses the PositionASLW format.", "server": true}, "objectCurators": {"reviewLevel": 2, "syntax": "objectCurators <object>", "local": false, "example": "_curatorsThatcanEdit = objectCurators BIS_Tank;", "docSyntax": "objectCurators obj", "broadcasted": false, "description": "Returns array with all curators which can edit given object.", "server": false}, "animatePylon": {"reviewLevel": 2, "syntax": "<objVehicle> animatePylon [pylon <string>/<scalar>,anim phase]", "local": false, "example": "(vehicle player) animatePylon [1, 0.5];", "docSyntax": "vehicle animatePylon [pylon name/index, anim phase]", "broadcasted": false, "description": "Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when pylon state =1.", "server": false}, "BIS_fnc_sideType": {"reviewLevel": 1, "syntax": "sideID call BIS_fnc_sideType;", "local": false, "example": "0 call BIS_fnc_sideType;//Returns EAST", "docSyntax": "sideID call BIS_fnc_sideType;", "broadcasted": false, "description": "Returns side type based on side ID. See BIS_fnc_sideID for more information.", "server": false}, "isVehicleCargo": {"reviewLevel": 2, "syntax": "isVehicleCargo <objVehicle>", "local": false, "example": "Blackfish with given variable name blackfish, with a vehicle inside called quad _transportingVehicle = isVehicleCargo quad; //returns blackfish //Vehicle called quad that is not being transported as cargo _transportingVehicle = getVehicleCargo quad; //returns objNull", "docSyntax": "isVehicleCargo vehicle", "broadcasted": false, "description": "Return transporting vehicle if vehicle is loaded in one.", "server": false}, "secondaryWeaponItems": {"reviewLevel": 2, "syntax": "secondaryWeaponItems <objUnit>", "local": false, "example": "secondaryWeaponItems player; //[\"\",\"\",\"\",\"\"]", "docSyntax": "secondaryWeaponItems unit", "broadcasted": false, "description": "Returns array with all items assigned to the secondary weapon. This command is used for infantry weapons only.", "server": false}, "BIS_fnc_initMultiplayer": {"reviewLevel": 2, "syntax": "call BIS_fnc_initMultiplayer", "local": false, "example": "call BIS_fnc_initMultiplayer;", "docSyntax": "call BIS_fnc_initMultiplayer", "broadcasted": false, "description": "Multiplayer mission init, executed automatically upon mission start.", "server": false}, "setOxygenRemaining": {"reviewLevel": 2, "syntax": "<objUnit> setOxygenRemaining <scalar>", "local": false, "example": "player setOxygenRemaining 0; // Drowns player", "docSyntax": "unit setOxygenRemaining value", "broadcasted": false, "description": "Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.", "server": false}, "add3DENEventHandler": {"reviewLevel": 2, "syntax": "add3DENEventHandler [type,<code>]", "local": false, "example": "eh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}];", "docSyntax": "add3DENEventHandler [type,code]", "broadcasted": false, "description": "Add code to be run when a Eden Editor event is triggered.", "server": false}, "isObjectHidden": {"reviewLevel": 2, "syntax": "isObjectHidden <object>", "local": false, "example": "_bobIsHidden = isObjectHidden bob;", "docSyntax": "isObjectHidden object", "broadcasted": false, "description": "Checks visibility of a given object on the local machine.", "server": true}, "simulCloudDensity": {"reviewLevel": 2, "syntax": "simulCloudDensity <array>", "local": false, "example": "simulCloudDensity (getPos player)", "docSyntax": "simulCloudDensity pos", "broadcasted": false, "description": "Returns density of clouds at given position.", "server": false}, "BIS_fnc_moduleGenericRadio": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "getArtilleryETA": {"reviewLevel": 2, "syntax": "<objUnit> getArtilleryETA [targetPosition,magazineType]", "local": false, "example": "_mortar getArtilleryETA [getPos _target, getArtilleryAmmo [_mortar] select 0];", "docSyntax": "unit getArtilleryETA [targetPosition, magazineType]", "broadcasted": false, "description": "Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.", "server": true}, "removeAllPrimaryWeaponItems": {"reviewLevel": 2, "syntax": "removeAllPrimaryWeaponItems <objUnit>", "local": true, "example": "", "docSyntax": "removeAllPrimaryWeaponItems unit", "broadcasted": true, "description": "Removes all items from weapon except magazine.", "server": false}, "lockIdentity": {"reviewLevel": 2, "syntax": "lockIdentity <objUnit>", "local": false, "example": "_success = lockIdentity player;", "docSyntax": "lockIdentity unit", "broadcasted": false, "description": "Locks the identity of a person. This will disable default identity.", "server": false}, "setMagazineTurretAmmo": {"reviewLevel": 2, "syntax": "<objVehicle> setMagazineTurretAmmo [magazineClass,ammoCount,turretPath]", "local": false, "example": "", "docSyntax": "vehicle setMagazineTurretAmmo [magazineClass, ammoCount, turretPath]", "broadcasted": false, "description": "Sets ammo count to given amount for given turret.", "server": false}, "shownArtilleryComputer": {"reviewLevel": 2, "syntax": "shownArtilleryComputer", "local": false, "example": "if ( shownArtilleryComputer ) then { hint \"Artillery Computer shown on screen\"; };", "docSyntax": "shownArtilleryComputer", "broadcasted": false, "description": "Checks whether the player has the artillery computer currently open.", "server": false}, "BIS_fnc_triggerToMarker": {"reviewLevel": 2, "syntax": "[<objTrigger>,<string>] call BIS_fnc_triggerToMarker", "local": false, "example": "_createdTrigger = [objNull, myAreaTrigger] call BIS_fnc_triggerToMarker;", "docSyntax": "[trigger, markerName] call BIS_fnc_triggerToMarker", "broadcasted": false, "description": "Makes an existing or new trigger cover a marker area.", "server": false}, "enableStamina": {"reviewLevel": 2, "syntax": "<objUnit> enableStamina <bool>", "local": true, "example": "player enableStamina true;", "docSyntax": "unit enableStamina enabled", "broadcasted": true, "description": "Enable/disable stamina system", "server": false}, "deleteAt": {"reviewLevel": 2, "syntax": "<array> deleteAt <scalar>", "local": false, "example": "_arr = [1,2,3]; _rem = _arr deleteAt 1; hint str [_rem, _arr]; //[2,[1,3]]", "docSyntax": "array deleteAt index", "broadcasted": false, "description": "Removes array element at the given index and returns removed element (modifies the original array, just like resize or set). Will not issue error when -1 index is passed making it ideal for using with find(see Example 2) or findIf(see Example 3) command", "server": false}, "isCollisionLightOn": {"reviewLevel": 2, "syntax": "isCollisionLightOn <objVehicle>", "local": false, "example": "_collisionLightOn = isCollisionLightOn heli;", "docSyntax": "isCollisionLightOn vehicle", "broadcasted": false, "description": "Returns true if vehicle collision lights are on otherwise false.", "server": true}, "BIS_fnc_removeDestroyedCuratorEditableObjects": {"reviewLevel": 2, "syntax": "[<object>,parentClasses] call BIS_fnc_removeDestroyedCuratorEditableObjects", "local": false, "example": "[curatorModule, [\"Man\"]] call BIS_fnc_removeDestroyedCuratorEditableObjects;", "docSyntax": "[object, parentClasses] call BIS_fnc_removeDestroyedCuratorEditableObjects", "broadcasted": false, "description": "Make destroyed curator objects non-editable.", "server": false}, "getRelDir": {"reviewLevel": 1, "syntax": "<object> getRelDir position", "local": false, "example": "_reldir = player getRelDir tank;", "docSyntax": "object getRelDir position", "broadcasted": false, "description": "Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of BIS_fnc_relativeDirTo. Taking the current direction of the object into account.", "server": true}, "BIS_fnc_moduleObjectiveFind": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "tvSetData": {"reviewLevel": 2, "syntax": "tvSetData [<scalar>,[path],data]", "local": true, "example": "tvSetData [101, [0], \"Test data\"];", "docSyntax": "tvSetData [idc, [path], data]", "broadcasted": false, "description": "Sets string data to item on given path. IDC means id of parent Tree View.", "server": false}, "BIS_fnc_basicTask": {"example": "", "server": false, "broadcasted": false, "description": "Internally used .fsm.", "local": false}, "BIS_fnc_setTask": {"reviewLevel": 2, "syntax": "[taskId,<object>,description,(destination,state,priority,showNotification,isGlobal,type,visibleIn3D)] call BIS_fnc_setTask;", "local": false, "example": "", "docSyntax": "[taskId, target, description, (destination, state, priority, showNotification, isGlobal, type, visibleIn3D)] call BIS_fnc_setTask;", "broadcasted": false, "description": "Set task parameters.", "server": false}, "removeAllCuratorAddons": {"reviewLevel": 2, "syntax": "removeAllCuratorAddons <objCurator>", "local": false, "example": "removeAllCuratorAddons myCurator;", "docSyntax": "removeAllCuratorAddons curatorObj", "broadcasted": false, "description": "Restrict access to all addons for given curator.", "server": false}, "ropeDetach": {"reviewLevel": 2, "syntax": "<objVehicle> ropeDetach rope;", "local": false, "example": "vehicle player ropeDetach myRope;", "docSyntax": "vehicle ropeDetach rope;", "broadcasted": false, "description": "Detach a rope from an object.", "server": false}, "BIS_fnc_showUnitInfo": {"reviewLevel": 2, "syntax": "[showUnitInfo] call BIS_fnc_showUnitInfo", "local": false, "example": "false call BIS_fnc_showUnitInfo; // hides weapon information", "docSyntax": "[showUnitInfo] call BIS_fnc_showUnitInfo", "broadcasted": false, "description": "Hides or shows weapon information. Also hides grenades information.", "server": false}, "isLocalized": {"reviewLevel": 1, "syntax": "isLocalized stringName", "local": false, "example": "if (isLocalized \"STR_DN_SNAKE\") then { hint localize \"STR_DN_SNAKE\"; } else { hint \"STR_DN_SNAKE\"; };", "docSyntax": "isLocalized stringName", "broadcasted": false, "description": "Checks whether given string name is localized.", "server": false}, "enableDiagLegend": {"reviewLevel": 2, "syntax": "enableDiagLegend <bool>", "local": false, "example": "enableDiagLegend false", "docSyntax": "enableDiagLegend Bool", "broadcasted": false, "description": "Enable or disable the legend for diagnostics. Internal dev only", "server": false}, "current3DENOperation": {"reviewLevel": 2, "syntax": "current3DENOperation", "local": false, "example": "if (current3DENOperation == \"Move\") then {hint \"Moving\";};", "docSyntax": "current3DENOperation", "broadcasted": false, "description": "Returns the currently performed editing operation in Eden Editor.", "server": false}, "isEqualTypeParams": {"reviewLevel": 1, "syntax": "input isEqualTypeParams template", "local": false, "example": "[1,2,player,\"10\"] isEqualTypeParams [0,0,objNull,\"\"]; //true 123 isEqualTypeParams [0,0,objNull,\"\"]; //false [] isEqualTypeParams [0,0,objNull,\"\"]; //false [1,2,player] isEqualTypeParams [0,0,objNull,\"\"]; //false [1,2,player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"]; //true [1,2,getPos player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"]; //true", "docSyntax": "input isEqualTypeParams template", "broadcasted": false, "description": "Compares types of all elements of input array to types of all elements of template array. Similar to isEqualTypeArray however this command is designed for fast validation of functions params, so there are differences:", "server": false}, "BIS_fnc_VRCourseLaunchers3": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "setSimpleTaskType": {"reviewLevel": 1, "syntax": "<objTask> setSimpleTaskType taskType", "local": false, "example": "(currentTask player) setSimpleTaskType \"attack\";", "docSyntax": "task setSimpleTaskType taskType", "broadcasted": false, "description": "Attach type to the simple task. See Default Task Types.", "server": false}, "netId": {"reviewLevel": 1, "syntax": "netId var", "local": false, "example": "_playerNetId = netId player;", "docSyntax": "netId var", "broadcasted": false, "description": "Unique ID of object or group. As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well. See also: BIS_fnc_objectVar", "server": false}, "showCuratorCompass": {"reviewLevel": 2, "syntax": "showCuratorCompass <bool>", "local": false, "example": "showCuratorCompass true;", "docSyntax": "showCuratorCompass bool", "broadcasted": false, "description": "Hides or shows compass in curator interface.", "server": false}, "BIS_fnc_addRespawnInventory": {"reviewLevel": 2, "syntax": "[<object>,inventoryParams] call BIS_fnc_addRespawnInventory;", "local": false, "example": "[west, \"WEST1\"] call BIS_fnc_addRespawnInventory;", "docSyntax": "[target, inventoryParams] call BIS_fnc_addRespawnInventory;", "broadcasted": false, "description": "Add a respawn inventory for respawn menu. Available loadouts are defined in CfgRespawnInventory in Description.ext.", "server": false}, "openYoutubeVideo": {"reviewLevel": 1, "syntax": "openYoutubeVideo youTubeUrl", "local": false, "example": "//Open http://www.youtube.com/watch?v=UBIAbm7Rt78 _isOpened = openYoutubeVideo \"watch?v=UBIAbm7Rt78\";", "docSyntax": "openYoutubeVideo youTubeUrl", "broadcasted": false, "description": "Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with watch?v=.... If the user has Steam overlay disabled, the command will display appropriate message to the user and return false.", "server": false}, "allSites": {"reviewLevel": 2, "syntax": "allSites", "local": false, "example": "_allSites = allSites;", "docSyntax": "allSites", "broadcasted": false, "description": "Return all sites in map.", "server": false}, "doorPhase": {"reviewLevel": 1, "syntax": "<object> doorPhase door", "local": false, "example": "_phase = heli doorPhase \"door_L\";", "docSyntax": "object doorPhase door", "broadcasted": false, "description": "Return animation phase of door on vehicle.", "server": false}, "forceWeatherChange": {"reviewLevel": 2, "syntax": "forceWeatherChange", "local": false, "example": "240 setOvercast 1; 360 setRain 1; forceWeatherChange; comment \"force immediate change overriding smooth transition\";", "docSyntax": "forceWeatherChange", "broadcasted": false, "description": "Forces saved wanted settings for weather to be actual (BEWARE: Will cause lag).", "server": false}, "BIS_fnc_respawnSide": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "vectorWorldToModelVisual": {"reviewLevel": 1, "syntax": "<object> vectorWorldToModelVisual worldDir", "local": false, "example": "Convert world space vector [0,-10,4] to model space of object _airplane: _airplane vectorWorldToModelVisual [0,-10,4];", "docSyntax": "object vectorWorldToModelVisual worldDir", "broadcasted": false, "description": "Converts vector direction from world to model space in render time scope.", "server": false}, "unlinkItem": {"reviewLevel": 2, "syntax": "<objUnit> unlinkItem <objItem>", "local": false, "example": "bluforUnit unlinkItem \"NVGoggles\"; opforUnit unlinkItem \"NVGoggles_OPFOR\"; independentUnit unlinkItem \"NVGoggles_INDEP\";", "docSyntax": "unit unlinkItem item", "broadcasted": true, "description": "Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.", "server": true}, "getPlayerChannel": {"reviewLevel": 2, "syntax": "getPlayerChannel <objUnit>", "local": false, "example": "_channel = getPlayerChannel player;", "docSyntax": "getPlayerChannel player", "broadcasted": false, "description": "Returns channel number for given player, provided that player is speaking, otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this command:", "server": true}, "BIS_fnc_curatorChallengeDestroyVehicle": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_groupFromNetId": {"reviewLevel": 1, "syntax": "netId call BIS_fnc_groupFromNetId;", "local": false, "example": "_grp = \"0:3\" call BIS_fnc_groupFromNetId;", "docSyntax": "netId call BIS_fnc_groupFromNetId;", "broadcasted": false, "description": "Extends MP-only groupFromNetId functionality to SP", "server": false}, "setSystemOfUnits": {"reviewLevel": 2, "syntax": "setSystemOfUnits <scalar>", "local": false, "example": "if (player in _myHelicopter) then { setSystemOfUnits 2; };", "docSyntax": "setSystemOfUnits value", "broadcasted": false, "description": "Set system of units. This will only impact gauges from advanced flight model.", "server": false}, "isRemoteExecutedJIP": {"reviewLevel": 2, "syntax": "isRemoteExecutedJIP", "local": false, "example": "_remoteExecutedJIP = isRemoteExecutedJIP;", "docSyntax": "isRemoteExecutedJIP", "broadcasted": false, "description": "Returns true if the code context is being remote executed from the JIP queue by remoteExec or remoteExecCall (when JIP param was set). It is a subset of isRemoteExecuted:", "server": false}, "isBurning": {"reviewLevel": 2, "syntax": "isBurning <objUnit>", "local": false, "example": "if (isBurning player) then { player groupChat \"I'm burning!!\"; }", "docSyntax": "isBurning unit", "broadcasted": false, "description": "Returns whether the unit is burning. This returns true only if unit is damaged by nearby fire, it does not check whether a fireplace is burning, use inflamed command for that.", "server": false}, "BIS_fnc_liveFeedTerminate": {"reviewLevel": 2, "syntax": "call BIS_fnc_liveFeedTerminate", "local": false, "example": "call BIS_fnc_liveFeedTerminate;", "docSyntax": "call BIS_fnc_liveFeedTerminate", "broadcasted": false, "description": "Terminate a live feed.", "server": false}, "addPlayerScores": {"reviewLevel": 1, "syntax": "<objUnit> addPlayerScores values", "local": false, "example": "player addPlayerScores [0, 1, 0, 0, 1];", "docSyntax": "unit addPlayerScores values", "broadcasted": false, "description": "MP server only: Adds player score.", "server": false}, "clientOwner": {"reviewLevel": 2, "syntax": "clientOwner", "local": false, "example": "_id = clientOwner;", "docSyntax": "clientOwner", "broadcasted": false, "description": "Returns the client's owner id", "server": false}, "setDynamicSimulationDistance": {"reviewLevel": 1, "syntax": "category setDynamicSimulationDistance <scalar>", "local": false, "example": "\"Group\" setDynamicSimulationDistance 1000;", "docSyntax": "category setDynamicSimulationDistance distance", "broadcasted": false, "description": "Sets activation distance of Arma_3_Dynamic_Simulation for given category", "server": false}, "canVehicleCargo": {"reviewLevel": 2, "syntax": "<objVehicle> canVehicleCargo <objVehicle>", "local": false, "example": "Blackfish with no vehicle cargo loaded _result = blackfish canVehicleCargo offroad; //[true, true]", "docSyntax": "vehicle canVehicleCargo cargo", "broadcasted": false, "description": "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle", "server": false}, "selectRandom": {"reviewLevel": 2, "syntax": "selectRandom <array>", "local": false, "example": "_randomElement = selectRandom [1,2,3,4,5];", "docSyntax": "selectRandom array", "broadcasted": false, "description": "Returns a random element from the given array. Engine solution to BIS_fnc_selectRandom", "server": false}, "BIS_fnc_saveInventory": {"reviewLevel": 2, "syntax": "[<objUnit>,input,<any>,delete] call BIS_fnc_saveInventory", "local": false, "example": "[ player, [ missionNamespace, \"BIS_inv\"], [], true ] call BIS_fnc_saveInventory;", "docSyntax": "[unit,input,params,delete] call BIS_fnc_saveInventory", "broadcasted": false, "description": "Save unit's loadout.", "server": false}, "set3DENMissionAttributes": {"reviewLevel": 2, "syntax": "set3DENMissionAttributes [[<section>,<class1>,<value1>],...,[<section >,<classN>,<valueN>]]", "local": false, "example": "set3DENMissionAttributes [[\"Multiplayer\",\"respawn\",3],[\"Multiplayer\",\"respawnDelay\",10]]; Set respawn type to 3 and respawn delay to 10 seconds", "docSyntax": "set3DENMissionAttributes [[<section>,<class1>,<value1>], ..., [<section >,<classN>,<valueN>]]", "broadcasted": false, "description": "Set scenario attributes.", "server": false}, "collect3DENHistory": {"reviewLevel": 2, "syntax": "collect3DENHistory <code>", "local": false, "example": "collect3DENHistory { _logic = create3DENEntity [\"Logic\", \"Logic\", position player]; add3DENConnection [\"Sync\", [_logic], player ]; }; Creates a logic and connects it to player in one history step.", "docSyntax": "collect3DENHistory code", "broadcasted": false, "description": "Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single collect3DENHistory block will group them together and the user will need to undo only once to revert the changes.", "server": false}, "BIS_fnc_curatorHint": {"reviewLevel": 2, "syntax": "[title,<string>,duration] call BIS_fnc_curatorHint", "local": false, "example": "[\"Title\", \"Some text\", 1337] call BIS_fnc_curatorHint;", "docSyntax": "[title, text, duration] call BIS_fnc_curatorHint", "broadcasted": false, "description": "Show hint in curator interface.", "server": false}, "BIS_fnc_missionTasks": {"example": "", "server": false, "broadcasted": false, "description": "Header function of local mission tasks. Automatically declares following variables: _taskID: STRING _taskState: STRING _taskExists: BOOL Parameter(s): 0: STRING - unique mode 1 (Optional): ANY - additional params 2 (Optional): CODE - specific task function (default: \"BIS_fnc_missionTasksLocal\") Returns: BOOL", "local": false}, "everyBackpack": {"reviewLevel": 1, "syntax": "everyBackpack box", "local": false, "example": "everyBackpack cursorTarget;", "docSyntax": "everyBackpack box", "broadcasted": false, "description": "Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.", "server": false}, "BIS_fnc_colorConfigToRGBA": {"reviewLevel": 1, "syntax": "configColor call BIS_fnc_colorConfigToRGBA", "local": false, "example": "[\"0.5 + 0.25\",0,0,1] call BIS_fnc_colorConfigToRGBA; // returns [0.75,0,0,1]", "docSyntax": "configColor call BIS_fnc_colorConfigToRGBA", "broadcasted": false, "description": "Converts config color format to RGBA array of numbers.", "server": false}, "BIS_fnc_initInspectable": {"reviewLevel": 2, "syntax": "[inspectable,textureInfos,fullScreenText,<string>] call BIS_fnc_initInspectable", "local": false, "example": "[myLeaflet, \"#(argb,8,8,3)color(1,0,1,1)\", \"This is some Magic Pink\"] call BIS_fnc_initInspectable; // Initialize", "docSyntax": "[inspectable, textureInfos, fullScreenText, soundName] call BIS_fnc_initInspectable", "broadcasted": false, "description": "Initialize inspectable object: add \"Inspect\" action to the object. When a player activates it, full-screen detail of the objects is shown.", "server": false}, "BIS_fnc_sayMessage": {"reviewLevel": 2, "syntax": "[speaker,message,channel] call BIS_fnc_sayMessage", "local": false, "example": "[leader player, \"to_c01_m01_brief_001_br_briefing_a_CENTAUR_0\", \"say3D\"] call BIS_fnc_sayMessage;", "docSyntax": "[speaker, message, channel] call BIS_fnc_sayMessage", "broadcasted": false, "description": "Make a speaker say a message.", "server": false}, "addHandgunItem": {"reviewLevel": 2, "syntax": "<objUnit> addHandgunItem <objItem>", "local": true, "example": "player addHandgunItem \"muzzle_snds_L\";", "docSyntax": "unit addHandgunItem item", "broadcasted": true, "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.", "server": false}, "screenshot": {"reviewLevel": 1, "syntax": "screenshot filename", "local": false, "example": "screenshot \"\";", "docSyntax": "screenshot filename", "broadcasted": false, "description": "Captures a screenshot and stores it to given filename.", "server": false}, "BIS_fnc_moduleEffectsPlankton": {"reviewLevel": 2, "syntax": "[module] call BIS_fnc_moduleEffectsPlankton", "local": false, "example": "[BIS_module] call BIS_fnc_moduleEffectsPlankton;", "docSyntax": "[module] call BIS_fnc_moduleEffectsPlankton", "broadcasted": false, "description": "Creates underwater plankton effect around player (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "server": false}, "animateDoor": {"reviewLevel": 2, "syntax": "<object> animateDoor [doorname,phase,instant]", "local": false, "example": "Taru animateDoor [\"Door_1_source\", 1];", "docSyntax": "object animateDoor [doorname, phase, instant]", "broadcasted": true, "description": "Animates a door on a vehicle. Animation is defined in config file in CfgVehicles -> AnimationSources. Wanted animation phase is set with phase param. This command works only on animation sources with \"door\" controller. Door_L in the example below can be animated with animateDoor but not CargoRamp_Open: heli animateDoor [\"Door_L\", 1];", "server": true}, "lockCameraTo": {"reviewLevel": 2, "syntax": "<objVehicle> lockCameraTo [<object>,turretPath]", "local": false, "example": "uav lockCameraTo [vehicle, [0,0]];", "docSyntax": "vehicle lockCameraTo [target, turretPath]", "broadcasted": false, "description": "Lock/Unlock stabilized camera (in vanilla used currently only for UAVs) to target.", "server": false}, "BIS_fnc_toUpperDisplayTexts": {"example": "", "server": false, "broadcasted": false, "description": "* Converts text of selected classes in one display to upper-case. * Searches inside Controls class of the display. Looks inside RscControlsGroup as well. * Doesn't toUpper class with name \"PlayersName\" (TODO - Maybe make it parameter as well). Parameter(s): 0: STRING - Class name of the display (e. g. \"RscDisplayOptionsAudio\"). 1: ARRAY OF STRINGS - Class names of parents of controls you want to toUpper (e. g. [\"RscText\", \"RscTitle\"]). 2 (Optional): ARRAY OF STRINGS - Class names of controls you don't want toUpper (e. g. [\"CA_VehicleAuthor\"] - suitable for toUppering all RscTexts except CA_VehicleAuthor). Returns: NOTHING", "local": false}, "setAutonomous": {"reviewLevel": 1, "syntax": "uav setAutonomous <bool>", "local": false, "example": "uav setAutonomous true;", "docSyntax": "uav setAutonomous bool", "broadcasted": false, "description": "Sets UAV autonomous mode.", "server": false}, "vectorNormalized": {"reviewLevel": 1, "syntax": "vectorNormalized vector", "local": false, "example": "vectorNormalized [12345,7890,38383]; //[0.300481,0.192045,0.934254] vectorMagnitude [0.300481,0.192045,0.934254]; //1", "docSyntax": "vectorNormalized vector", "broadcasted": false, "description": "Returns normalized vector (unit vector, vectorMagnitude = 1) of given vector. If given vector is 0 result is a 0 vector as well.", "server": false}, "BIS_fnc_moduleStrategicMapInit": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_inString": {"reviewLevel": 2, "syntax": "[searchTerm,searchText(,caseSensitive)] call BIS_fnc_inString;", "local": false, "example": "[\"rabbit\", \"I ate a rabbit today\"] call BIS_fnc_inString // will return true", "docSyntax": "[searchTerm, searchText(, caseSensitive)] call BIS_fnc_inString;", "broadcasted": false, "description": "Find a string within a string.", "server": false}, "BIS_fnc_addScore": {"reviewLevel": 2, "syntax": "[<object>,<scalar>] call BIS_fnc_addScore", "local": false, "example": "[player,20] call BIS_fnc_addScore;", "docSyntax": "[object, number] call BIS_fnc_addScore", "broadcasted": false, "description": "Adds a set amount of points to the score of a unit (MP only)", "server": false}, "BIS_fnc_playEndMusic": {"reviewLevel": 1, "syntax": "play call BIS_fnc_playEndMusic", "local": false, "example": "true call BIS_fnc_playEndMusic;", "docSyntax": "play call BIS_fnc_playEndMusic", "broadcasted": false, "description": "Play mission end music (when it's nearing the end)", "server": false}, "BIS_fnc_moduleObjectiveMove": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_addScriptedEventHandler": {"reviewLevel": 2, "syntax": "[namespace,<string>,<code>] call BIS_fnc_addScriptedEventHandler", "local": false, "example": "[missionNamespace, \"event\", {hint \"Hello World\"}] call BIS_fnc_addScriptedEventHandler;", "docSyntax": "[namespace, name, code] call BIS_fnc_addScriptedEventHandler", "broadcasted": false, "description": "Adds scripted event handler and returns its id. Additionally \"ScriptedEventHandlerAdded\" scripted EH is called. For the list of available scripted event handlers see Arma 3: Event Handlers/ScriptedEventHandlers", "server": false}, "BIS_fnc_moduleFriendlyFire": {"reviewLevel": 2, "syntax": "_any = [\"Init|Destroy|AddUnits|RemoveUnits|ChangePriority|ListActiveUnit\",_units] call BIS_fnc_moduleFriendlyFire;", "local": false, "example": "_ret = [\"Init\", [[ BIS_vip1, BIS_vip2, BIS_noVip], true]] call BIS_fnc_moduleFriendlyFire", "docSyntax": "_any = [\"Init|Destroy|AddUnits|RemoveUnits|ChangePriority|ListActiveUnit\", _units] call BIS_fnc_moduleFriendlyFire;", "broadcasted": false, "description": "Handles the friendly fire. Use either the module interface in the editor, or call individual functions.", "server": false}, "getAmmoCargo": {"reviewLevel": 2, "syntax": "getAmmoCargo <objVehicle>", "local": false, "example": "value = getAmmoCargo myVehicleName;", "docSyntax": "getAmmoCargo vehicle", "broadcasted": false, "description": "Returns the amount of ammo resources in the cargo space of a rearm vehicle.", "server": true}, "BIS_fnc_validateParametersOO": {"reviewLevel": 2, "syntax": "[class,method,<any>] call BIS_fnc_validateParametersOO", "local": false, "example": "[\"someClass\",\"someMethod\",[5,47,\"test\"]] call BIS_fnc_validateParametersOO;", "docSyntax": "[class,method,params] call BIS_fnc_validateParametersOO", "broadcasted": false, "description": "Validating the parameters of a certain method in a class.", "server": false}, "magazinesAmmo": {"reviewLevel": 2, "syntax": "magazinesAmmo <objVehicle>", "local": false, "example": "_magazinesAmmo = magazinesAmmo player; /* [ [\"30Rnd_65x39_caseless_mag\",30], [\"30Rnd_65x39_caseless_mag\",30], [\"16Rnd_9x21_Mag\",16], [\"SmokeShellGreen\",1], [\"Chemlight_green\",1], [\"HandGrenade\",1] ]", "docSyntax": "magazinesAmmo vehicle", "broadcasted": false, "description": "Returns array of arrays of all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.", "server": false}, "removePrimaryWeaponItem": {"reviewLevel": 2, "syntax": "<objUnit> removePrimaryWeaponItem <objItem>", "local": true, "example": "player removePrimaryWeaponItem \"acc_flashlight\";", "docSyntax": "unit removePrimaryWeaponItem item", "broadcasted": true, "description": "Removes given weapon item from the primary weapon cargo space.", "server": false}, "weaponCargo": {"reviewLevel": 1, "syntax": "weaponCargo box", "local": false, "example": "hint str weaponCargo backpackContainer player;", "docSyntax": "weaponCargo box", "broadcasted": false, "description": "Get array with weapons from ammo box (or any general weapon holder container).", "server": false}, "userInputDisabled": {"reviewLevel": 2, "syntax": "userInputDisabled", "local": false, "example": "if (!userInputDisabled) then { disableUserInput true; } else { disableUserInput false; };", "docSyntax": "userInputDisabled", "broadcasted": false, "description": "Returns true if user input is disabled", "server": false}, "getForcedFlagTexture": {"reviewLevel": 2, "syntax": "getForcedFlagTexture <object>", "local": false, "example": "getForcedFlagTexture player;", "docSyntax": "getForcedFlagTexture object", "broadcasted": false, "description": "A getter for forceFlagTexture. Forced texture is different from your normal flag texture, which can be retrieved with flagTexture", "server": false}, "hideObjectGlobal": {"reviewLevel": 2, "syntax": "hideObjectGlobal <object>", "local": false, "example": "hideObjectGlobal nearestBuilding [2500,2500,0];", "docSyntax": "hideObjectGlobal object", "broadcasted": true, "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Call on the", "server": true}, "BIS_fnc_moduleEffectsBubbles": {"reviewLevel": 2, "syntax": "[module] call BIS_fnc_moduleEffectsBubbles", "local": false, "example": "[BIS_module] call BIS_fnc_moduleEffectsBubbles;", "docSyntax": "[module] call BIS_fnc_moduleEffectsBubbles", "broadcasted": false, "description": "Creates underwater bubble effect on defined place (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "server": false}, "didJIP": {"reviewLevel": 2, "syntax": "didJIP", "local": false, "example": "clientDidJIP = didJIP;", "docSyntax": "didJIP", "broadcasted": false, "description": "Checks if the current client Joined In Progress.", "server": false}, "BIS_fnc_moduleSimulationManager": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_arsenal": {"reviewLevel": 2, "syntax": "[mode,<any>] call BIS_fnc_arsenal", "local": false, "example": "[ \"Open\", [ true ] ] call BIS_fnc_arsenal;Opens Arsenal with all items", "docSyntax": "[mode,params] call BIS_fnc_arsenal", "broadcasted": false, "description": "Function used for Virtual Arsenal. The function features four different modes, each mode comes with its own paramters.", "server": false}, "BIS_fnc_monthDays": {"reviewLevel": 2, "syntax": "[year,month] call BIS_fnc_monthDays", "local": false, "example": "_daysInThisMonth = [date select 0, date select 1] call BIS_fnc_monthDays;", "docSyntax": "[year, month] call BIS_fnc_monthDays", "broadcasted": false, "description": "Returns number of days in given month. Takes in account for leap year.", "server": false}, "handgunMagazine": {"reviewLevel": 2, "syntax": "handgunMagazine <objUnit>", "local": false, "example": "hint handgunMagazine player; //[\"16Rnd_9x21_Mag\"]", "docSyntax": "handgunMagazine unit", "broadcasted": false, "description": "Returns either single element array, containing class name of currently loaded in the handgun magazine, or an empty array if unit has no handgun or handgun is not loaded. This command is used for infantry weapons only.", "server": true}, "assignAsTurret": {"reviewLevel": 2, "syntax": "<objUnit> assignAsTurret [<objVehicle>,[turretPath]]", "local": false, "example": "player assignAsTurret [BIS_vehicle, [0,1] ];", "docSyntax": "unit assignAsTurret [vehicle, [turretPath]]", "broadcasted": false, "description": "Assigns the soldier to turret.", "server": false}, "BIS_fnc_crewCount": {"reviewLevel": 1, "syntax": "param call BIS_fnc_crewCount;", "local": false, "example": "crewCount = [\"B_Heli_Light_01_F\",false] call BIS_fnc_crewCount; // Counts all available seats excluding cargo slots. Returns 6 (see notes).", "docSyntax": "param call BIS_fnc_crewCount;", "broadcasted": false, "description": "Function that counts amount of seats, both for crew and cargo seats.", "server": false}, "BIS_fnc_execRemote": {"example": "See BIS_fnc_MP", "server": false, "broadcasted": false, "description": "This function is now an alias to BIS_fnc_MP. Use remoteExec and remoteExecCall instead!", "local": false}, "getPlateNumber": {"reviewLevel": 2, "syntax": "getPlateNumber <objVehicle>", "local": false, "example": "getPlateNumber vehicle player", "docSyntax": "getPlateNumber vehicle", "broadcasted": false, "description": "Get the license plates from any vehicle which has plates configured.", "server": false}, "BIS_fnc_replaceWithSimpleObject": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_replaceWithSimpleObject", "local": false, "example": "[tank] call BIS_fnc_replaceWithSimpleObject;", "docSyntax": "[object] call BIS_fnc_replaceWithSimpleObject", "broadcasted": false, "description": "Replaces object with simple object. Object must not contain any crew and must be placed on ground.", "server": false}, "ctRemoveRows": {"reviewLevel": 1, "syntax": "<uiControl> ctRemoveRows indices", "local": true, "example": "_control ctRemoveRows [0, 1, 2];", "docSyntax": "ctrl ctRemoveRows indices", "broadcasted": false, "description": "Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed.", "server": false}, "setWaypointForceBehaviour": {"reviewLevel": 1, "syntax": "waypoint setWaypointForceBehaviour state", "local": false, "example": "[grp, 2] setWaypointForceBehaviour true;", "docSyntax": "waypoint setWaypointForceBehaviour state", "broadcasted": false, "description": "Forces the behavior of waypoint, disables AUTOCOMBAT.", "server": false}, "BIS_fnc_startLoadingScreen": {"reviewLevel": 2, "syntax": "[screenId,layout] call BIS_fnc_startLoadingScreen", "local": false, "example": "[\"myLoadingScreen\", \"Loading\u00e2\u20ac\u00a6 wait for my splendid\u00e2\u201e\u00a2 mission!\"] call BIS_fnc_startLoadingScreen; uiSleep 3; \"myLoadingScreen\" call BIS_fnc_endLoadingScreen;", "docSyntax": "[screenId, layout] call BIS_fnc_startLoadingScreen", "broadcasted": false, "description": "Register a loading screen. Start the loading when it is the first one registered.", "server": false}, "actionIDs": {"reviewLevel": 1, "syntax": "actionIDs entity", "local": false, "example": "_actions = actionIDs player;", "docSyntax": "actionIDs entity", "broadcasted": false, "description": "Returns Array of Numbers, where numbers are IDs of all user actions added to given entity with addAction command.", "server": true}, "visibleGPS": {"reviewLevel": 2, "syntax": "visibleGPS", "local": false, "example": "if (visibleGPS) then {hint \"GPS is visible\"};", "docSyntax": "visibleGPS", "broadcasted": false, "description": "Checks if the player has GPS receiver opened and visible", "server": false}, "ctAddHeader": {"reviewLevel": 2, "syntax": "<array> = ctAddHeader <uiControl>", "local": true, "example": "_array = ctAddHeader _control;", "docSyntax": "Array = ctAddHeader Control", "broadcasted": false, "description": "Adds a header line of controls according to the HeaderTemplate class. It returns an array containing header index and array of created controls in a format [<headerIndex>, [<control0>, <control1>...<control n>]].", "server": false}, "clearAllItemsFromBackpack": {"reviewLevel": 2, "syntax": "clearAllItemsFromBackpack <objUnit>", "local": false, "example": "clearAllItemsFromBackpack player;", "docSyntax": "clearAllItemsFromBackpack unit", "broadcasted": false, "description": "Removes all items from the backpack.", "server": false}, "listVehicleSensors": {"reviewLevel": 2, "syntax": "listVehicleSensors <objVehicle>", "local": false, "example": "_sensors = listVehicleSensors (vehicle player); hint str _sensors;", "docSyntax": "listVehicleSensors vehicle", "broadcasted": false, "description": "Returns an array of the sensors in the given vehicle's config (configfile >> CfgVehicles >> vehicle >> Components >> SensorsManagerComponent >> Components).", "server": false}, "BIS_fnc_locationDescription": {"reviewLevel": 1, "syntax": "position call BIS_fnc_locationDescription", "local": false, "example": "hint format [\"Player's position:\u00c2\u00a0%1\", player call BIS_fnc_locationDescription];", "docSyntax": "position call BIS_fnc_locationDescription", "broadcasted": false, "description": "Return location description (e.g. \"NE of Agia Marina\")", "server": false}, "boundingBoxReal": {"reviewLevel": 2, "syntax": "boundingBoxReal <object>", "local": false, "example": "_bbr = boundingBoxReal vehicle player; _p1 = _bbr select 0; _p2 = _bbr select 1; _maxWidth = abs ((_p2 select 0) - (_p1 select 0)); _maxLength = abs ((_p2 select 1) - (_p1 select 1)); _maxHeight = abs ((_p2 select 2) - (_p1 select 2));", "docSyntax": "boundingBoxReal obj", "broadcasted": false, "description": "Returns a bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements.", "server": false}, "vectorMagnitude": {"reviewLevel": 1, "syntax": "vectorMagnitude vector", "local": false, "example": "_size = vectorMagnitude [0,3,4]; //5", "docSyntax": "vectorMagnitude vector", "broadcasted": false, "description": "Magnitude of a 3D vector.", "server": false}, "BIS_fnc_moduleRank": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_alignTabs": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_alignTabs", "local": false, "example": "[ [\"Player:\", str player], [\"Name:\", name player], [\"Type:\", typeOf player], [\"Location:\", str getPosATL player], [\"Direction:\", str getDir player] ] call BIS_fnc_alignTabs;", "docSyntax": "array call BIS_fnc_alignTabs", "broadcasted": false, "description": "Align two columns divided by tabs. A tab counts for 8 characters.", "server": false}, "ctrlParentControlsGroup": {"reviewLevel": 2, "syntax": "ctrlParentControlsGroup <uiControl>", "local": false, "example": "_ctrlCombo = _ctrl controlsGroupCtrl 100;//Control ctrlParentControlsGroup _ctrlCombo;//Parent control group (_ctrl)", "docSyntax": "ctrlParentControlsGroup ctrl", "broadcasted": false, "description": "Returns the parent control of a given child control", "server": false}, "BIS_fnc_moduleHQ": {"example": "", "server": false, "broadcasted": false, "description": "Register or return side HQ speaker Parameter(s): 0: OBJECT - register the HQ SIDE - return HQ of the side Returns: OBJECT - the HQ", "local": false}, "BIS_fnc_addVirtualBackpackCargo": {"reviewLevel": 2, "syntax": "[<object>,backpackClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualBackpackCargo", "local": false, "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualBackpackCargo;", "docSyntax": "[object,backpackClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualBackpackCargo", "broadcasted": false, "description": "Add virtual backpacks to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "BIS_fnc_moduleRespawnVehicle": {"example": "", "server": false, "broadcasted": false, "description": "Set vehicle respawn, compatible both with SP and MP. Parameter(s): 0: OBJECT - vehicle 1: NUMBER - respawn delay in seconds (default is 0) BOOL - true to remove vehicle respawn (further params are ignored), false to check if the vehicle is marked for respawn 2: NUMBER - how long until the vehicle is automatically respawned after its crew leaves it (default is -1, i.e., disabled) 3: NUMBER - number of time the vehicle can be respawned (default is -1, i.e., unlimited) 4: CODE - code executed upon respawn. Passed arguments are [<newVehicle>,<oldVehicle>]. The old vehicle is deleted only after this code is completed. 5: POSITION - type of respawn position: 0 = where it started 1 = where it was destroyed 2 = on vehicle's side respawn marker (e.g., \"respawn_vehicle_west\") 3 = on BLUFOR respawn marker 4 = on OPFOR respawn marker 5 = on Independent respawn marker 6 = on Civilian respawn marker 7 = on side respawn marker of unit which destroyed the vehicle 6: NUMBER - position selection type (0 = random, 1 = newest, 2 = oldest) 7: NUMBER - type of old vehicle deletion (0 = don't delete, 1 = delete, 2 = delete with an explosion effect) 8: BOOL - true to show notifcation when the vehicle is respawned Returns: BOOL", "local": false}, "BIS_fnc_exportMapToBiTXT": {"reviewLevel": 2, "syntax": "[resolution,size,zCoeff] call BIS_fnc_exportMapToBiTXT", "local": false, "example": "[10, 10, 1] call BIS_fnc_exportMapToBiTXT;", "docSyntax": "[resolution, size, zCoeff] call BIS_fnc_exportMapToBiTXT", "broadcasted": false, "description": "Returns terrain height map to BiTXT (Universal Bistudio TXT) format, which can be imported to Object Builder. Output is also copied to clipboard.", "server": false}, "distance2D": {"reviewLevel": 2, "syntax": "param1 distance2D param2", "local": false, "example": "_meters = player distance2D heli;", "docSyntax": "param1 distance2D param2", "broadcasted": false, "description": "Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position.", "server": true}, "clearItemCargoGlobal": {"reviewLevel": 1, "syntax": "clearItemCargoGlobal box", "local": false, "example": "clearItemCargoGlobal _ammoBox;", "docSyntax": "clearItemCargoGlobal box", "broadcasted": true, "description": "Removes all items from ammo box (or any general weapon holder container).", "server": true}, "BIS_fnc_blackOut": {"reviewLevel": 2, "syntax": "[<scalar>,smoothing] call BIS_fnc_blackOut", "local": false, "example": "[ \"TAG_aVeryUniqueID\", false ] call BIS_fnc_blackOut;", "docSyntax": "[id,smoothing] call BIS_fnc_blackOut", "broadcasted": false, "description": "Register a black screen. Start the black screen when the first request is registered.", "server": false}, "BIS_fnc_respawnCounter": {"reviewLevel": 2, "syntax": "[<string>,colour] call BIS_fnc_respawnCounter", "local": false, "example": "[\"Some text\", 2] call BIS_fnc_respawnCounter;", "docSyntax": "[text,colour] call BIS_fnc_respawnCounter", "broadcasted": false, "description": "Set or execute respawn counter params.", "server": false}, "BIS_fnc_removeVirtualMagazineCargo": {"reviewLevel": 2, "syntax": "[<object>,magClasses,removeGlobally] call BIS_fnc_removeVirtualMagazineCargo", "local": false, "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualMagazineCargo;", "docSyntax": "[object,magClasses,removeGlobally] call BIS_fnc_removeVirtualMagazineCargo", "broadcasted": false, "description": "Remove virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "ctrlSetPixelPrecision": {"reviewLevel": 1, "syntax": "controlName ctrlSetPixelPrecision mode", "local": false, "example": "_control ctrlSetPixelPrecision 2; // Enables pixel precision of the given control", "docSyntax": "controlName ctrlSetPixelPrecision mode", "broadcasted": false, "description": "Enable or disable pixel precision (rounding) in a given control interface.", "server": false}, "BIS_fnc_moduleRemoteControl": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setLightFlareMaxDistance": {"reviewLevel": 1, "syntax": "light setLightFlareMaxDistance <scalar>", "local": true, "example": "myLight setLightFlareMaxDistance 500;", "docSyntax": "light setLightFlareMaxDistance distance", "broadcasted": false, "description": "Sets max distance where the flare is visible.", "server": false}, "BIS_fnc_callScriptedEventHandler": {"reviewLevel": 2, "syntax": "[namespace,<string>,arguments,returnResults] call BIS_fnc_callScriptedEventHandler", "local": false, "example": "[missionNamespace, \"event\", [player, 123]] call BIS_fnc_callScriptedEventHandler;", "docSyntax": "[namespace, name, arguments, returnResults] call BIS_fnc_callScriptedEventHandler", "broadcasted": false, "description": "Calls all the codes assigned to scripted event handler with given name. Since", "server": false}, "BIS_fnc_itemType": {"reviewLevel": 1, "syntax": "weaponClass call BIS_fnc_itemType", "local": false, "example": "\"arifle_MX_pointer_F\" call BIS_fnc_itemType;", "docSyntax": "weaponClass call BIS_fnc_itemType", "broadcasted": false, "description": "Returns item category and type.", "server": false}, "configHierarchy": {"reviewLevel": 2, "syntax": "configHierarchy <cfgClass>", "local": false, "example": "_hierarchy = configHierarchy (configFile >> \"CfgVehicles\" >> \"Car\"); //[bin\\config.bin,bin\\config.bin/CfgVehicles,bin\\config.bin/CfgVehicles/Car]", "docSyntax": "configHierarchy configClass", "broadcasted": false, "description": "Returns hierarchy of the given config class. Just like with inheritsFrom, only complete config classes are supported", "server": false}, "addCuratorPoints": {"reviewLevel": 2, "syntax": "<objCurator> addCuratorPoints <scalar>", "local": false, "example": "curatorModule addCuratorPoints 0.5", "docSyntax": "curatorObj addCuratorPoints points", "broadcasted": false, "description": "Adds or removes curator points. Points can be only in range from 0 to 1.", "server": false}, "ctrlSetAngle": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetAngle [angle,centerX,centerY]", "local": false, "example": "_control ctrlSetAngle [25, 0.5, 0.5];", "docSyntax": "control ctrlSetAngle [angle, centerX, centerY]", "broadcasted": false, "description": "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Doesn't require ctrlCommit. Procedural textures filled controls do not rotate.", "server": false}, "BIS_fnc_respawnConfirm": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "get3DENAttribute": {"reviewLevel": 1, "syntax": "entity get3DENAttribute attribute", "local": false, "example": "systemChat str ((get3DENMouseOver select 1) get3DENAttribute \"name\"); // returns variable name of object under cursor", "docSyntax": "entity get3DENAttribute attribute", "broadcasted": false, "description": "Returns the value of the given entity's attribute in Eden Editor.", "server": false}, "objectFromNetId": {"reviewLevel": 2, "syntax": "objectFromNetId <scalar>", "local": false, "example": "objectFromNetId \"2:3\"", "docSyntax": "objectFromNetId id", "broadcasted": false, "description": "Get object with given unique ID. If object is a group use groupFromNetId. As this command is MP only, you can use BIS_fnc_objectFromNetId, which extends the use to SP as well.", "server": false}, "add3DENLayer": {"reviewLevel": 1, "syntax": "parentLayerID add3DENLayer <string>", "local": false, "example": "_myLayer = -1 add3DENLayer \"Enemy Base\"; _myLayerFort = _myLayer add3DENLayer \"Fortifications\"; _myLayerPatrol = _myLayer add3DENLayer \"Patrols\";", "docSyntax": "parentLayerID add3DENLayer name", "broadcasted": false, "description": "Add an editing layer in Eden Editor.", "server": false}, "setVehicleCargo": {"reviewLevel": 2, "syntax": "<objVehicle> setVehicleCargo <objVehicle>", "local": false, "example": "Blackfish with no vehicle cargo loaded _success = blackfish setVehicleCargo offroad; //true", "docSyntax": "vehicle setVehicleCargo cargo", "broadcasted": false, "description": "Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded. Can also be used to unload a specific loaded vehicle or all loaded vehicles.", "server": false}, "BIS_fnc_taskSetDescription": {"reviewLevel": 2, "syntax": "[ taskId,[ taskDescription,taskTitle,taskMarker ] ] call BIS_fnc_taskSetDescription", "local": false, "example": "[ \"tsk_destroyAA\", [ \"You should plant Satchels under those Shilkas! Good luck.\", \"Destroy the Shilkas\", \"Shilkas\" ] ] call BIS_fnc_taskSetDescription;", "docSyntax": "[ taskId, [ taskDescription, taskTitle, taskMarker ] ] call BIS_fnc_taskSetDescription", "broadcasted": false, "description": "Set a task description. For easy task manipulation, use the Arma 3 Task Framework.", "server": false}, "BIS_fnc_moduleStrategicMapMission": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_advHintCredits": {"reviewLevel": 2, "syntax": "call BIS_fnc_advHintCredits", "local": false, "example": "call BIS_fnc_advHintCredits;", "docSyntax": "call BIS_fnc_advHintCredits", "broadcasted": false, "description": "Advanced hint credits preprocessor.", "server": false}, "ctrlChecked": {"reviewLevel": 2, "syntax": "ctrlChecked <uiControl>", "local": false, "example": "ctrlChecked _control;", "docSyntax": "ctrlChecked control", "broadcasted": false, "description": "Returns the current state of given checkbox in checkboxes control (CT_CHECKBOXES type 7 of Dialog Control). Since Arma 3 v1.71.141591 it is possible to query multiple checkboxes by providing checkbox index. For more information see DialogControls-CheckBoxes.", "server": false}, "BIS_fnc_titlecard": {"reviewLevel": 2, "syntax": "[path,subtitle] call BIS_fnc_titlecard", "local": false, "example": "[\"\\a3\\missions_f_epb\\video\\b_out2_quotation.ogv\", \"your translation\"] call BIS_fnc_titlecard;", "docSyntax": "[path,subtitle] call BIS_fnc_titlecard", "broadcasted": false, "description": "Display a mission-specific titlecard before the mission begins. Only works the first time it's called.", "server": false}, "loadAbs": {"reviewLevel": 2, "syntax": "loadAbs <objUnit>", "local": false, "example": "Player weight:_weight = loadAbs player;", "docSyntax": "loadAbs unit", "broadcasted": false, "description": "Returns current sum of mass from items stored in all unit's containers, linked items and weapons.", "server": false}, "BIS_fnc_loadFunctions": {"reviewLevel": 2, "syntax": "[fileDirectory,prefix,nameVars,global] call BIS_fnc_loadFunctions", "local": false, "example": "[\"scripts\\myDir\\\", \"MY_fnc_\", [\"script1\", \"script2\"], true] call BIS_fnc_loadFunctions;", "docSyntax": "[fileDirectory, prefix, nameVars, global] call BIS_fnc_loadFunctions", "broadcasted": false, "description": "Compile scripts and save them into globally available functions. Defines _fnc_scriptName variable.", "server": false}, "BIS_fnc_drawAO": {"reviewLevel": 2, "syntax": "[[triggerName],''<scalar>''] call BIS_fnc_drawAO;", "local": false, "example": "[Trigger1] call BIS_fnc_drawAO; // Draws a dashed line around trigger1's outer edge, with 50m between each line.", "docSyntax": "[[triggerName],''distance''] call BIS_fnc_drawAO;", "broadcasted": false, "description": "Draws a dashed line around the outer edges of a trigger.", "server": false}, "BIS_fnc_moduleSFX": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setObjectMaterialGlobal": {"reviewLevel": 2, "syntax": "<object> setObjectMaterialGlobal [selection,material]", "local": false, "example": "player setObjectMaterialGlobal [0, \"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];", "docSyntax": "obj setObjectMaterialGlobal [selection, material]", "broadcasted": true, "description": "Set the material of the given selection on all computers in a network session.", "server": true}, "getPosVisual": {"reviewLevel": 2, "syntax": "getPosVisual <object>", "local": false, "example": "_playerRenderedPos = getPosVisual player;", "docSyntax": "getPosVisual object", "broadcasted": false, "description": "Returns an object's rendered 3D position (z value above sea when over sea, or above ground when over land) in render time scope. Alias of visiblePosition.", "server": true}, "BIS_fnc_buildingPositions": {"reviewLevel": 1, "syntax": "param call BIS_fnc_buildingPositions;", "local": false, "example": "[_building] call BIS_fnc_buildingPositions;", "docSyntax": "param call BIS_fnc_buildingPositions;", "broadcasted": false, "description": "Get all available positions within a building or structure.", "server": false}, "dynamicSimulationEnabled": {"reviewLevel": 2, "syntax": "dynamicSimulationEnabled <object>", "local": false, "example": "hint str dynamicSimulationEnabled _myObject;", "docSyntax": "dynamicSimulationEnabled object", "broadcasted": false, "description": "A getter for enableDynamicSimulation", "server": false}, "BIS_fnc_ORBATAnimate": {"reviewLevel": 2, "syntax": "[<object>,<scalar>,duration] spawn BIS_fnc_ORBATAnimate", "local": false, "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", 0.5, 3 ] spawn BIS_fnc_ORBATAnimate;", "docSyntax": "[target, zoom, duration] spawn BIS_fnc_ORBATAnimate", "broadcasted": false, "description": "Animates an ORBAT viewer.", "server": false}, "BIS_fnc_moduleEndMission": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "enableDebriefingStats": {"reviewLevel": 2, "syntax": "enableDebriefingStats [left,top,width,height]", "local": false, "example": "enableDebriefingStats [0.1, 0.1, 0.8, 0.8];", "docSyntax": "enableDebriefingStats [left, top, width, height]", "broadcasted": false, "description": "enable debrifing score table.", "server": false}, "BIS_fnc_getCfgDataPool": {"example": "", "server": false, "broadcasted": false, "description": "* Get array of attribute values out of the parent config class. * Attributes need to be in this format: \"_n\", where n is an index number (starting from 0). * If any discrepancy in indexing is detected, loading will stop and only the correctly indexed values will be returned. * Max. index supported is 99. * If more then 9 attributes used, 0-9 need to use leading zeroes. CFG example: class Timeline { class StageA { _0[] = {2035,7,7,04,30}; _1[] = {2035,7,7,06,15}; _2[] = {2035,7,7,18,35}; _3[] = {2035,7,8,09,05}; _4[] = {2035,7,8,13,25}; _5[] = {2035,7,8,17,10}; _6[] = {2035,7,8,21,40}; _7[] = {2035,7,9,19,55}; }; }; Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes. Example: * 1st way of calling: _array = (configfile >> \"BulletBubbles\" >> \"BulletBubbles1\") call BIS_fnc_getCfgData; _array = (missionconfigfile >> \"Timeline\" >> \"StageA\") call BIS_fnc_getCfgData; * 2nd way of calling: _array = [\"Timeline\",\"StageA\"] call BIS_fnc_getCfgData; Returns: ARRAY or nil, if parent class is not found", "local": false}, "unitAddons": {"reviewLevel": 1, "syntax": "unitAddons className", "local": false, "example": "hint str unitAddons typeOf player; //[\"A3_Characters_F_BLUFOR\"]", "docSyntax": "unitAddons className", "broadcasted": false, "description": "Returns list with addons the unit belongs to.", "server": false}, "removeCuratorAddons": {"reviewLevel": 1, "syntax": "<objCurator> removeCuratorAddons addons", "local": false, "example": "curatorModule removeCuratorAddons [addon1,addon2]", "docSyntax": "curatorObj removeCuratorAddons addons", "broadcasted": false, "description": "Restrict curator use of given addons.", "server": false}, "BIS_fnc_tridentGetRelationship": {"reviewLevel": 2, "syntax": "[side_1,side_2] call BIS_fnc_tridentGetRelationship", "local": false, "example": "[ west, east ] call BIS_fnc_tridentGetRelationship;", "docSyntax": "[side_1,side_2] call BIS_fnc_tridentGetRelationship", "broadcasted": false, "description": "Description: Get relationship of competing Trident sides. The value slowly decreases towards 0.", "server": false}, "BIS_fnc_initPlayable": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_healing": {"reviewLevel": 2, "syntax": "call BIS_fnc_healing", "local": false, "example": "call BIS_fnc_healing; // do NOT use", "docSyntax": "call BIS_fnc_healing", "broadcasted": false, "description": "Healing postprocess. Supposed to give healing postprocess effects.", "server": false}, "addVest": {"reviewLevel": 1, "syntax": "<objUnit> addVest type", "local": false, "example": "player addVest \"V_TacVest_blk_POLICE\";", "docSyntax": "unit addVest type", "broadcasted": true, "description": "Create a new vest and try to link it into vest slot.", "server": true}, "BIS_fnc_bloodEffect": {"reviewLevel": 2, "syntax": "[10] call BIS_fnc_bloodEffect;", "local": false, "example": "[10] call BIS_fnc_bloodEffect; // Adds the blood effect for 10 (milli)seconds.", "docSyntax": "[10] call BIS_fnc_bloodEffect;", "broadcasted": false, "description": "Adds the bleeding effect post-processing effect to the players screen.", "server": false}, "roadAt": {"reviewLevel": 1, "syntax": "roadAt position", "local": false, "example": "_road = roadAt ASLToAGL getPosASL player;", "docSyntax": "roadAt position", "broadcasted": false, "description": "Returns road segment at given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean.", "server": true}, "BIS_fnc_setIDCStreamFriendly": {"reviewLevel": 2, "syntax": "[<object>,<scalar>] call BIS_fnc_setIDCStreamFriendly", "local": false, "example": "[ (findDisplay 1337) displayCtrl 42 ] call BIS_fnc_setIDCStreamFriendly;", "docSyntax": "[target,IDC] call BIS_fnc_setIDCStreamFriendly", "broadcasted": false, "description": "Shows or hides UI control according to state of the Stream Friendly UI switch in Game Options.", "server": false}, "BIS_fnc_respawnMenuInventory": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "itemsWithMagazines": {"reviewLevel": 2, "syntax": "itemsWithMagazines <objUnit>", "local": false, "example": "itemsWithMagazines player //is essentially the same as items player + magazines player [ \"FirstAidKit\", //item \"30Rnd_65x39_caseless_mag\", //magazine \"16Rnd_9x21_Mag\", //magazine \"Chemlight_green\", //magazine \"HandGrenade\", //magazine \"ToolKit\", //item \"MineDetector\" //item ]", "docSyntax": "itemsWithMagazines unit", "broadcasted": false, "description": "Returns combined array including all unit's items and all unit's magazines. Loaded magazines such as currentMagazine, primaryWeaponMagazine, secondaryWeaponMagazine, handgunMagazine as well as assignedItems are excluded.", "server": true}, "enableChannel": {"reviewLevel": 1, "syntax": "channel enableChannel <bool>", "local": false, "example": "0 enableChannel false; // Disable user ability to send voice and text on global channel", "docSyntax": "channel enableChannel enable", "broadcasted": false, "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. If the channel was disabled in description.ext, it can be enabled with this command, however the UI functionality changes will be local to the PC executing this command. What this command cannot do:", "server": false}, "setDetailMapBlendPars": {"reviewLevel": 2, "syntax": "setDetailMapBlendPars [fullDetail,noDetail]", "local": false, "example": "setDetailMapBlendPars [20, 50];", "docSyntax": "setDetailMapBlendPars [fullDetail, noDetail]", "broadcasted": false, "description": "Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance. If noDetail > fullDetail, the texture detail will incur smooth transition in the area between the thresholds. If noDetail <= fullDetail there will be obvious visible edge between texture detail changes at fullDetail distance.", "server": false}, "BIS_fnc_formatCuratorChallengeObjects": {"reviewLevel": 1, "syntax": "classes call BIS_fnc_formatCuratorChallengeObjects", "local": false, "example": "[\"class_1\",\"class_2\"] call BIS_fnc_formatCuratorChallengeObjects;", "docSyntax": "classes call BIS_fnc_formatCuratorChallengeObjects", "broadcasted": false, "description": "Format the list of objects compatible with curator challenge to be displayed in the task descriptipon.", "server": false}, "get3DENSelected": {"reviewLevel": 1, "syntax": "get3DENSelected type", "local": false, "example": "systemChat str (get3DENSelected \"\"); /* outputs: [ [B Alpha 2-1:1],//objects [B Alpha 2-1],//groups [164494: <no shape>],//triggers [<No center> Charlie 1-2:4],//logic [ [B Alpha 2-1,0] ],//waypoints [\"Hotel_Whiskey\"]//markers ]*/", "docSyntax": "get3DENSelected type", "broadcasted": false, "description": "Returns an array of all selected Eden Editor Entities of the given type, or, if empty string \"\" is used, an array of 6 arrays in the following format:", "server": false}, "BIS_fnc_missionHandlers": {"example": "", "server": false, "broadcasted": false, "description": "#define VAR_RELOADS (missionname + \"_reloads_\" + str ismultiplayer) //--- Mission end type and rating", "local": false}, "BIS_fnc_execVM": {"reviewLevel": 1, "syntax": "filename call BIS_fnc_execVM", "local": false, "example": "\"Bonus\\initializeExtras.sqf\" call BIS_fnc_execVM;", "docSyntax": "filename call BIS_fnc_execVM", "broadcasted": false, "description": "execVM desired script with desired argument(s). This function is only really useful when combined with BIS_fnc_MP to execute a script remotely.", "server": false}, "removeItemFromUniform": {"reviewLevel": 2, "syntax": "<objUnit> removeItemFromUniform <objItem>", "local": false, "example": "", "docSyntax": "unit removeItemFromUniform item", "broadcasted": true, "description": "Removes item from soldier's uniform. Can be used with magazines and weapons too.", "server": true}, "BIS_fnc_addVirtualWeaponCargo": {"reviewLevel": 2, "syntax": "[<object>,weaponClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualWeaponCargo", "local": false, "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualWeaponCargo;", "docSyntax": "[object,weaponClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualWeaponCargo", "broadcasted": false, "description": "Add virtual weapons to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "BIS_fnc_moduleSector": {"example": "", "server": false, "broadcasted": false, "description": "Initialize a sector module. Can be also used to get sector parameters. --- Get all sectors --- Parameter(s): 0: BOOL Returns: ARRAY of OBJECTs --- Get number of sectors held by a side --- Parameter(s): 0: SIDE Returns: NUMBER - number of sectors owned by the side --- Set sector owner --- Parameter(s): 0: OBJECT - sector module 1: SIDE Returns: BOOL --- Initialize --- Parameter(s): 0: OBJECT - sector module Returns: NOTHING", "local": false}, "BIS_fnc_effectKilledAirDestructionStage2": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "is3DEN": {"reviewLevel": 2, "syntax": "is3DEN", "local": false, "example": "if is3DEN then {systemChat \"Welcome to Eden Editor!\"};", "docSyntax": "is3DEN", "broadcasted": false, "description": "Returns true if the Eden Editor is currently being used. true when inside editor environment, false during preview. (see also is3DENMultiplayer)", "server": false}, "BIS_fnc_taskDestination": {"reviewLevel": 2, "syntax": "<string> call BIS_fnc_taskDestination", "local": false, "example": "\"BIS_task_01\" call BIS_fnc_taskDestination;", "docSyntax": "taskName call BIS_fnc_taskDestination", "broadcasted": false, "description": "Return a task's destination.", "server": false}, "BIS_fnc_initRespawn": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "getPilotCameraRotation": {"reviewLevel": 2, "syntax": "getPilotCameraRotation <object>", "local": true, "example": "_pilotCamRot = getPilotCameraRotation vehicle player", "docSyntax": "getPilotCameraRotation object", "broadcasted": false, "description": "Returns rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .", "server": false}, "curatorEditingAreaType": {"reviewLevel": 2, "syntax": "curatorEditingAreaType <object>", "local": false, "example": "", "docSyntax": "curatorEditingAreaType obj", "broadcasted": false, "description": "Returns type of edit areas assigned to curator (blacklist/whitelist).", "server": false}, "setShadowDistance": {"reviewLevel": 2, "syntax": "setShadowDistance <scalar>", "local": false, "example": "setShadowDistance 1000", "docSyntax": "setShadowDistance value", "broadcasted": false, "description": "Sets the shadows rendering distance.", "server": false}, "isObjectRTD": {"reviewLevel": 1, "syntax": "isObjectRTD helicopter", "local": false, "example": "_heliRTD = isObjectRTD vehicle player;", "docSyntax": "isObjectRTD helicopter", "broadcasted": false, "description": "Returns true if RTD model is loaded", "server": false}, "BIS_fnc_garage": {"reviewLevel": 2, "syntax": "[mode,<any>] call BIS_fnc_garage", "local": false, "example": "[\"Open\",true] call BIS_fnc_garage;", "docSyntax": "[mode,params] call BIS_fnc_garage", "broadcasted": false, "description": "Splendid Virtual Arsenal Garage", "server": false}, "BIS_fnc_preload": {"reviewLevel": 2, "syntax": "call BIS_fnc_preload", "local": false, "example": "call BIS_fnc_preload;", "docSyntax": "call BIS_fnc_preload", "broadcasted": false, "description": "Start automatic loading screen upon mission start. On client, it will finish only when server is finished.", "server": false}, "primaryWeaponMagazine": {"reviewLevel": 2, "syntax": "primaryWeaponMagazine <objUnit>", "local": false, "example": "hint primaryWeaponMagazine player; //[\"30Rnd_65x39_caseless_mag\"]", "docSyntax": "primaryWeaponMagazine unit", "broadcasted": false, "description": "Returns array containing class name of currently loaded primary weapon magazine (or magazines in case of weapon having grenade launcher), otherwise it returns []. This command is used for infantry weapons only.", "server": false}, "deleteSite": {"reviewLevel": 1, "syntax": "deleteSite site", "local": false, "example": "", "docSyntax": "deleteSite site", "broadcasted": false, "description": "Removes the site.", "server": false}, "removeHeadgear": {"reviewLevel": 2, "syntax": "removeHeadgear <objUnit>", "local": false, "example": "removeHeadgear player;", "docSyntax": "removeHeadgear unit", "broadcasted": true, "description": "Removes headgear from a unit. If unit has no headgear command quietly fails.", "server": true}, "removeMusicEventHandler": {"reviewLevel": 2, "syntax": "removeMusicEventHandler [type,<scalar>]", "local": false, "example": "removeMusicEventHandler [\"MusicStart\", 12];", "docSyntax": "removeMusicEventHandler [type, id]", "broadcasted": false, "description": "Removes specified music track event handler.", "server": false}, "BIS_fnc_moduleTTCPIn": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "setAmmoOnPylon": {"reviewLevel": 2, "syntax": "<objVehicle> setAmmoOnPylon [pylon <string>/<scalar>,ammo count]", "local": false, "example": "(vehicle player) setAmmoOnPylon [1, 12];", "docSyntax": "vehicle setAmmoOnPylon [pylon name/index, ammo count]", "broadcasted": false, "description": "Set count of ammo in magazine on pylon", "server": false}, "setVehicleReportRemoteTargets": {"reviewLevel": 2, "syntax": "<objVehicle> setVehicleReportRemoteTargets <bool>", "local": false, "example": "(vehicle player) setVehicleReportRemoteTargets true;", "docSyntax": "vehicle setVehicleReportRemoteTargets bool", "broadcasted": false, "description": "Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the Side center.", "server": false}, "ropeCreate": {"reviewLevel": 2, "syntax": "ropeCreate [fromObject,fromPoint,toObject,toPoint,segments,length]", "local": false, "example": "myRope = ropeCreate [vehicle player, \"slingload0\", myCargo, [0, 0, 0], 10]; //A3 example", "docSyntax": "ropeCreate [fromObject, fromPoint, toObject, toPoint, segments, length]", "broadcasted": false, "description": "Create a rope (PhysX rope in Arma 3).", "server": false}, "terrainIntersectAtASL": {"reviewLevel": 2, "syntax": "terrainIntersectAtASL [pos1,pos2]", "local": false, "example": "_posASL = terrainIntersectAtASL [eyePos player, getPosASL chopper];", "docSyntax": "terrainIntersectAtASL [pos1, pos2]", "broadcasted": false, "description": "Checks for intersection of terrain between two ASL positions. Same as terrainIntersectASL, only returns intersect position instead of Boolean", "server": false}, "diag_list": {"reviewLevel": 2, "syntax": "diag_list <string>", "local": false, "example": "diag_list \"toggle\";", "docSyntax": "diag_list name", "broadcasted": false, "description": "Returns an array of all diag modes available in the game.", "server": false}, "queryItemsPool": {"reviewLevel": 2, "syntax": "queryItemsPool <string>", "local": false, "example": "", "docSyntax": "queryItemsPool name", "broadcasted": false, "description": "Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).", "server": false}, "BIS_fnc_taskSetType": {"example": "[_taskId:string,_taskType:string] call BIS_fnc_taskSetType;", "server": false, "broadcasted": false, "description": "Sets task type to given task. Parameters: 0: STRING - task id 1: STRING - task type Returns: STRING - task id", "local": false}, "ropeAttachedObjects": {"reviewLevel": 1, "syntax": "ropeAttachedObjects ropesOwner", "local": false, "example": "_cargoArray = ropeAttachedObjects heli1;", "docSyntax": "ropeAttachedObjects ropesOwner", "broadcasted": false, "description": "Returns an array of all objects that are attached to a vehicle with ropes. This command is the opposite of ropeAttachedTo.", "server": false}, "BIS_fnc_initCuratorAttribute": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_paramCountdown": {"reviewLevel": 2, "syntax": "<scalar> call BIS_fnc_paramCountdown", "local": false, "example": "360 call BIS_fnc_paramCountdown;", "docSyntax": "number call BIS_fnc_paramCountdown", "broadcasted": false, "description": "Set side mission time.", "server": false}, "velocityModelSpace": {"reviewLevel": 2, "syntax": "velocityModelSpace <objVehicle>", "local": false, "example": "velocityModelSpace _chopper; comment \"Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]\";", "docSyntax": "velocityModelSpace vehicle", "broadcasted": false, "description": "Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.", "server": false}, "load": {"reviewLevel": 2, "syntax": "load <objUnit>", "local": false, "example": "load player;", "docSyntax": "load unit", "broadcasted": false, "description": "Returns current sum of mass from items stored in all unit's containers. Load is calculated by the following formula: _loadPlayer = loadAbs player / getNumber (configFile >> \"CfgInventoryGlobalVariable\" >> \"maxSoldierLoad\");", "server": false}, "BIS_fnc_taskSetState": {"reviewLevel": 2, "syntax": "[<string>,taskState,showHint] call BIS_fnc_taskSetState", "local": false, "example": "[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskSetState;", "docSyntax": "[taskName, taskState, showHint] call BIS_fnc_taskSetState", "broadcasted": false, "description": "Set a task's state.", "server": false}, "checkVisibility": {"reviewLevel": 2, "syntax": "[ignore,LOD,ignore2] checkVisibility [beg,end]", "local": false, "example": "_cansee = [objNull, \"VIEW\"] checkVisibility [eyePos player, eyePos unit1];", "docSyntax": "[ignore, LOD, ignore2] checkVisibility [beg, end]", "broadcasted": false, "description": "Checks if one position is visible from another position and how much. The results can be affected by getTerrainGrid value, especially if position is near the ground. Particle effects such as smoke can also affect the results.", "server": false}, "deleteVehicleCrew": {"reviewLevel": 2, "syntax": "<objVehicle> deleteVehicleCrew <objUnit>", "local": false, "example": "heli deleteVehicleCrew driver heli;", "docSyntax": "vehicle deleteVehicleCrew unit", "broadcasted": true, "description": "Deletes a member of the crew of a vehicle. Human players cannot be deleted.", "server": true}, "waypointLoiterType": {"reviewLevel": 1, "syntax": "waypointLoiterType waypoint", "local": false, "example": "_type = waypointLoiterType [groupOne, 1]", "docSyntax": "waypointLoiterType waypoint", "broadcasted": false, "description": "Gets the waypoint loiter type. Waypoint uses format Waypoint.", "server": false}, "addTorque": {"reviewLevel": 1, "syntax": "<object> addTorque torque", "local": false, "example": "Apply torque [1000,0,0] to object not factoring object positioning: _wheel addTorque [1000,0,0];", "docSyntax": "object addTorque torque", "broadcasted": true, "description": "Applies torque (rotation momentum) to the center of mass of the given object. Torque force is defined as vector [x, y, z] applied in world space. If you need to define torque in model space, convert the torque vector first by vectorModelToWorld or vectorModelToWorldVisual command. The torque applied as impulse. Diagram below explain which way the object would rotate. For more information see NVIDIA docs", "server": true}, "BIS_fnc_taskReal": {"reviewLevel": 2, "syntax": "[<string>,owner] call BIS_fnc_taskReal", "local": false, "example": "[ \"testTask\", player ] call BIS_fnc_taskReal; //Returns Task testTask (id 0)", "docSyntax": "[taskName, owner] call BIS_fnc_taskReal", "broadcasted": false, "description": "Find the actual task associated with a task name assigned to a unit.", "server": false}, "removeAllContainers": {"reviewLevel": 2, "syntax": "removeAllContainers <objUnit>", "local": false, "example": "removeAllContainers player;", "docSyntax": "removeAllContainers unit", "broadcasted": false, "description": "Removes all containers from the unit.", "server": false}, "BIS_fnc_moduleEffectsSmoke": {"reviewLevel": 2, "syntax": "[module] call BIS_fnc_moduleEffectsSmoke", "local": false, "example": "[BIS_module] call BIS_fnc_moduleEffectsSmoke;", "docSyntax": "[module] call BIS_fnc_moduleEffectsSmoke", "broadcasted": false, "description": "Creates smoke on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "server": false}, "isLightOn": {"reviewLevel": 2, "syntax": "isLightOn <objVehicle>", "local": false, "example": "_lightsOn = isLightOn vehicle player;", "docSyntax": "isLightOn vehicle", "broadcasted": false, "description": "Returns true if vehicle headlights are on otherwise false.", "server": true}, "ctrlModelScale": {"reviewLevel": 2, "syntax": "ctrlModelScale <uiControl>", "local": false, "example": "_currentScale = ctrlModelScale _ctrl3D;", "docSyntax": "ctrlModelScale control", "broadcasted": false, "description": "Returns 3D control model scale", "server": false}, "BIS_fnc_damageChanged": {"reviewLevel": 2, "syntax": "call BIS_fnc_damageChanged", "local": false, "example": "call BIS_fnc_damageChanged;", "docSyntax": "call BIS_fnc_damageChanged", "broadcasted": false, "description": "Handle effects caused by changing of damage.", "server": false}, "pushBack": {"reviewLevel": 1, "syntax": "<array> pushBack element", "local": false, "example": "_arr = [1,2,3]; _arr pushBack 4; hint str _arr; //[1,2,3,4]", "docSyntax": "array pushBack element", "broadcasted": false, "description": "Insert an element to the back of the given array. This command modifies the original array. (see also: pushBackUnique)", "server": false}, "BIS_fnc_setOvercast": {"reviewLevel": 2, "syntax": "[1] call BIS_fnc_setOvercast;", "local": false, "example": "[0.5] call BIS_fnc_setOvercast;", "docSyntax": "[1] call BIS_fnc_setOvercast;", "broadcasted": false, "description": "Instantly set weather conditions and share it across network. Must be executed in scheduled environment.", "server": false}, "BIS_fnc_moduleCuratorAddEditingArea": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "windDir": {"reviewLevel": 2, "syntax": "windDir", "local": false, "example": "if (windDir < 45 || windDir > 315) then { hint \"I feel a northern wind\"; };", "docSyntax": "windDir", "broadcasted": false, "description": "Returns the current wind azimuth.", "server": false}, "BIS_fnc_ctrlFitToTextHeight": {"reviewLevel": 2, "syntax": "[<uiControl>,offset,<scalar>] spawn BIS_fnc_ctrlFitToTextHeight", "local": false, "example": "_height = [_ctrl, 1.5, 3] spawn BIS_fnc_ctrlFitToTextHeight;", "docSyntax": "[control,offset,time] spawn BIS_fnc_ctrlFitToTextHeight", "broadcasted": false, "description": "Resize structured text control to fit its text height.", "server": false}, "backpackContainer": {"reviewLevel": 2, "syntax": "backpackContainer <objUnit>", "local": false, "example": "hint str backpackContainer player; //1a5f7900# 163944: backpack_fast.p3d", "docSyntax": "backpackContainer unit", "broadcasted": false, "description": "Returns a cargo container of a unit's backpack.", "server": false}, "BIS_fnc_missileLaunchPositionFix": {"example": "", "server": false, "broadcasted": false, "description": "Workaround fix for ATGM/SAM launch positions Parameter(s): 0: OBJECT - vehicle 1: OBJECT - projectile 2: STRING - selection to adjust missile's position to 3: STRING - type of projectile that should be adjusted Returns: BOOL - success Example: [_vehicle,_missile,\"missile_move\",\"MissileBase\"] call BIS_fnc_missileLaunchPositionFix", "local": false}, "remove3DENConnection": {"reviewLevel": 2, "syntax": "remove3DENConnection [type,from,to]", "local": false, "example": "remove3DENConnection [\"RandomStart\",get3DENSelected \"Object\",\"marker_0\"] Remove random start on marker \"marker_0\" from all selected objects.", "docSyntax": "remove3DENConnection [type, from, to]", "broadcasted": false, "description": "Remove connection between entities.", "server": false}, "buldozer_reloadOperMap": {"reviewLevel": 2, "syntax": "buldozer_reloadOperMap", "local": false, "example": "buldozer_reloadOperMap;", "docSyntax": "buldozer_reloadOperMap", "broadcasted": false, "description": "Reload oper map visible in costMap diag tool. Working only in buldozer.", "server": false}, "BIS_fnc_ORBATGetGroupParams": {"reviewLevel": 2, "syntax": "[path] call BIS_fnc_ORBATGetGroupParams", "local": false, "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\" ] call BIS_fnc_ORBATGetGroupParams;", "docSyntax": "[path] call BIS_fnc_ORBATGetGroupParams", "broadcasted": false, "description": "Returns group params from CfgORBAT.", "server": false}, "BIS_fnc_moveAction": {"reviewLevel": 2, "syntax": "_string = [<objUnit>,returnConfig] call BIS_fnc_moveAction;", "local": false, "example": "_actionName = [player, false] call BIS_fnc_moveAction; _actionConfig = [player, true] call BIS_fnc_moveAction;", "docSyntax": "_string = [unit, returnConfig] call BIS_fnc_moveAction;", "broadcasted": false, "description": "Return current move action (used in playAction, playActionNow and switchAction)", "server": false}, "showScoretable": {"reviewLevel": 1, "syntax": "showScoretable force", "local": false, "example": "showScoretable 1;", "docSyntax": "showScoretable force", "broadcasted": false, "description": "Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be closed manually, when it is force closed, it cannot be opened manually.", "server": false}, "setParticleFire": {"reviewLevel": 1, "syntax": "source setParticleFire [coreIntensity,coreDistance,damageTime]", "local": false, "example": "_emitter = \"#particlesource\" createVehicleLocal (getPos player); _emitter setParticleClass \"MediumSmoke\"; _emitter setParticleFire [0.3,1.0,0.1];", "docSyntax": "source setParticleFire [coreIntensity, coreDistance, damageTime]", "broadcasted": false, "description": "Set fire parameters to particle effect. Note: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands setParticleClass or setParticleParams to do so (see example). Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleFire [ coreIntensity, coreDistance, damageTime ];", "server": true}, "addOwnedMine": {"reviewLevel": 1, "syntax": "<objUnit> addOwnedMine mine", "local": false, "example": "player addOwnedMine SuperMine;", "docSyntax": "Unit addOwnedMine mine", "broadcasted": false, "description": "Sets ownership over a remotely detonatable mine to the unit.", "server": false}, "ctrlSetFontSecondary": {"reviewLevel": 1, "syntax": "<uiControl> ctrlSetFontSecondary fontClass", "local": false, "example": "_control ctrlSetFontSecondary \"TahomaB\";", "docSyntax": "ctrl ctrlSetFontSecondary fontClass", "broadcasted": false, "description": "Sets the font size of the secondary text of given control.", "server": false}, "ctrlAnimateModel": {"reviewLevel": 2, "syntax": "<uiControl> ctrlAnimateModel [source,phase]", "local": false, "example": "_control3D ctrlAnimateModel [\"Close\",1];", "docSyntax": "control ctrlAnimateModel [source, phase]", "broadcasted": false, "description": "Process an animation of 3D Dialog Control. Command uses name defined by source property and works similar like animateSource command.", "server": false}, "tvAdd": {"reviewLevel": 2, "syntax": "tvAdd [<scalar>,pathParent,<string>]", "local": false, "example": "_index = _ctrl tvAdd [[], \"Parent Item\"];", "docSyntax": "tvAdd [idc, pathParent, text]", "broadcasted": false, "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See Tree View Path for more information.", "server": false}, "addWeaponGlobal": {"reviewLevel": 2, "syntax": "<objUnit> addWeaponGlobal <string>", "local": false, "example": "{ _x addMagazineGlobal \"Laserbatteries\"; _x addWeaponGlobal \"Laserdesignator\"; } forEach allUnits;", "docSyntax": "unit addWeaponGlobal weapon", "broadcasted": true, "description": "Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot. To make sure the added weapon is loaded and ready, add the magazine first.", "server": true}, "BIS_fnc_functionMeta": {"reviewLevel": 1, "syntax": "fncName call BIS_fnc_functionMeta", "local": false, "example": "\"BIS_fnc_functionMeta\" call BIS_fnc_functionMeta;", "docSyntax": "fncName call BIS_fnc_functionMeta", "broadcasted": false, "description": "Returns function's meta data.", "server": false}, "BIS_fnc_log": {"reviewLevel": 1, "syntax": "param call BIS_fnc_log;", "local": false, "example": "diag_tickTime call BIS_fnc_log;", "docSyntax": "param call BIS_fnc_log;", "broadcasted": false, "description": "Log debug message.", "server": false}, "BIS_fnc_initModules": {"reviewLevel": 2, "syntax": "[modules] call BIS_fnc_initModules", "local": false, "example": "[module_1,module_2] call BIS_fnc_initModules;", "docSyntax": "[modules] call BIS_fnc_initModules", "broadcasted": false, "description": "Wait until all modules using the Arma 3 Module Framework are initialized.", "server": false}, "getShotParents": {"reviewLevel": 1, "syntax": "getShotParents projectile", "local": false, "example": "_shotParents = getShotParents myProjectile;", "docSyntax": "getShotParents projectile", "broadcasted": false, "description": "Returns shot information Array for the given projectile in format [vehicle, instigator], where vehicle is the vehicle the shot was fired from, and the instigator is the person who pulled the trigger. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.", "server": false}, "getHit": {"reviewLevel": 1, "syntax": "<objVehicle> getHit selection", "local": false, "example": "player getHit \"head\";", "docSyntax": "vehicle getHit selection", "broadcasted": false, "description": "Returns selection damage. Same as getHitPointDamage only argument is selection part instead of hit point. Note: Some part names are in Czech; see translation table.", "server": true}, "BIS_fnc_diagMacrosAuthor": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "vehicleReportRemoteTargets": {"reviewLevel": 2, "syntax": "vehicleReportRemoteTargets <objVehicle>", "local": false, "example": "vehicleReportRemoteTargets (vehicle player);", "docSyntax": "vehicleReportRemoteTargets vehicle", "broadcasted": false, "description": "Gets whether the vehicle shares acquired targets via datalink with the Side center.", "server": false}, "BIS_fnc_configExtremes": {"reviewLevel": 2, "syntax": "[paths,properties,(propertyTypes,propertyDefaults)] call BIS_fnc_configExtremes", "local": false, "example": "[[configFile >> \"cfgWeapons\"] call BIS_fnc_returnChildren, [\"maxRange\",\"reloadTime\"]] call BIS_fnc_configExtremes;", "docSyntax": "[paths, properties, (propertyTypes, propertyDefaults)] call BIS_fnc_configExtremes", "broadcasted": false, "description": "Scan config paths and return min and max values for each property.", "server": false}, "BIS_fnc_typeText": {"reviewLevel": 2, "syntax": "[stringLines,posX,posY,rootFormat] call BIS_fnc_typeText", "local": false, "example": "[ [ [\"CAMP ROGAIN,\",\"<t align = 'center' shadow = '1' size = '0.7' font='PuristaBold'>%1</t>\"], [\"RESUPPLY POINT\",\"<t align = 'center' shadow = '1' size = '0.7'>%1</t><br/>\"], [\"10 MINUTES LATER ...\",\"<t align = 'center' shadow = '1' size = '1.0'>%1</t>\"] ] ] spawn BIS_fnc_typeText;", "docSyntax": "[stringLines, posX, posY, rootFormat] call BIS_fnc_typeText", "broadcasted": false, "description": "Types a structured text on the screen, letter by letter, cursor blinking.", "server": false}, "BIS_fnc_holdActionRemove": {"reviewLevel": 2, "syntax": "[<object>,<scalar>] call BIS_fnc_holdActionRemove;", "local": false, "example": "[ player,10 ] call BIS_fnc_holdActionRemove;", "docSyntax": "[target,ID] call BIS_fnc_holdActionRemove;", "broadcasted": false, "description": "Removes a hold action. If the removed hold actions was the last one, disable the scripted framework.", "server": false}, "serverName": {"reviewLevel": 2, "syntax": "serverName", "local": false, "example": "", "docSyntax": "serverName", "broadcasted": false, "description": "Returns name of the hosting server in MP, \"\" in SP.", "server": false}, "getArtilleryAmmo": {"reviewLevel": 2, "syntax": "getArtilleryAmmo [unit1,unit2,unit3....]", "local": false, "example": "if (\"8Rnd_82mm_Mo_Flare_white\" in getArtilleryAmmo [ _mortar1, _mortar2, _mortar3, _mortar4 ]) then { hint \"Sir, we have white flares, sir!\"; };", "docSyntax": "getArtilleryAmmo [unit1, unit2, unit3....]", "broadcasted": false, "description": "Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.", "server": true}, "getObjectTextures": {"reviewLevel": 2, "syntax": "getObjectTextures <object>", "local": false, "example": "_textures = getObjectTextures player;", "docSyntax": "getObjectTextures obj", "broadcasted": false, "description": "Gets all custom textures (hiddenSelectionsTextures) associated with the object.", "server": true}, "clearItemCargo": {"reviewLevel": 1, "syntax": "clearItemCargo box", "local": false, "example": "clearItemCargo myBox;", "docSyntax": "clearItemCargo box", "broadcasted": false, "description": "Removes all items from ammo box (or any general weapon holder container).", "server": false}, "BIS_fnc_taskParent": {"reviewLevel": 2, "syntax": "<string> call BIS_fnc_taskParent", "local": false, "example": "\"BIS_task_01\" call BIS_fnc_taskParent;", "docSyntax": "taskName call BIS_fnc_taskParent", "broadcasted": false, "description": "Return a sub-task's parent task.", "server": false}, "commandSuppressiveFire": {"reviewLevel": 2, "syntax": "<objUnit> commandSuppressiveFire <object>", "local": true, "example": "_soldier commandSuppressiveFire [1869.508,5760.962,0.000]", "docSyntax": "unitName commandSuppressiveFire target", "broadcasted": false, "description": "Order the given unit to suppress a given position or target (via the radio).", "server": false}, "BIS_fnc_setDate": {"reviewLevel": 2, "syntax": "[date,global,transition] call BIS_fnc_setDate", "local": false, "example": "[[2035, 12, 31, 23, 59], true, true] call BIS_fnc_setDate;", "docSyntax": "[date, global, transition] call BIS_fnc_setDate", "broadcasted": false, "description": "Instantly set date and share it across network.", "server": false}, "BIS_fnc_relScaledDist": {"reviewLevel": 2, "syntax": "[referenceObject,relativeObject] call BIS_fnc_relScaledDist", "local": false, "example": "[ myTrigger, player ] call BIS_fnc_relScaledDist;", "docSyntax": "[referenceObject, relativeObject] call BIS_fnc_relScaledDist", "broadcasted": false, "description": "Exponentially inflated rational number between 0 and 1, with 1 being center and 0 being edge of the trigger. This function can be used to check where in a trigger area an object is. Is it near the border of the trigger area the number will go against 0.", "server": false}, "BIS_fnc_exportGroupFormations": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_sideIsEnemy": {"reviewLevel": 2, "syntax": "[sideA,sideB] call BIS_fnc_sideIsEnemy;", "local": false, "example": "_isEnemy = [west, east] call BIS_fnc_sideIsEnemy; //Checks if EAST is enemy to WEST.", "docSyntax": "[sideA, sideB] call BIS_fnc_sideIsEnemy;", "broadcasted": false, "description": "Determines if side B is enemy to side A the way the game engine does it. The relationship table can be found here: Side relations.", "server": false}, "BIS_fnc_scriptedWaypointType": {"reviewLevel": 2, "syntax": "[waypoint,type] call BIS_fnc_scriptedWaypointType", "local": false, "example": "[BIS_scripted_WP_01,\"returnString\"] call BIS_fnc_scriptedWaypointType;", "docSyntax": "[waypoint,type] call BIS_fnc_scriptedWaypointType", "broadcasted": false, "description": "Return CfgWaypoints type of scripted waypoint. Returns empty string/config when waypoint is not scripted Returns \"Custom\"/CfgWaypoints root when waypoint is using custom script.", "server": false}, "BIS_fnc_effectFiredHeliRocket": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "vectorDirVisual": {"reviewLevel": 1, "syntax": "vectorDirVisual objectName", "local": false, "example": "_dirVector = vectorDirVisual _unit;", "docSyntax": "vectorDirVisual objectName", "broadcasted": false, "description": "Return object's normalized direction vector in world space ([x,y,z]) in render time scope.", "server": true}, "BIS_fnc_moduleExecute": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setCollisionLight": {"reviewLevel": 1, "syntax": "<objVehicle> setCollisionLight set", "local": true, "example": "heli setCollisionLight true;", "docSyntax": "vehicle setCollisionLight set", "broadcasted": true, "description": "Switches collision lights of a vehicle on/off. Note that the vehicle has to be local.", "server": false}, "BIS_fnc_changeSupportRadioChannel": {"example": "", "server": false, "broadcasted": false, "description": "Changes the radio channel for Support module-related protocol. Parameter(s): _this select 0: SIDE - Affected side _this select 1: ANY - Channel setting Returns: nothing", "local": false}, "allCutLayers": {"reviewLevel": 2, "syntax": "allCutLayers", "local": false, "example": "_allLayers = allCutLayers;", "docSyntax": "allCutLayers", "broadcasted": false, "description": "Returns all named layers used by cutRsc, cutText, cutObj or cutFadeOut. The layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like so:", "server": false}, "BIS_fnc_paramRespawnTickets": {"reviewLevel": 2, "syntax": "<scalar> call BIS_fnc_paramRespawnTickets", "local": false, "example": "360 call BIS_fnc_paramRespawnTickets;", "docSyntax": "number call BIS_fnc_paramRespawnTickets", "broadcasted": false, "description": "Set side respawn tickets.", "server": false}, "BIS_fnc_moduleCountdown": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "inArea": {"reviewLevel": 1, "syntax": "position inArea <objTrigger>", "local": false, "example": "_playerIsInside = player inArea _myTrigger;", "docSyntax": "position inArea trigger", "broadcasted": false, "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse.", "server": false}, "BIS_fnc_liveFeedEffects": {"reviewLevel": 1, "syntax": "effect call BIS_fnc_liveFeedEffects", "local": false, "example": "1 call BIS_fnc_liveFeedEffects;", "docSyntax": "effect call BIS_fnc_liveFeedEffects", "broadcasted": false, "description": "Add effect to the current live feed.", "server": false}, "addWeaponTurret": {"reviewLevel": 2, "syntax": "<objVehicle> addWeaponTurret [weaponName,turretPath]", "local": true, "example": "_tank addWeaponTurret [\"LMG_M200\",[0,0]];", "docSyntax": "vehicle addWeaponTurret [weaponName, turretPath]", "broadcasted": true, "description": "Adds a weapon to the turret. Use turret path [-1] for driver's turret.", "server": false}, "BIS_fnc_VRCourseCommandingVehicles2": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "magazinesAllTurrets": {"reviewLevel": 2, "syntax": "magazinesAllTurrets <objVehicle>", "local": false, "example": "_mags = magazinesAllTurrets vehicle player;", "docSyntax": "magazinesAllTurrets vehicle", "broadcasted": false, "description": "Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts.", "server": true}, "BIS_fnc_effectFiredSmokeLauncher_boat": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "joinString": {"reviewLevel": 1, "syntax": "<array> joinString separator", "local": false, "example": "_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"] _str joinString \" \"; // \"This is a sample string\"", "docSyntax": "array joinString separator", "broadcasted": false, "description": "Joins array into String with provided separator. Array can be of mixed types, all elements will be converted to String prior to joining, but the fastest operation is on the array of Strings.", "server": false}, "windStr": {"reviewLevel": 2, "syntax": "windStr", "local": false, "example": "10 setWindStr (0.5 * windStr);", "docSyntax": "windStr", "broadcasted": false, "description": "Returns the current wind strength.", "server": false}, "BIS_fnc_ORBATTooltip": {"reviewLevel": 2, "syntax": "[<object>,<uiControl>,position] call BIS_fnc_ORBATTooltip", "local": false, "example": "", "docSyntax": "[target, control, position] call BIS_fnc_ORBATTooltip", "broadcasted": false, "description": "Animates an ORBAT viewer.", "server": false}, "allowSprint": {"reviewLevel": 1, "syntax": "<objUnit> allowSprint state", "local": false, "example": "player allowSprint false", "docSyntax": "unit allowSprint state", "broadcasted": false, "description": "Force player to run/jog if set to false.", "server": false}, "BIS_fnc_diagLoop": {"reviewLevel": 2, "syntax": "[<code>,<scalar>] spawn BIS_fnc_diagLoop", "local": false, "example": "[{systemChat \"Loop!\"}, 0.5] spawn BIS_fnc_diagLoop;", "docSyntax": "[code,delay] spawn BIS_fnc_diagLoop", "broadcasted": false, "description": "Runs scripted loop. Repeated call terminates previous loops.", "server": false}, "BIS_fnc_getCloudletParams": {"reviewLevel": 2, "syntax": "[cfgCloudletClass] call BIS_fnc_getCloudletParams", "local": false, "example": "[\"AmmoLightSmokeParticles\"] call BIS_fnc_getCloudletParams;", "docSyntax": "[cfgCloudletClass] call BIS_fnc_getCloudletParams", "broadcasted": false, "description": "Return particle params of CfgCloudlets class.", "server": false}, "BIS_fnc_moduleCreateDiaryRecord": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "append": {"reviewLevel": 2, "syntax": "array1 append array2", "local": false, "example": "_arr = [1,2,3]; _arr append [4,5,6]; hint str _arr; //[1,2,3,4,5,6]", "docSyntax": "array1 append array2", "broadcasted": false, "description": "Appends array2 to the back of array1 modifying array1.", "server": false}, "create3DENEntity": {"reviewLevel": 2, "syntax": "create3DENEntity [mode,class,position,(isEmpty)]", "local": false, "example": "dude1 = create3DENEntity [\"Object\",\"B_Soldier_F\",screenToWorld [0.5,0.5]];", "docSyntax": "create3DENEntity [mode, class, position, (isEmpty)]", "broadcasted": false, "description": "Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition.", "server": false}, "simulSetHumidity": {"reviewLevel": 1, "syntax": "simulSetHumidity humidity", "local": false, "example": "simulSetHumidity 1;", "docSyntax": "simulSetHumidity humidity", "broadcasted": false, "description": "Sets simul cloud cover. This command does not affect overcast value. This command has now been removed", "server": false}, "linkItem": {"reviewLevel": 2, "syntax": "<objUnit> linkItem <objItem>", "local": false, "example": "bluforUnit linkItem \"NVGoggles\"; opforUnit linkItem \"NVGoggles_OPFOR\"; independentUnit linkItem \"NVGoggles_INDEP\";", "docSyntax": "unit linkItem item", "broadcasted": true, "description": "Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.", "server": true}, "BIS_fnc_setRank": {"reviewLevel": 2, "syntax": "[<object>,rank] call BIS_fnc_setRank", "local": false, "example": "[ vehicle player, \"Captain\" ] call BIS_fnc_setRank;", "docSyntax": "[target, rank] call BIS_fnc_setRank", "broadcasted": false, "description": "Set rank of vehicle crew.", "server": false}, "BIS_fnc_effectFiredLongSmoke": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "worldSize": {"reviewLevel": 2, "syntax": "worldSize", "local": false, "example": "_size = worldSize;", "docSyntax": "worldSize", "broadcasted": false, "description": "Returns config size of the current world. Equivalent to worldName call BIS_fnc_mapSize.", "server": false}, "splitString": {"reviewLevel": 1, "syntax": "str splitString delimiters", "local": false, "example": "_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"] _str joinString \" \"; // \"This is a sample string\"", "docSyntax": "str splitString delimiters", "broadcasted": false, "description": "An SQF version of C++ strtok. Splits given string str into an array of tokens according to given delimiters. In addition, if empty string \"\" is used for delimiters, str is split by each character.", "server": false}, "targetKnowledge": {"reviewLevel": 2, "syntax": "<objUnit> targetKnowledge <object>", "local": false, "example": "_allInfo = _soldierOne targetKnowledge _jeepOne;", "docSyntax": "unit targetKnowledge target", "broadcasted": false, "description": "Returns unit's knowledge about target. The returned array includes information whether the target is", "server": false}, "BIS_fnc_moduleVolume": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "ctrlIDC": {"reviewLevel": 2, "syntax": "ctrlIDC <uiControl>", "local": false, "example": "ctrlIDC _ctrl;", "docSyntax": "ctrlIDC control", "broadcasted": false, "description": "Returns control IDC.", "server": false}, "BIS_fnc_addRespawnPosition": {"reviewLevel": 2, "syntax": "[<<object>>,<position>] call BIS_fnc_addRespawnPosition;", "local": false, "example": "[west, myRespawnAPC] call BIS_fnc_addRespawnPosition;", "docSyntax": "[<target>,<position>] call BIS_fnc_addRespawnPosition;", "broadcasted": false, "description": "Add a respawn position for respawn menu.", "server": false}, "BIS_fnc_exportCfgHints": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "set3DENLogicType": {"reviewLevel": 1, "syntax": "objects set3DENLogicType classname", "local": false, "example": "[get3DENSelected \"logic\" select 0] set3DENLogicType \"MiscOR_F\";", "docSyntax": "objects set3DENLogicType classname", "broadcasted": false, "description": "Sets the new type of Logic object(s). For other objects use set3DENObjectType", "server": false}, "setCurrentChannel": {"reviewLevel": 1, "syntax": "setCurrentChannel channel", "local": false, "example": "_isDirectSelected = setCurrentChannel 5; // sets Direct channel as current active", "docSyntax": "setCurrentChannel channel", "broadcasted": false, "description": "Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see enableChannel), this is why this command returns boolean, true on success or false on failure. Correspondence between channel and number:", "server": false}, "BIS_fnc_getParamValue": {"reviewLevel": 1, "syntax": "paramClass call BIS_fnc_getParamValue;", "local": false, "example": "_viewDistance = \"ViewDistance\" call BIS_fnc_getParamValue;", "docSyntax": "paramClass call BIS_fnc_getParamValue;", "broadcasted": false, "description": "Returns the value of mission param given by the class name. This function is global and will return selected param value on any PC including JIP. For backward compatibility it also supports \"param1\" and \"param2\".", "server": false}, "BIS_fnc_rankParams": {"reviewLevel": 2, "syntax": "[source,infoType] call BIS_fnc_rankParams", "local": false, "example": "_shortRank = [player, \"displayNameShort\"] call BIS_fnc_rankParams;", "docSyntax": "[source, infoType] call BIS_fnc_rankParams", "broadcasted": false, "description": "Return information about military rank.", "server": false}, "setParticleClass": {"reviewLevel": 1, "syntax": "source setParticleClass className", "local": false, "example": "_source01 = \"#particlesource\" createVehicleLocal _pos01; _source01 setParticleClass \"ObjectDestructionFire1Smallx\"; _source01 attachTo [_object,[0,0,0]];", "docSyntax": "source setParticleClass className", "broadcasted": false, "description": "Sets particle source parameters using existing particle config from CfgCloudlets class. Use setParticleParams subsequently if you need to overwrite some values.", "server": true}, "enableUAVWaypoints": {"reviewLevel": 1, "syntax": "uav enableUAVWaypoints <bool>", "local": false, "example": "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; // returns false", "docSyntax": "uav enableUAVWaypoints enable", "broadcasted": false, "description": "Enables/disables the option for player to set waypoints for UAV in AV terminal.", "server": false}, "getAllEnvSoundControllers": {"reviewLevel": 1, "syntax": "getAllEnvSoundControllers position", "local": false, "example": "getAllEnvSoundControllers position player;", "docSyntax": "getAllEnvSoundControllers position", "broadcasted": false, "description": "Returns an array containing the names and values of environmental variables that can be used in simple expressions when configuring sounds.", "server": false}, "removeWeaponTurret": {"reviewLevel": 2, "syntax": "<objVehicle> removeWeaponTurret [weaponName,turretPath]", "local": true, "example": "_tank removeWeaponTurret [\"LMG_M200\",[0,0]];", "docSyntax": "vehicle removeWeaponTurret [weaponName, turretPath]", "broadcasted": true, "description": "Removes weapon from the turret. Use turret path [-1] for driver's turret.", "server": false}, "BIS_fnc_markerToTrigger": {"reviewLevel": 2, "syntax": "[<string>,<objTrigger>,localChange] call BIS_fnc_markerToTrigger", "local": false, "example": "_createdMarker = [\"marker1\", myTrigger] call BIS_fnc_markerToTrigger;", "docSyntax": "[markerName, trigger, localChange] call BIS_fnc_markerToTrigger", "broadcasted": false, "description": "Makes an existing or new marker cover a trigger area.", "server": false}, "flagSide": {"reviewLevel": 2, "syntax": "flagSide <objFlag>", "local": false, "example": "_flagSide = flagSide flag;", "docSyntax": "flagSide flag", "broadcasted": false, "description": "Returns Side of the local instance of the flag. A getter for setFlagSide.", "server": true}, "getPylonMagazines": {"reviewLevel": 2, "syntax": "getPylonMagazines <objVehicle>", "local": false, "example": "getPylonMagazines (vehicle player)", "docSyntax": "getPylonMagazines vehicle", "broadcasted": false, "description": "Return array of magazines on pylons", "server": false}, "actionName": {"reviewLevel": 1, "syntax": "actionName action", "local": false, "example": "actionName \"ReloadMagazine\"", "docSyntax": "actionName action", "broadcasted": false, "description": "Returns localized name of action.", "server": false}, "BIS_fnc_curatorAutomaticPositions": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "itemCargo": {"reviewLevel": 1, "syntax": "itemCargo box", "local": false, "example": "hint str (itemCargo (vestContainer player));", "docSyntax": "itemCargo box", "broadcasted": false, "description": "Get array with items from ammo box (or any general weapon holder container).", "server": true}, "isUAVConnectable": {"reviewLevel": 2, "syntax": "<object> isUAVConnectable [uav,checkAllItems]", "local": false, "example": "connectable = unit isUAVConnectable [uav,true];", "docSyntax": "object isUAVConnectable [uav, checkAllItems]", "broadcasted": false, "description": "Returns true if UAV is connectable by AV terminal(s).", "server": false}, "createMPCampaignDisplay": {"reviewLevel": 1, "syntax": "<uiDisplay> createMPCampaignDisplay class", "local": false, "example": "findDisplay 46 createMPCampaignDisplay \"Apex\";", "docSyntax": "display createMPCampaignDisplay class", "broadcasted": false, "description": "Create a MP campaign display. The class name must be a mission collection declared in the configs; in example, configFile/\"CfgMissions\"/\"MPMissions\"/\"Apex\"/", "server": false}, "setCuratorCoef": {"reviewLevel": 2, "syntax": "<objCurator> setCuratorCoef [action,<scalar>]", "local": false, "example": "curatorModule setCuratorCoef [\"Place\", 1]", "docSyntax": "curatorObj setCuratorCoef [action,coef]", "broadcasted": false, "description": "Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).", "server": false}, "enableCaustics": {"reviewLevel": 2, "syntax": "enableCaustics <bool>", "local": false, "example": "enableCaustics true", "docSyntax": "enableCaustics bool", "broadcasted": false, "description": "Enable/disable caustics drawing.", "server": false}, "BIS_fnc_VRCourseCommandingActions2": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "ctRowCount": {"reviewLevel": 2, "syntax": "<scalar> = ctRowCount <uiControl>", "local": true, "example": "ctRowCount _control;", "docSyntax": "Number = ctRowCount Control", "broadcasted": false, "description": "Returns number of rows (headers not included) in the RscControlsTable.", "server": false}, "enableUAVConnectability": {"reviewLevel": 2, "syntax": "<object> enableUAVConnectability [uav,checkAllItems]", "local": false, "example": "unit enableUAVConnectability [uav,true];", "docSyntax": "object enableUAVConnectability [uav, checkAllItems]", "broadcasted": false, "description": "Enables unit's AV terminal(s) connecting to UAV.", "server": false}, "BIS_fnc_addCuratorAreaFromTrigger": {"reviewLevel": 2, "syntax": "[curatorLogic,triggers,checkedPosition,triggerType,editingArea,cameraArea] call BIS_fnc_addCuratorAreaFromTrigger", "local": false, "example": "[ BIS_curator,[trigger_1,trigger_2],[0,0,0],true, true, true ] call BIS_fnc_addCuratorAreaFromTrigger;", "docSyntax": "[curatorLogic,triggers,checkedPosition,triggerType,editingArea,cameraArea] call BIS_fnc_addCuratorAreaFromTrigger", "broadcasted": false, "description": "Add curator editing / camera area based on triggers.", "server": false}, "CfgRemoteExec": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_getVirtualWeaponCargo": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_getVirtualWeaponCargo", "local": false, "example": "BIS_ammoBox call BIS_fnc_getVirtualWeaponCargo;", "docSyntax": "object call BIS_fnc_getVirtualWeaponCargo", "broadcasted": false, "description": "Get virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "backpack": {"returns": "string", "reviewLevel": 4, "syntax": "backpack <objUnit>", "local": false, "example": "_classname = backpack player;", "docSyntax": "backpack unit", "broadcasted": false, "description": "Returns a class of a backpack.", "server": false}, "currentThrowable": {"reviewLevel": 2, "syntax": "currentThrowable <objUnit>", "local": false, "example": "currentThrowable player; //[\"SmokeShellGreen\",\"SmokeShellGreenMuzzle\",[1.00002e+007,0]]", "docSyntax": "currentThrowable player", "broadcasted": false, "description": "Returns currently selected throwable, which will be launched if user presses \"G\".", "server": false}, "rainbow": {"reviewLevel": 2, "syntax": "rainbow", "local": false, "example": "_intensity = rainbow;", "docSyntax": "rainbow", "broadcasted": false, "description": "Returns the current rainbow intensity.", "server": false}, "waves": {"reviewLevel": 2, "syntax": "waves", "local": false, "example": "waveIntensity = waves;", "docSyntax": "waves", "broadcasted": false, "description": "Return waves value.", "server": false}, "openCuratorInterface": {"reviewLevel": 2, "syntax": "openCuratorInterface", "local": false, "example": "Open interface: openCuratorInterface;", "docSyntax": "openCuratorInterface", "broadcasted": false, "description": "Force opens curator interface.", "server": false}, "removeMissionEventHandler": {"reviewLevel": 2, "syntax": "removeMissionEventHandler [type,<scalar>]", "local": false, "example": "for \"_i\" from 0 to 4 do { missionNamespace setVariable [ format [\"handler%1\",_i],addMissionEventHandler [\"Loaded\",\"hint \"\"_i\"\";\"]]; }; removeMissionEventHandler [\"Loaded\",handler2]; //Remove the third index under type \"Loaded\"", "docSyntax": "removeMissionEventHandler [type, index]", "broadcasted": false, "description": "Removes mission event handler added by addMissionEventHandler. When any handler is removed, all handler indices higher that the deleted one should be decremented.", "server": false}, "BIS_fnc_moduleObjectiveSector": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setCompassOscillation": {"reviewLevel": 2, "syntax": "setCompassOscillation [angle,frequencyMin,frequencyMax]", "local": false, "example": "Set compass to oscillate every second within -90/+90 degrees: setCompassOscillation [rad 90, 1, 1];", "docSyntax": "setCompassOscillation [angle, frequencyMin, frequencyMax]", "broadcasted": false, "description": "This command sets random heading on the player's compass (both, in map and in 3D view) with given frequency, which is also randomised. To reset the compass back to defaults, execute: setCompassOscillation [-1, 0, 0];.", "server": false}, "getMissionConfigValue": {"reviewLevel": 1, "syntax": "getMissionConfigValue attribute", "local": false, "example": "_respawnDelay = getMissionConfigValue [\"respawnDelay\",0] Returns respawn delay value. Replaces the previous approach which would scan only the external Description.ext file, but ignore the value set in the Eden Editor: _respawnDelay = getNumber (missionConfigFile >> \"respawnDelay\"); // Old approach", "docSyntax": "getMissionConfigValue attribute", "broadcasted": false, "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is nil. If the attribute defined in multiple places, the command checks them in the following order:", "server": false}, "removeCuratorEditingArea": {"reviewLevel": 1, "syntax": "<objCurator> removeCuratorEditingArea editAreaID", "local": false, "example": "myCurator removeCuratorEditingArea 3;", "docSyntax": "curatorObj removeCuratorEditingArea editAreaID", "broadcasted": false, "description": "Removes editing area for given curator.", "server": false}, "lbSetSelectColorRight": {"reviewLevel": 2, "syntax": "lbSetSelectColorRight [<scalar>,<scalar>,<scalar>]", "local": false, "example": "lbSetSelectColorRight [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetSelectColorRight [idc, index, color]", "broadcasted": false, "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.", "server": false}, "setObjectViewDistance": {"reviewLevel": 2, "syntax": "setObjectViewDistance <scalar>", "local": false, "example": "setObjectViewDistance 2000;", "docSyntax": "setObjectViewDistance distance", "broadcasted": false, "description": "Sets the rendering distance of objects (and shadows).", "server": false}, "speaker": {"reviewLevel": 2, "syntax": "speaker <objUnit>", "local": false, "example": "speaker player", "docSyntax": "speaker person", "broadcasted": false, "description": "Returns the speaker of a person.", "server": false}, "createSimpleObject": {"reviewLevel": 2, "syntax": "createSimpleObject [shapeName,positionWorld]", "local": false, "example": "_pos = player getRelPos [10, 0]; _tank = createSimpleObject [\"a3\\armor_f_beta\\apc_tracked_01\\apc_tracked_01_rcws_f.p3d\", _pos]; _tank setPos (_pos vectorAdd (getPosWorld _tank vectorDiff (_tank modelToWorld [0,0,0]))); _tank hideSelection [\"zasleh\", true]; _tank hideSelection [\"zasleh2\", true]; _tank hideSelection [\"clan\", true]; _tank animate [\"Wheel_podkoloL3\", 0.5, true]; _tank animate [\"Wheel_podkoloL6\", 0.5, true];", "docSyntax": "createSimpleObject [shapeName, positionWorld]", "broadcasted": true, "description": "Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.", "server": false}, "BIS_fnc_target": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_curatorVisionModes": {"reviewLevel": 2, "syntax": "[curator] call BIS_fnc_curatorVisionModes", "local": false, "example": "_visionModes = [Curator] call BIS_fnc_curatorVisionModes;", "docSyntax": "[curator] call BIS_fnc_curatorVisionModes", "broadcasted": false, "description": "Toggle curator vision mode.", "server": false}, "ctrlDelete": {"reviewLevel": 2, "syntax": "ctrlDelete <uiControl>", "local": false, "example": "ctrlDelete ((findDisplay 20000) displayCtrl 20001);", "docSyntax": "ctrlDelete control", "broadcasted": false, "description": "Deletes given control.", "server": false}, "edit3DENMissionAttributes": {"reviewLevel": 1, "syntax": "edit3DENMissionAttributes section", "local": false, "example": "edit3DENMissionAttributes \"Multiplayer\";", "docSyntax": "edit3DENMissionAttributes section", "broadcasted": false, "description": "Open a window with scenario attribute in given section.", "server": false}, "BIS_fnc_VRCourseCommandingBehaviour3": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "ctrlSetModel": {"reviewLevel": 1, "syntax": "<uiControl> ctrlSetModel model", "local": false, "example": "_control3D ctrlSetModel \"\\a3\\Ui_f\\objects\\Compass.p3d\";", "docSyntax": "control ctrlSetModel model", "broadcasted": false, "description": "Sets model for 3D Dialog Control.", "server": false}, "language": {"reviewLevel": 2, "syntax": "language", "local": false, "example": "_myLanguage = language; // will return \"English\" if game language is set to English", "docSyntax": "language", "broadcasted": false, "description": "Returns current game language.", "server": false}, "BIS_fnc_setTaskLocal": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_curatorAutomatic": {"reviewLevel": 2, "syntax": "[curator,sides,cheatCoef,infantyProb,groundProb,airProb,marineProb] call BIS_fnc_curatorAutomatic", "local": false, "example": "[curator_module,[ west, independent ,0.1,40,30,20,10] call BIS_fnc_curatorAutomatic;", "docSyntax": "[curator,sides,cheatCoef,infantyProb,groundProb,airProb,marineProb] call BIS_fnc_curatorAutomatic", "broadcasted": false, "description": "Spawn units based on curator settings. Used when curator role is not taken.", "server": false}, "BIS_fnc_modulePunishment": {"example": "", "server": false, "broadcasted": false, "description": "Make a unit play a punishment animation Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters", "local": false}, "enginesRpmRTD": {"reviewLevel": 2, "syntax": "enginesRpmRTD RTD_helicopter", "local": false, "example": "_UH80_E1 = (enginesRpmRTD _UH80) select 0;//engine 1 RPM _UH80_E2 = (enginesRpmRTD _UH80) select 1;//engine 2 RPM", "docSyntax": "enginesRpmRTD RTD_helicopter", "broadcasted": false, "description": "Returns all engines RPM", "server": false}, "tvPicture": {"reviewLevel": 2, "syntax": "tvPicture [<scalar>,[path]]", "local": true, "example": "tvPicture [101, [0]];", "docSyntax": "tvPicture [idc, [path]]", "broadcasted": false, "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.", "server": false}, "BIS_fnc_moduleRespawnTickets": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_respawnRounds": {"example": "", "server": false, "broadcasted": false, "description": "Disable respawn until players of only one side (including its allies) remains, then respawn everyone at once. When \"Rounds\" respawn is used by only one side, wait until all its players are dead. Parameter(s): BOOL - true to force round end SIDE - use any side to return side affected by round system (based on description.ext respawnTemplates settings) ARRAY - empty array to return if a round is still on (players of more than one involved faction are alive)", "local": false}, "BIS_fnc_moduleCuratorSetObjectCost": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_diagBulletCam": {"reviewLevel": 2, "syntax": "<objUnit> call BIS_fnc_diagBulletCam", "local": false, "example": "player call BIS_fnc_diagBulletCam;", "docSyntax": "unit call BIS_fnc_diagBulletCam", "broadcasted": false, "description": "Add a \"bullet camera\" to shots fired by the specified unit.", "server": false}, "isInRemainsCollector": {"reviewLevel": 1, "syntax": "isInRemainsCollector remain", "local": false, "example": "if (isInRemainsCollector unit1) then {hint \"unit1 is queued for disposal\"};", "docSyntax": "isInRemainsCollector remain", "broadcasted": false, "description": "Checks if unit or vehicle is queued for disposal after death.", "server": true}, "BIS_fnc_onPlayerConnected": {"reviewLevel": 2, "syntax": "[<code>,<any>]] call BIS_fnc_onPlayerConnected", "local": false, "example": "[ { params [\"_player\", \"_params\"]; hint name _player; hint _params; }, \"Parameter\" ] call BIS_fnc_onPlayerConnected;", "docSyntax": "[code, params]] call BIS_fnc_onPlayerConnected", "broadcasted": false, "description": "Executes a function on server every time a player connects the mission.", "server": false}, "isAutotest": {"reviewLevel": 2, "syntax": "isAutotest", "local": false, "example": "_bool = isAutotest", "docSyntax": "isAutotest", "broadcasted": false, "description": "Returns true if game was started with autotest parameter", "server": false}, "ropeUnwound": {"reviewLevel": 1, "syntax": "ropeUnwound rope", "local": false, "example": "_isUnwound = ropeUnwound (ropes heli1 select 0);", "docSyntax": "ropeUnwound rope", "broadcasted": false, "description": "False if unwinding in progress, otherwise true", "server": false}, "diag_setLightNew": {"reviewLevel": 1, "syntax": "diag_setLightNew config", "local": false, "example": "diag_setLightNew \"sunOrMoon = 1; diffuse[] = { 0, 0, 0, 0 }; diffuseCloud[] = { 0, 0, 0, 0 }; ambient[] = { 0, 0, 0, 0 }; ... \"", "docSyntax": "diag_setLightNew config", "broadcasted": false, "description": "Overrides currently used scene lightning. The operand is config that is placed as a string (not file). The changes may not be applied immediately, but can be forced by the call of simulWeatherSync.", "server": false}, "set3DENIconsVisible": {"reviewLevel": 2, "syntax": "set3DENIconsVisible [showMap,showScene]", "local": false, "example": "set3DENIconsVisible [ false, false ]; Hide all icons", "docSyntax": "set3DENIconsVisible [showMap, showScene]", "broadcasted": false, "description": "Toggle visibility of Eden Editor icons.", "server": false}, "getAllOwnedMines": {"reviewLevel": 2, "syntax": "getAllOwnedMines <objUnit>", "local": false, "example": "_mines = getAllOwnedMines player;", "docSyntax": "getAllOwnedMines unit", "broadcasted": false, "description": "Gets all mine objects this unit has ownership over.", "server": false}, "BIS_fnc_getRespawnMarkers": {"reviewLevel": 2, "syntax": "[<objSide>,vehicleMarkers] call BIS_fnc_getRespawnMarkers", "local": false, "example": "[west, false] call BIS_fnc_getRespawnMarkers;", "docSyntax": "[side,vehicleMarkers] call BIS_fnc_getRespawnMarkers", "broadcasted": false, "description": "Returns all respawn markers for given side.", "server": false}, "BIS_fnc_manageCuratorChallenges": {"reviewLevel": 2, "syntax": "[curator,challenges,numChallenges,rewards,defaultRewards]] call BIS_fnc_manageCuratorChallenges", "local": false, "example": "[ BIS_curator, nil, 1, [ [{ hint \"Message\" }, \"Description\" ] ] ] call BIS_fnc_manageCuratorChallenges;", "docSyntax": "[curator,challenges,numChallenges,rewards,defaultRewards]] call BIS_fnc_manageCuratorChallenges", "broadcasted": false, "description": "Handle repeated curator challenges. When rewards defined in the argument are exceeded, refilling points bar fill be offered instead.", "server": false}, "canSlingLoad": {"reviewLevel": 2, "syntax": "<objVehicle> canSlingLoad <objVehicle>", "local": false, "example": "_slingable = veh1 canSlingLoad veh2;", "docSyntax": "vehicle canSlingLoad cargo", "broadcasted": false, "description": "Returns true if it is possible to sling load cargo", "server": false}, "vectorAdd": {"reviewLevel": 2, "syntax": "vector1 vectorAdd vector2", "local": false, "example": "hint str (velocity unit1 vectorAdd velocity unit2);", "docSyntax": "vector1 vectorAdd vector2", "broadcasted": false, "description": "Adds two 3D vectors. Replaces BIS_fnc_vectorAdd.", "server": false}, "setWindForce": {"reviewLevel": 1, "syntax": "<scalar> setWindForce wind", "local": false, "example": "1800 setWindForce 0.5", "docSyntax": "time setWindForce wind", "broadcasted": false, "description": "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.", "server": false}, "setFeatureType": {"reviewLevel": 1, "syntax": "<object> setFeatureType type", "local": false, "example": "Set a building to be always rendered: building setFeatureType 2;", "docSyntax": "object setFeatureType type", "broadcasted": false, "description": "Enable/disable object as a feature/landmark. Possible feature types:", "server": true}, "allDeadMen": {"reviewLevel": 2, "syntax": "allDeadMen", "local": false, "example": "{ deleteVehicle _x } forEach allDeadMen;", "docSyntax": "allDeadMen", "broadcasted": false, "description": "Return a list of dead units including agents. Dead unit might be inside vehicle.", "server": false}, "missionVersion": {"reviewLevel": 2, "syntax": "missionVersion", "local": false, "example": "_version = missionVersion;", "docSyntax": "missionVersion", "broadcasted": false, "description": "Returns the version of the current mission.", "server": false}, "BIS_fnc_packStaticWeapon": {"reviewLevel": 2, "syntax": "[<objGroup>,<string>,<array>] call BIS_fnc_packStaticWeapon;", "local": false, "example": "[leader1] call BIS_fnc_packStaticWeapon;", "docSyntax": "[group, weapon, leaderPos] call BIS_fnc_packStaticWeapon;", "broadcasted": false, "description": "This function will make weapon team pack a static weapon. The weapon crew will pack carried weapon (or given weapon if different) and follow leader. Requires three personnel in the team: Team Leader, Gunner and Asst. Gunner. This function is MP compatible", "server": false}, "BIS_fnc_VRDrawBorder": {"reviewLevel": 2, "syntax": "[center,radius] call BIS_fnc_VRDrawBorder", "local": false, "example": "[ [0,0,0], 200 ] call BIS_fnc_VRDrawBorder;", "docSyntax": "[center, radius] call BIS_fnc_VRDrawBorder", "broadcasted": false, "description": "Visualizes area border (used primarily for VR missions).", "server": false}, "getCustomAimingCoef": {"reviewLevel": 1, "syntax": "getCustomAimCoef <objUnit>", "local": false, "example": "_coef = getCustomAimCoef player", "docSyntax": "getCustomAimCoef unit", "broadcasted": false, "description": "Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.", "server": true}, "BIS_fnc_effectFiredArtillery": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "vehicleReportOwnPosition": {"reviewLevel": 2, "syntax": "vehicleReportOwnPosition <objVehicle>", "local": false, "example": "vehicleReportOwnPosition (vehicle player);", "docSyntax": "vehicleReportOwnPosition vehicle", "broadcasted": false, "description": "Gets whether the vehicle shares its own position via datalink with the Side center.", "server": false}, "detectedMines": {"reviewLevel": 2, "syntax": "detectedMines <objSide>", "local": false, "example": "detectedMines west;", "docSyntax": "detectedMines side", "broadcasted": false, "description": "Returns an array of all mines detected by a given side", "server": false}, "configSourceMod": {"reviewLevel": 1, "syntax": "configSourceMod config", "local": false, "example": "configSourceMod (configFile >> \"CfgVehicles\" >> \"Heli_Transport_04_base_F\"); //Returns \"heli\"", "docSyntax": "configSourceMod config", "broadcasted": false, "description": "Returns modDir of the mod that given config class was loaded from.", "server": false}, "getObjectType": {"reviewLevel": 2, "syntax": "getObjectType <object>", "local": false, "example": "_objType = getObjectType player;", "docSyntax": "getObjectType object", "broadcasted": false, "description": "Returns object type as a number:", "server": false}, "curatorCamera": {"reviewLevel": 2, "syntax": "curatorCamera", "local": false, "example": "_camCurator = curatorCamera", "docSyntax": "curatorCamera", "broadcasted": false, "description": "Returns curator camera object.", "server": false}, "tvText": {"reviewLevel": 2, "syntax": "tvText [<scalar>,path]", "local": false, "example": "tvText [101, [0]];", "docSyntax": "tvText [idc, path]", "broadcasted": false, "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.", "server": false}, "set3DENLayer": {"reviewLevel": 1, "syntax": "entity set3DENLayer layerID", "local": false, "example": "_myLayer = -1 add3DENLayer \"CTRG\"; player set3DENLayer _myLayer;", "docSyntax": "entity set3DENLayer layerID", "broadcasted": false, "description": "Set layer for Eden Entity.", "server": false}, "BIS_fnc_respawnMenuPosition": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "binocular": {"reviewLevel": 2, "syntax": "binocular <objUnit>", "local": false, "example": "_binocs = binocular player; //Rangefinder", "docSyntax": "binocular unit", "broadcasted": false, "description": "Returns class name of currently used binocular weapon.", "server": false}, "getPosASLW": {"reviewLevel": 2, "syntax": "getPosASLW <object>", "local": false, "example": "_pos = getPosASLW _diver;", "docSyntax": "getPosASLW obj", "broadcasted": false, "description": "Returns the object position height above sea surface (waves included).", "server": true}, "BIS_fnc_diagKeyTest": {"reviewLevel": 1, "syntax": "mode call BIS_fnc_diagKeyTest", "local": false, "example": "0 call BIS_fnc_diagKeyTest;", "docSyntax": "mode call BIS_fnc_diagKeyTest", "broadcasted": false, "description": "Returns all user actions according to mode.", "server": false}, "BIS_fnc_taskSetAlwaysVisible": {"example": "[_taskId:string,_alwaysVisible:bool] call BIS_fnc_taskSetAlwaysVisible;", "server": false, "broadcasted": false, "description": "Flags task to be or not to be always visible. Parameters: 0: STRING - task id 1: BOOL - always visible flag Returns: STRING - task id", "local": false}, "enableRopeAttach": {"reviewLevel": 2, "syntax": "<objVehicle> enableRopeAttach <bool>", "local": false, "example": "(vehicle player) enableRopeAttach false;", "docSyntax": "vehicle enableRopeAttach enable", "broadcasted": false, "description": "Enable/disable ability to attach or be attached to ropes for given vehicle", "server": false}, "BIS_fnc_diagHit": {"reviewLevel": 2, "syntax": "call BIS_fnc_diagHit", "local": false, "example": "call BIS_fnc_diagHit;", "docSyntax": "call BIS_fnc_diagHit", "broadcasted": false, "description": "Tracks received wounds. (getNumber (missionConfigFile >> \"diagHit\") > 0) has to be true.", "server": false}, "difficultyEnabledRTD": {"reviewLevel": 2, "syntax": "difficultyEnabledRTD", "local": false, "example": "_rtdOn = difficultyEnabledRTD", "docSyntax": "difficultyEnabledRTD", "broadcasted": false, "description": "Returns true if rotorlib simulation is enabled. Forcing by mission is included", "server": false}, "BIS_fnc_moduleCuratorSetCamera": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "isFlashlightOn": {"reviewLevel": 2, "syntax": "<objUnit> isFlashlightOn <string>", "local": false, "example": "player isFlashlightOn (currentWeapon player);", "docSyntax": "unit isFlashlightOn weapon", "broadcasted": false, "description": "Returns true if there is a linked and enabled flashlight on a given weapon.", "server": false}, "BIS_fnc_moduleObjectiveRaceStart": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "curatorCoef": {"reviewLevel": 1, "syntax": "<objCurator> curatorCoef action", "local": false, "example": "curatorModule curatorCoef \"Place\"", "docSyntax": "curatorObj curatorCoef action", "broadcasted": false, "description": "Returns current coeficient setting.", "server": false}, "BIS_fnc_playerSideFaction": {"reviewLevel": 2, "syntax": "<objSide> call BIS_fnc_playerSideFaction", "local": false, "example": "west call BIS_fnc_playerSideFaction;", "docSyntax": "side call BIS_fnc_playerSideFaction", "broadcasted": false, "description": "Return representative faction of the given side. Faction of the first detected player is used.", "server": false}, "addItemPool": {"reviewLevel": 2, "syntax": "addItemPool [itemName,count]", "local": false, "example": "addItemPool [\"ItemGPS\", 5];", "docSyntax": "addItemPool [itemName, count]", "broadcasted": false, "description": "Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)", "server": false}, "actionParams": {"reviewLevel": 1, "syntax": "entity actionParams <scalar>", "local": false, "example": "_params = player actionParams 0;", "docSyntax": "entity actionParams id", "broadcasted": false, "description": "Returns Array with params for given user action id (similar to addAction param array). The output array is of the following format: [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, textWindowBackground, textWindowForeground, selection], where:", "server": false}, "setStamina": {"reviewLevel": 1, "syntax": "<objUnit> setStamina stamina", "local": false, "example": "player setStamina 42;", "docSyntax": "unit setStamina stamina", "broadcasted": false, "description": "Set units' stamina (seconds until depletion)", "server": false}, "tvSetPictureRightColor": {"reviewLevel": 2, "syntax": "tvSetPictureRightColor [<scalar>,path,<scalar>]", "local": false, "example": "tvSetPictureRightColor [101, [0], [1,0,1,1]];", "docSyntax": "tvSetPictureRightColor [idc, path, color]", "broadcasted": false, "description": "Sets color of the right picture on the tree view item defined by path", "server": false}, "BIS_fnc_respawnSpectator": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "ctSetRowTemplate": {"reviewLevel": 1, "syntax": "<uiControl> ctSetRowTemplate Config", "local": true, "example": "_control ctSetRowTemplate _configPath;", "docSyntax": "Control ctSetRowTemplate Config", "broadcasted": false, "description": "Takes config path to the new row template. Clears the whole RscControlsTable and sets the new row template (Deleting all rows and headers is easier to implement than replacing the rows and filling them with new data. IDCs could overflow etc.).", "server": false}, "BIS_fnc_exportCfgWeapons": {"reviewLevel": 2, "syntax": "[mode,patches] call BIS_fnc_exportCfgWeapons", "local": false, "example": "[\"Weapon\"] call BIS_fnc_exportCfgWeapons;", "docSyntax": "[mode, patches] call BIS_fnc_exportCfgWeapons", "broadcasted": false, "description": "Export list of weapons for Community Wiki.", "server": false}, "BIS_fnc_markWaypoints": {"example": "", "server": false, "broadcasted": false, "description": "Creates a marker on each uncompleted waypoint and marks it checked after completing that WP. Note: \"On Activation\" WP code is used for handling the markers; if this code is overwritten during the course, it can break this functionality Parameter(s): _this select 0: OBJECT - unit who will have its waypoints marked _this select 1 (Optional, use \"\" for default): STRING - text of hint shown after completing a waypoint,\u00c2\u00a0%1 is used for WP number (default \"\") _this select 2 (Optional, use [] for default): ARRAY of STRINGS - marker text format for [uncompleted, completed] waypoints,\u00c2\u00a0%1 is used for WP number (default [\"%1\", \"%1\"]) _this select 3 (Optional, use [] for default): ARRAY of STRINGS - marker icon for [uncompleted, completed] waypoints (default [\"mil_circle\", \"mil_circle\"]) _this select 4 (Optional, use [] for default): ARRAY of STRINGS - marker color for [uncompleted, completed] waypoints (default [\"ColorRed\", \"ColorGreen\"]) _this select 5 (Optional, use [] for default): ARRAY of NUMBERS - marker size for [uncompleted, completed] waypoints (default [0.75, 0.75]) Returns: NOTHING", "local": false}, "BIS_fnc_tridentHandleDamage": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_tridentHandleDamage", "local": false, "example": "BIS_tridentObject call BIS_fnc_tridentHandleDamage;", "docSyntax": "object call BIS_fnc_tridentHandleDamage", "broadcasted": false, "description": "Register a unit as Trident unit. When competing sides are still friendly and the unit is killed by the competing side, the killer won't be punsihed by negative score. Instead, Trident relationship will decrease.", "server": false}, "ctrlTextHeight": {"reviewLevel": 2, "syntax": "ctrlTextHeight <uiControl>", "local": false, "example": "_h = ctrlTextHeight _ctrl;", "docSyntax": "ctrlTextHeight control", "broadcasted": false, "description": "Returns the control text height. Supported control types are:", "server": false}, "BIS_fnc_taskChildren": {"reviewLevel": 1, "syntax": "taskID call BIS_fnc_taskChildren", "local": false, "example": "\"task_1\" call BIS_fnc_taskChildren;", "docSyntax": "taskID call BIS_fnc_taskChildren", "broadcasted": false, "description": "Return a task's sub-tasks.", "server": false}, "removeVest": {"reviewLevel": 2, "syntax": "removeVest <objUnit>", "local": false, "example": "removeVest player;", "docSyntax": "removeVest unit", "broadcasted": true, "description": "Removes vest from unit.", "server": true}, "getDirVisual": {"reviewLevel": 2, "syntax": "getDirVisual <object>", "local": false, "example": "_dir = getDirVisual player;", "docSyntax": "getDirVisual object", "broadcasted": false, "description": "Returns object's heading in the range from 0 to 360 in render time scope.", "server": true}, "isVehicleSensorEnabled": {"reviewLevel": 1, "syntax": "<objVehicle> isVehicleSensorEnabled componentName", "local": false, "example": "vehicle player isVehicleSensorEnabled \"PassiveRadarSensorComponent\"; // [ [\"PassiveRadarSensorComponent\",true] ]", "docSyntax": "vehicle isVehicleSensorEnabled componentName", "broadcasted": false, "description": "Returns class name (to identify list based on component name) and info if given sensor is enabled", "server": false}, "BIS_fnc_objectType": {"reviewLevel": 2, "syntax": "<objUnit> call BIS_fnc_objectType", "local": false, "example": "_myType = player call BIS_fnc_objectType;", "docSyntax": "anObject call BIS_fnc_objectType", "broadcasted": false, "description": "Return object category and type.", "server": false}, "vest": {"reviewLevel": 2, "syntax": "vest <objUnit>", "local": false, "example": "_myVest = vest player;", "docSyntax": "vest unit", "broadcasted": false, "description": "Returns name of vest.", "server": true}, "enginesIsOnRTD": {"reviewLevel": 2, "syntax": "enginesIsOnRTD RTD_helicopter", "local": false, "example": "_enginesTaru = enginesIsOnRTD _taru// Returns [true,true]", "docSyntax": "enginesIsOnRTD RTD_helicopter", "broadcasted": false, "description": "Returns which engines are producing some work.", "server": false}, "BIS_fnc_moduleObjectiveRaceFinish": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "allTurrets": {"reviewLevel": 2, "syntax": "allTurrets <objVehicle>", "local": false, "example": "_turretPaths = allTurrets SlammerUP; //[[0],[0,0]] _turretPaths = allTurrets [SlammerUP, true]; //[[0],[0,0]] <- Commander turret is also FFV turret _turretPaths = allTurrets [SlammerUP, false]; //[[0]]", "docSyntax": "allTurrets vehicle", "broadcasted": false, "description": "Returns array of available turret paths from vehicle object. To look up turrets from config, use BIS_fnc_allTurrets", "server": false}, "BIS_fnc_uniqueClasses": {"example": "", "server": false, "broadcasted": false, "description": "Composes array of classes with unique param (based on returned value of passed code). If class inherits the param from parent, it's not listed. Parameter(s): 0: CONFIG - class which is searched 1: CODE - code executed on class, which is passed as _this Returns: ARRAY - classes in format [class,value] class: CONFIG - class with unique param value: ANY - value returned by the passed code for the given class", "local": false}, "getRelPos": {"reviewLevel": 2, "syntax": "<object> getRelPos [<scalar>,direction]", "local": false, "example": "Find position 100 metres away at player's 3 o'clock:_relpos = player getRelPos [100, 90];", "docSyntax": "object getRelPos [distance, direction]", "broadcasted": false, "description": "Returns position, which is given distance and relative direction away from original object.", "server": true}, "ctClear": {"reviewLevel": 2, "syntax": "ctClear <uiControl>", "local": true, "example": "ctClear _control;", "docSyntax": "ctClear ctrl", "broadcasted": false, "description": "Removes all the lines from the RscControlsTable. Returns Nothing.", "server": false}, "BIS_fnc_VRCourseLaunchers2": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "inPolygon": {"returns": "bool", "reviewLevel": 4, "syntax": "<array> inPolygon <array>", "local": false, "example": "_isInside = [100,100,0] inPolygon [[0,0,0],[1000,1000,0],[1000,0,0]];", "docSyntax": "position inPolygon polygon", "broadcasted": false, "description": "Checks whether position is inside given polygon", "server": false}, "getPosASLVisual": {"reviewLevel": 2, "syntax": "getPosASLVisual <object>", "local": false, "example": "_playerRenderedPosASL = getPosASLVisual player;", "docSyntax": "getPosASLVisual object", "broadcasted": false, "description": "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope. Alias of visiblePositionASL.", "server": true}, "addItemToVest": {"reviewLevel": 2, "syntax": "<objUnit> addItemToVest <objItem>", "local": false, "example": "player addItemToVest \"itemGPS\";", "docSyntax": "unit addItemToVest item", "broadcasted": true, "description": "Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.", "server": true}, "BIS_fnc_moduleFuel": {"reviewLevel": 2, "syntax": "[logic,units,isActivated] call BIS_fnc_moduleFuel", "local": false, "example": "[myLogic, [unit1, unit2, vehicle1], true] call BIS_fnc_moduleFuel;", "docSyntax": "[logic, units, isActivated] call BIS_fnc_moduleFuel", "broadcasted": false, "description": "Set fuel of linked units' vehicles.", "server": false}, "setCenterOfMass": {"reviewLevel": 1, "syntax": "myObject setCenterOfMass [com,<scalar>]", "local": true, "example": "myObject setCenterOfMass [[0,-1,0],0.5];", "docSyntax": "myObject setCenterOfMass [com, time]", "broadcasted": true, "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.", "server": false}, "isIRLaserOn": {"reviewLevel": 2, "syntax": "<objUnit> isIRLaserOn <string>", "local": false, "example": "player isIRLaserOn currentWeapon player;", "docSyntax": "unit isIRLaserOn weapon", "broadcasted": false, "description": "Returns true if there is a linked and enabled IR on the given weapon.", "server": false}, "BIS_fnc_modulePoster": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_isBuildingEnterable": {"reviewLevel": 1, "syntax": "param call BIS_fnc_isBuildingEnterable;", "local": false, "example": "[_building] call BIS_fnc_isBuildingEnterable;", "docSyntax": "param call BIS_fnc_isBuildingEnterable;", "broadcasted": false, "description": "Check whether a building or structure has available positions defined within model.", "server": false}, "BIS_fnc_moduleGroupID": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "isFilePatchingEnabled": {"reviewLevel": 2, "syntax": "isFilePatchingEnabled", "local": false, "example": "_state = isFilePatchingEnabled;", "docSyntax": "isFilePatchingEnabled", "broadcasted": false, "description": "Returns true if file patching is enabled otherwise false", "server": false}, "BIS_fnc_param": {"reviewLevel": 2, "syntax": "[input,<scalar>,(defaultValue,dataTypes,requiredCount)] call BIS_fnc_param;", "local": false, "example": "_target = [_this, 0, objNull, [objNull,[]], [2,3]] call BIS_fnc_param;", "docSyntax": "[input,index,(defaultValue,dataTypes,requiredCount)] call BIS_fnc_param;", "broadcasted": false, "description": "Load a script parameter. See Functions Library (Arma 3) for detailed description.", "server": false}, "nearestTerrainObjects": {"reviewLevel": 2, "syntax": "nearestTerrainObjects [position,types,radius,sort,2Dmode]", "local": false, "example": "nearestTerrainObjects [player, [\"Tree\",\"Bush\"], 200];", "docSyntax": "nearestTerrainObjects [position, types, radius, sort, 2Dmode]", "broadcasted": false, "description": "Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array). In contrast to nearestObjects this command returns terrain placed objects like trees, rocks and buildings which don't necessarily need an associated config class.", "server": false}, "mineActive": {"reviewLevel": 2, "syntax": "mineActive <object>", "local": false, "example": "if (mineActive _mine) then {hint \"BOOM!\"};", "docSyntax": "mineActive obj", "broadcasted": false, "description": "Checks if the given mine is active.", "server": true}, "synchronizedWaypoints": {"reviewLevel": 2, "syntax": "synchronizedWaypoints <object>", "local": false, "example": "", "docSyntax": "synchronizedWaypoints obj", "broadcasted": false, "description": "Returns the list of waypoints synchronized with a given trigger or waypoint.", "server": false}, "incapacitatedState": {"reviewLevel": 2, "syntax": "incapacitatedState <objUnit>", "local": false, "example": "_result = incapacitatedState player;", "docSyntax": "incapacitatedState person", "broadcasted": false, "description": "Returns the incapacitated state of the given unit.", "server": false}, "tvData": {"reviewLevel": 2, "syntax": "tvData [<scalar>,[path]]", "local": true, "example": "tvData [101, [0]];", "docSyntax": "tvData [idc, [path]]", "broadcasted": false, "description": "Returns string data from item on given path. IDC means id of parent Tree View.", "server": false}, "uniformContainer": {"reviewLevel": 2, "syntax": "uniformContainer <objUnit>", "local": false, "example": "hint str uniformContainer player; //2df7dd00# 163941: dummyweapon.p3d", "docSyntax": "uniformContainer unit", "broadcasted": false, "description": "Returns a cargo container of a unit's uniform.", "server": false}, "vehicleReceiveRemoteTargets": {"reviewLevel": 2, "syntax": "vehicleReceiveRemoteTargets <objVehicle>", "local": false, "example": "vehicleReceiveRemoteTargets (vehicle player);", "docSyntax": "vehicleReceiveRemoteTargets vehicle", "broadcasted": false, "description": "Gets whether the vehicle can acquire targets via datalink from the Side center.", "server": false}, "get3DENIconsVisible": {"reviewLevel": 2, "syntax": "get3DENIconsVisible", "local": false, "example": "if (get3DENIconsVisible select 0) then {hint \"Icons are visible in the map.\";};", "docSyntax": "get3DENIconsVisible", "broadcasted": false, "description": "Get visibility state of Eden Editor icons.", "server": false}, "loadUniform": {"reviewLevel": 2, "syntax": "loadUniform <objUnit>", "local": false, "example": "_weight = loadUniform player;", "docSyntax": "loadUniform unit", "broadcasted": false, "description": "Returns current sum of mass from items stored in a uniform.", "server": false}, "addBackpackGlobal": {"reviewLevel": 1, "syntax": "<objUnit> addBackpackGlobal backpack", "local": false, "example": "player addBackpackGlobal \"B_AssaultPack_khk\";", "docSyntax": "unit addBackpackGlobal backpack", "broadcasted": true, "description": "Adds a backpack to a unit (even non-local)", "server": true}, "BIS_fnc_removeCuratorIcon": {"reviewLevel": 2, "syntax": "[<object>,<scalar>] call BIS_fnc_removeCuratorIcon", "local": false, "example": "[curatorModule, 5] call BIS_fnc_removeCuratorIcon;", "docSyntax": "[object, id] call BIS_fnc_removeCuratorIcon", "broadcasted": false, "description": "Remove icon displayed in curator interface.", "server": false}, "enableCopilot": {"reviewLevel": 2, "syntax": "<objVehicle> enableCopilot <bool>", "local": true, "example": "if (!isCopilotEnabled myHeli) then { myHeli enableCopilot true; };", "docSyntax": "vehicle enableCopilot enable", "broadcasted": true, "description": "Enables copilot actions.", "server": false}, "vectorDiff": {"reviewLevel": 2, "syntax": "vector1 vectorDiff vector2", "local": false, "example": "hint str (velocity car vectorDiff velocity bike);", "docSyntax": "vector1 vectorDiff vector2", "broadcasted": false, "description": "Subtracts one 3D vector from another. (vector1 - vector2)", "server": false}, "BIS_fnc_groupIndicator": {"reviewLevel": 1, "syntax": "argument call BIS_fnc_groupIndicator", "local": false, "example": "[] call BIS_fnc_groupIndicator; // starts group indicator", "docSyntax": "argument call BIS_fnc_groupIndicator", "broadcasted": false, "description": "Displays Group Indicator (to the right of the screen in", "server": false}, "BIS_fnc_taskHint": {"reviewLevel": 2, "syntax": "[<string>,taskState] call BIS_fnc_taskHint", "local": false, "example": "[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskHint;", "docSyntax": "[taskName, taskState] call BIS_fnc_taskHint", "broadcasted": false, "description": "Shows a task hint.", "server": false}, "diag_recordTurretLimits": {"reviewLevel": 1, "syntax": "diag_recordTurretLimits section", "local": false, "example": "diag_recordTurretLimits true;", "docSyntax": "diag_recordTurretLimits section", "broadcasted": false, "description": "Start recording tool for creating turret aiming limits.", "server": false}, "enableWeaponDisassembly": {"reviewLevel": 2, "syntax": "enableWeaponDisassembly <bool>", "local": false, "example": "enableWeaponDisassembly false;", "docSyntax": "enableWeaponDisassembly enable", "broadcasted": true, "description": "Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly.", "server": true}, "tvSetPictureColorSelected": {"reviewLevel": 2, "syntax": "<uiControl> tvSetPictureColorSelected [path,<scalar>]", "local": false, "example": "_control tvSetPictureColorSelected [[0], [1,0,1,1]]", "docSyntax": "control tvSetPictureColorSelected [path, color]", "broadcasted": false, "description": "Sets the color of the left picture of a tree item defined by path when item is selected", "server": false}, "BIS_fnc_wpSuppress": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_VRFadeIn": {"reviewLevel": 2, "syntax": "call BIS_fnc_VRFadeIn", "local": false, "example": "call BIS_fnc_VRFadeIn;", "docSyntax": "call BIS_fnc_VRFadeIn", "broadcasted": false, "description": "Fade In effect for VR.", "server": false}, "currentMagazineTurret": {"reviewLevel": 2, "syntax": "<objVehicle> currentMagazineTurret [turret path]", "local": false, "example": "_magazine = MBT_Kuma currentMagazineTurret [0];", "docSyntax": "vehicle currentMagazineTurret [turret path]", "broadcasted": false, "description": "Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".", "server": false}, "addMagazines": {"reviewLevel": 2, "syntax": "<objUnit> addMagazines [magazineName,count]", "local": false, "example": "player addMagazines [\"30Rnd_65x39_caseless_mag\", 3];", "docSyntax": "unit addMagazines [magazineName, count]", "broadcasted": true, "description": "Adds multiple magazines to the unit. For cargo containers use addMagazineCargoGlobal command.", "server": true}, "isAbleToBreathe": {"reviewLevel": 2, "syntax": "isAbleToBreathe <objUnit>", "local": false, "example": "_canBreath = isAbleToBreathe player;", "docSyntax": "isAbleToBreathe unit", "broadcasted": false, "description": "If unit is diving and doesn't have a re-breather, it returns false. Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns true.", "server": false}, "BIS_fnc_holdActionAdd": {"reviewLevel": 2, "syntax": "[<object>,title,idleIcon,progressIcon,conditionShow,conditionProgress,codeStart,codeProgress,codeCompleted,codeInterrupted,arguments,duration,priority,removeCompleted,showUnconscious] call BIS_fnc_holdActionAdd", "local": false, "example": "[player, \"Kill\", \"\", \"\", \"true\", \"true\", { hint \"Started!\" }, { systemChat str (_this select 3) }, { player setDamage 1 }, { hint \"Afraid of death?\" }, [], 10, nil, true, false] call BIS_fnc_holdActionAdd;", "docSyntax": "[target, title, idleIcon, progressIcon, conditionShow, conditionProgress, codeStart, codeProgress, codeCompleted, codeInterrupted, arguments, duration, priority, removeCompleted, showUnconscious] call BIS_fnc_holdActionAdd", "broadcasted": false, "description": "Adds an action to an object which requires the user to hold a key to perform the action.", "server": false}, "getSoundControllerResult": {"reviewLevel": 1, "syntax": "<object> getSoundControllerResult configEntry", "local": false, "example": "_result = (vehicle player) getSoundControllerResult (configFile >> \"cfgVehicles\" >> typeOf (vehicle player) >> \"sounds\" >> \"idle_ext\" >> \"volume\");", "docSyntax": "obj getSoundControllerResult configEntry", "broadcasted": false, "description": "Returns the calculated value of simple expression in config.", "server": false}, "addCuratorEditableObjects": {"reviewLevel": 2, "syntax": "<objCurator> addCuratorEditableObjects [objects,addCrew]", "local": false, "example": "curatorModule addCuratorEditableObjects [[car],true ];", "docSyntax": "curatorObj addCuratorEditableObjects [objects,addCrew]", "broadcasted": false, "description": "Register objects which can be edited by a curator.", "server": false}, "setCuratorEditingAreaType": {"reviewLevel": 2, "syntax": "<objCurator> setCuratorEditingAreaType <bool>", "local": false, "example": "curatorModule setCuratorEditingAreaType true", "docSyntax": "curatorObj setCuratorEditingAreaType bool", "broadcasted": false, "description": "Set whether curator can edit in all editing areas (true) or outside of them (false).", "server": false}, "ctrlModelDirAndUp": {"reviewLevel": 2, "syntax": "ctrlModelDirAndUp <uiControl>", "local": false, "example": "_vectorDirAndUp = ctrlModelDirAndUp _control3D;", "docSyntax": "ctrlModelDirAndUp control", "broadcasted": false, "description": "Returns vectorDir and vectorUp of the model used in 3D Dialog Control.", "server": false}, "BIS_fnc_playMusic": {"reviewLevel": 2, "syntax": "[class,start,volume] call BIS_fnc_playMusic", "local": false, "example": "[\"LeadTrack04_F\",10,0.5] call BIS_fnc_playMusic; //Song starts at 10 seconds with 50% volume.", "docSyntax": "[class,start,volume] call BIS_fnc_playMusic", "broadcasted": false, "description": "Plays given song.", "server": false}, "ctrlTextWidth": {"reviewLevel": 2, "syntax": "ctrlTextWidth <uiControl>", "local": false, "example": "_w = ctrlTextWidth _ctrl;", "docSyntax": "ctrlTextWidth control", "broadcasted": false, "description": "Returns the control text width. Supported control types are:", "server": false}, "revealMine": {"reviewLevel": 1, "syntax": "<objSide> revealMine mine", "local": false, "example": "west revealMine _mine;", "docSyntax": "side revealMine mine", "broadcasted": false, "description": "Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)", "server": false}, "isCopilotEnabled": {"reviewLevel": 2, "syntax": "isCopilotEnabled <objVehicle>", "local": false, "example": "if (!isCopilotEnabled myHeli) then { myHeli enableCopilot true; };", "docSyntax": "isCopilotEnabled vehicle", "broadcasted": false, "description": "Returns true if copilots actions are enabled.", "server": true}, "BIS_fnc_sideIsFriendly": {"reviewLevel": 2, "syntax": "[sideA,sideB] call BIS_fnc_sideIsFriendly;", "local": false, "example": "_isFriendly = [west, east] call BIS_fnc_sideIsFriendly; //Checks if EAST is friendly to WEST.", "docSyntax": "[sideA, sideB] call BIS_fnc_sideIsFriendly;", "broadcasted": false, "description": "Determines if side B is friendly to side A the way the game engine does it. The relationship table can be found here: Side relations.", "server": false}, "ppEffectEnabled": {"reviewLevel": 1, "syntax": "ppEffectEnabled effect", "local": false, "example": "_enabled = ppEffectEnabled _hndl;", "docSyntax": "ppEffectEnabled effect", "broadcasted": false, "description": "Checks whether given post process effect is enabled", "server": false}, "gusts": {"reviewLevel": 2, "syntax": "gusts", "local": false, "example": "_gustsval = gusts;", "docSyntax": "gusts", "broadcasted": false, "description": "Return the current gusts value. Scale is 0 to 1.", "server": false}, "setAnimSpeedCoef": {"reviewLevel": 2, "syntax": "<objUnit> setAnimSpeedCoef <scalar>", "local": false, "example": "player setAnimSpeedCoef 0.75;", "docSyntax": "unit setAnimSpeedCoef coef", "broadcasted": false, "description": "Sets a coefficient for animation speed (0.5 will play animations half the speed, 2 twice the speed).", "server": false}, "moveInAny": {"reviewLevel": 2, "syntax": "<objUnit> moveInAny <objVehicle>", "local": false, "example": "player moveInAny tank;", "docSyntax": "unit moveInAny vehicle", "broadcasted": true, "description": "Moves unit to the first available seat in a vehicle. The order of priorities is the same order used in squad command when you order subordinates to get in vehicle to any position and is the same order used in Zeus when you drag units to a vehicle.", "server": true}, "isTurnedOut": {"reviewLevel": 2, "syntax": "isTurnedOut <objUnit>", "local": false, "example": "_commanderOut = isTurnedOut (tank turretUnit [0,0]);", "docSyntax": "isTurnedOut unit", "broadcasted": false, "description": "Returns true if given unit is turned out, otherwise false. The output changes to true after unit finished turning out, however will change to false almost immediately after unit is ordered to turn in.", "server": false}, "BIS_fnc_VRCourseCommandingBehaviour1": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "curatorEditingArea": {"reviewLevel": 2, "syntax": "curatorEditingArea <objCurator>", "local": false, "example": "_editingArea = curatorEditingArea myCurator;", "docSyntax": "curatorEditingArea curatorObj", "broadcasted": false, "description": "Returns all curator editing areas.", "server": false}, "BIS_fnc_loop": {"reviewLevel": 2, "syntax": "[action,parameters] call BIS_fnc_loop", "local": false, "example": "// hints time every five seconds [\"itemAdd\", [\"uniqueId\", { hint str time; }, 5]] call BIS_fnc_loop;", "docSyntax": "[action, parameters] call BIS_fnc_loop", "broadcasted": false, "description": "Loop stacked code/function with timing and conditional control. Code and conditions are executed in non-scheduled environment.", "server": false}, "BIS_fnc_tasksUnit": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_tasksUnit", "local": false, "example": "player call BIS_fnc_tasksUnit;", "docSyntax": "target call BIS_fnc_tasksUnit", "broadcasted": false, "description": "Grab all tasks currently created for a given unit.", "server": false}, "removeAllActions": {"reviewLevel": 2, "syntax": "removeAllActions <objUnit>", "local": false, "example": "removeAllActions player;", "docSyntax": "removeAllActions unit", "broadcasted": false, "description": "Removes all unit's user added actions.", "server": true}, "BIS_fnc_moduleTTStatsClear": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "ctRowControls": {"reviewLevel": 2, "syntax": "<array> = <uiControl> ctRowControls <scalar>", "local": true, "example": "_array = _control ctRowControls 0;", "docSyntax": "Array = Control ctRowControls Number", "broadcasted": false, "description": "Returns array of controls on the row with the given index.", "server": false}, "BIS_fnc_moduleTaskSetState": {"example": "", "server": false, "broadcasted": false, "description": "Set Task State module function", "local": false}, "BIS_fnc_curatorAttachObject": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_curatorAttachObject", "local": false, "example": "[BIS_vehicle] call BIS_fnc_curatorAttachObject;", "docSyntax": "[object] call BIS_fnc_curatorAttachObject", "broadcasted": false, "description": "Attach an object on another one under cursor.", "server": false}, "BIS_fnc_liveFeedModuleSetSource": {"example": "", "server": false, "broadcasted": false, "description": "Set a live feed's source via a module. Parameters: _this: OBJECT - Live Feed - Set Source module */ // <insert smart comment about dedicated servers here>", "local": false}, "canAddItemToVest": {"reviewLevel": 2, "syntax": "<objUnit> canAddItemToVest <objItem>", "local": false, "example": "_item = \"HandGrenade\"; _fits = player canAddItemToVest _item; if (_fits) then { player addItemToVest _item; } else { hint \"no room!\"; };", "docSyntax": "unit canAddItemToVest item", "broadcasted": false, "description": "Checks if given object can be stored into soldier's vest.", "server": false}, "disableNVGEquipment": {"reviewLevel": 1, "syntax": "<objVehicle> disableNVGEquipment state", "local": false, "example": "myTank disableNVGEquipment true;", "docSyntax": "vehicle disableNVGEquipment state", "broadcasted": true, "description": "Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use disableTIEquipment.", "server": true}, "BIS_fnc_respawnGroup": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "ctSetHeaderTemplate": {"reviewLevel": 1, "syntax": "<uiControl> ctSetHeaderTemplate Config", "local": true, "example": "_control ctSetHeaderTemplate _configPath;", "docSyntax": "Control ctSetHeaderTemplate Config", "broadcasted": false, "description": "Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template.", "server": false}, "BIS_fnc_allSynchronizedObjects": {"reviewLevel": 2, "syntax": "[<object>,filter] call BIS_fnc_allSynchronizedObjects", "local": false, "example": "[BIS_Poliakko,\"LocationArea_F\"] call BIS_fnc_allSynchronizedObjects;", "docSyntax": "[object, filter] call BIS_fnc_allSynchronizedObjects", "broadcasted": false, "description": "Return all synchronized objects, including those synced to synced and so on.", "server": false}, "BIS_fnc_findOverwatch": {"reviewLevel": 2, "syntax": "[<object>,maxDistance,minDistance,minHeightAbove,searchCentre] call BIS_fnc_findOverwatch", "local": false, "example": "[getPosATL enemyTank, 300, 75, 20, getPosATL player] call BIS_fnc_findOverwatch;", "docSyntax": "[target, maxDistance, minDistance, minHeightAbove, searchCentre] call BIS_fnc_findOverwatch", "broadcasted": false, "description": "Selects a position that provides overwatch onto another position.", "server": false}, "BIS_fnc_diagVehicleIcons": {"reviewLevel": 2, "syntax": "[parentClass,position,<objMap>] call BIS_fnc_diagVehicleIcons", "local": false, "example": "[\"all\", getPos player] call BIS_fnc_diagVehicleIcons;", "docSyntax": "[parentClass, position, map] call BIS_fnc_diagVehicleIcons", "broadcasted": false, "description": "Previews all vehicle icons on map.", "server": false}, "confirmSensorTarget": {"reviewLevel": 2, "syntax": "<objVehicle> confirmSensorTarget [<objSide>,isConfirmed]", "local": false, "example": "(vehicle player) confirmSensorTarget [west, true];", "docSyntax": "vehicle confirmSensorTarget [side, isConfirmed]", "broadcasted": false, "description": "Sets for which Side the entity becomes a \"confirmed hostile\" target - a target that becomes highlighted red on the sensors display.", "server": false}, "BIS_fnc_moduleCreateProjectile": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setPylonsPriority": {"reviewLevel": 2, "syntax": "<objVehicle> setPylonsPriority [priority pylon1,priority pylon2,...]", "local": false, "example": "(vehicle player) setPylonsPriority [0,1,2,3,4,5,5,4,3,2,1,0];", "docSyntax": "vehicle setPylonsPriority [priority pylon1, priority pylon2, ...]", "broadcasted": false, "description": "Overrides default pylons priorities", "server": false}, "face": {"reviewLevel": 2, "syntax": "face <objUnit>", "local": false, "example": "face player", "docSyntax": "face person", "broadcasted": false, "description": "Returns the face of a person.", "server": false}, "getUnitLoadout": {"reviewLevel": 2, "syntax": "getUnitLoadout <objUnit>", "local": false, "example": "getUnitLoadout player;", "docSyntax": "getUnitLoadout unit", "broadcasted": false, "description": "Returns a Unit Loadout Array with all assigned items, weapons, containers and their stored items. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:", "server": false}, "add3DENConnection": {"reviewLevel": 2, "syntax": "add3DENConnection [type,from,to]", "local": false, "example": "add3DENConnection [\"RandomStart\",get3DENSelected \"Object\",\"marker_0\"] Set random start on marker \"marker_0\" for all selected objects.", "docSyntax": "add3DENConnection [type, from, to]", "broadcasted": false, "description": "Connect entities together.", "server": false}, "unitAimPosition": {"reviewLevel": 2, "syntax": "unitAimPosition <objUnit>", "local": false, "example": "unitAimPosition player;", "docSyntax": "unitAimPosition unit", "broadcasted": false, "description": "Returns the position on the unit other units can aim at. Same as aimPos only returns position in PositionAGL format and has render scope alternative unitAimPositionVisual.", "server": true}, "ctrlCreate": {"reviewLevel": 2, "syntax": "<uiDisplay> ctrlCreate [class,<scalar>,controlsGroup]", "local": false, "example": "_display ctrlCreate [\"RscText\", 1234];", "docSyntax": "display ctrlCreate [class, idc, controlsGroup]", "broadcasted": false, "description": "Creates a new control in the given display. The control class could be existing class from main config or custom class defined in mission config (mission config is searched first). Some of the common controls defined in main config that can be used with this command:", "server": false}, "lbSetPictureColorDisabled": {"reviewLevel": 2, "syntax": "lbSetPictureColorDisabled [<scalar>,<scalar>,<scalar>]", "local": false, "example": "lbSetPictureColorDisabled [101, 0, [1, 1, 1, 0.25]];", "docSyntax": "lbSetPictureColorDisabled [idc, index, color]", "broadcasted": false, "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", "server": false}, "BIS_fnc_flamesEffect": {"reviewLevel": 2, "syntax": "call BIS_fnc_flamesEffect", "local": false, "example": "call BIS_fnc_flamesEffect;", "docSyntax": "call BIS_fnc_flamesEffect", "broadcasted": false, "description": "Flames (texture) postprocess.", "server": false}, "BIS_fnc_moduleRespawnPosition": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setMusicEventHandler": {"reviewLevel": 2, "syntax": "setMusicEventHandler [type,function]", "local": false, "example": "_ehID = setMusicEventHandler [\"MusicStart\", \"hint str _this\"];", "docSyntax": "setMusicEventHandler [type, function]", "broadcasted": false, "description": "Sets given music track event handler. Will overwrite other music event handlers. Use addMusicEventHandler if you want to stack them.", "server": false}, "BIS_fnc_weaponAddon": {"reviewLevel": 1, "syntax": "Classname call BIS_fnc_weaponAddon;", "local": false, "example": "\"arifle_MX_F\" call BIS_fnc_weaponAddon;//Returns \"A3_Weapons_F_Rifles_MX\"", "docSyntax": "Classname call BIS_fnc_weaponAddon;", "broadcasted": false, "description": "Return addon from CfgPatches to which a given weapon class belongs to.", "server": false}, "BIS_fnc_isCurator": {"example": "player call BIS_fnc_isCurator;", "server": false, "broadcasted": false, "description": "Return if given object is curator logic.", "local": false}, "BIS_fnc_sideName": {"reviewLevel": 2, "syntax": "[sideNumber] call BIS_fnc_sideName;", "local": false, "example": "[2] call BIS_fnc_sideName;", "docSyntax": "[sideNumber] call BIS_fnc_sideName;", "broadcasted": false, "description": "Returns side name.", "server": false}, "BIS_fnc_endMission": {"reviewLevel": 2, "syntax": "[endName,isVictory,fadeType,playMusic,completeTasks] spawn BIS_fnc_endMission;", "local": false, "example": "\"end1\" call BIS_fnc_endMission;", "docSyntax": "[endName,isVictory,fadeType,playMusic,completeTasks] spawn BIS_fnc_endMission;", "broadcasted": false, "description": "Ends mission with a fade effect. See Debriefing for more information.", "server": false}, "BIS_fnc_deleteTask": {"reviewLevel": 2, "syntax": "[taskID,owner] call BIS_fnc_deleteTask", "local": false, "example": "[ \"task_1\" ] call BIS_fnc_deleteTask;", "docSyntax": "[taskID,owner] call BIS_fnc_deleteTask", "broadcasted": false, "description": "Deletes given task.", "server": false}, "BIS_fnc_moduleUnlockArea": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_textureVehicleIcon": {"reviewLevel": 2, "syntax": "[wantedIcon] call BIS_fnc_textureVehicleIcon", "local": false, "example": "_mediTexture = [\"iconManMedic\"] call BIS_fnc_textureVehicleIcon;", "docSyntax": "[wantedIcon] call BIS_fnc_textureVehicleIcon", "broadcasted": false, "description": "Checks whether icon is defined in CfgVehicleIcons and if so, returns the icon.", "server": false}, "BIS_fnc_credits_movie": {"example": "", "server": false, "broadcasted": false, "description": "/* File: fn_credits_movie.sqf Description: Movie credits function. Parameter(s): _this select 0: Display - Display for credits. _this select 1: Number - Mode: 0 for end of credits, 1 for start of credits. Returned value: None", "local": false}, "BIS_fnc_enemySides": {"reviewLevel": 1, "syntax": "input call BIS_fnc_enemySides;", "local": false, "example": "player call BIS_fnc_enemySides;", "docSyntax": "input call BIS_fnc_enemySides;", "broadcasted": false, "description": "Returns sides hostile to the given side / object.", "server": false}, "BIS_fnc_endLoadingScreen": {"reviewLevel": 1, "syntax": "screenId call BIS_fnc_endLoadingScreen", "local": false, "example": "[\"myLoadingScreen\", \"Loading\u00e2\u20ac\u00a6 wait for my splendid\u00e2\u201e\u00a2 mission!\"] call BIS_fnc_startLoadingScreen; uiSleep 3; \"myLoadingScreen\" call BIS_fnc_endLoadingScreen;", "docSyntax": "screenId call BIS_fnc_endLoadingScreen", "broadcasted": false, "description": "Unregister a loading screen. When none other remains, end the loading.", "server": false}, "modParams": {"reviewLevel": 2, "syntax": "modParams [modClass,options]", "local": false, "example": "_data = modParams [\"Kart\", [\"name\", \"logo\", \"picture\"]];", "docSyntax": "modParams [modClass, options]", "broadcasted": false, "description": "Returns list of mod parameters according to given options, values are in same order as the given options. Available options:", "server": false}, "BIS_fnc_getFromPairs": {"example": "", "server": false, "broadcasted": false, "description": "Searches the associative array for the 1st occurance of the key string and returns the value associated with it. Syntax: _value = [_associativeArray:array,_key:string,_defaultValue] call BIS_fnc_getFromPairs; Example: 2 = [[[\"apple\",3],[\"pear\",2]],\"pear\"] call BIS_fnc_getFromPairs; Returns: * if found: value stored under the key * if not found: nil or _defaultValue", "local": false}, "BIS_fnc_isForcedCuratorInterface": {"reviewLevel": 2, "syntax": "[] call BIS_fnc_isForcedCuratorInterface", "local": false, "example": "_isForced = call BIS_fnc_isForcedCuratorInterface;", "docSyntax": "[] call BIS_fnc_isForcedCuratorInterface", "broadcasted": false, "description": "Return if curator interface is forced (user cannot leave it by pressing Zeus key).", "server": false}, "playableSlotsNumber": {"reviewLevel": 2, "syntax": "playableSlotsNumber <objSide>", "local": false, "example": "_maxBluforPlayers = playableSlotsNumber blufor;", "docSyntax": "playableSlotsNumber side", "broadcasted": false, "description": "Returns the number of available slots in mission per side (both empty and taken).", "server": false}, "BIS_fnc_moduleFDSkeetDestruction": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_toggleCuratorVisionMode": {"reviewLevel": 2, "syntax": "[curator,mode] call BIS_fnc_toggleCuratorVisionMode", "local": false, "example": "[Curator, -2] call BIS_fnc_toggleCuratorVisionMode;", "docSyntax": "[curator, mode] call BIS_fnc_toggleCuratorVisionMode", "broadcasted": false, "description": "Toggle curator vision mode.", "server": false}, "BIS_fnc_diagPreviewVehicleCrew": {"reviewLevel": 2, "syntax": "[class,numVeh,<scalar>] call BIS_fnc_diagPreviewVehicleCrew", "local": false, "example": "[\"B_MRAP_01_F\", [5,5], 10] call BIS_fnc_diagPreviewVehicleCrew;", "docSyntax": "[class, numVeh, distance] call BIS_fnc_diagPreviewVehicleCrew", "broadcasted": false, "description": "Creates vehicles with their crew.", "server": false}, "set3DENAttributes": {"reviewLevel": 2, "syntax": "set3DENAttributes [[<entities1>,<class1>,<value1>],...,[<entitiesN>,<classN>,<valueN>]]", "local": false, "example": "set3DENAttributes [[get3DENSelected \"Object\",\"ControlMP\",true ]]; Set all selected objects as playable", "docSyntax": "set3DENAttributes [[<entities1>,<class1>,<value1>], ..., [<entitiesN>,<classN>,<valueN>]]", "broadcasted": false, "description": "Set entity attributes.", "server": false}, "BIS_fnc_VRCourseCommandingMovement1": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_animalBehaviour": {"reviewLevel": 2, "syntax": "[animal] call BIS_fnc_animalBehaviour", "local": false, "example": "[animal] call BIS_fnc_animalBehaviour;", "docSyntax": "[animal] call BIS_fnc_animalBehaviour", "broadcasted": false, "description": "Animal behaviour control. Called by Animals_F\\Data\\Scripts\\main.fsm.", "server": false}, "BIS_fnc_advHintArg": {"reviewLevel": 2, "syntax": "[arguments,HTMLColour,hintClass] call BIS_fnc_advHintArg", "local": false, "example": "", "docSyntax": "[arguments,HTMLColour,hintClass] call BIS_fnc_advHintArg", "broadcasted": false, "description": "Advanced hint arguments preprocess.", "server": false}, "diag_activeSQSScripts": {"reviewLevel": 2, "syntax": "diag_activeSQSScripts", "local": false, "example": "{systemChat str _x} forEach diag_activeSQSScripts;", "docSyntax": "diag_activeSQSScripts", "broadcasted": false, "description": "Returns array with active SQSs.", "server": false}, "BIS_fnc_wpArtillery": {"reviewLevel": 2, "syntax": "[<objGroup>,position,<object>,firedRounds,type] call BIS_fnc_wpArtillery", "local": false, "example": "[group player, getMarkerPos \"artilleryStrike\", objNull, 30, \"8Rnd_82mm_Mo_shells\"] call BIS_fnc_wpArtillery;", "docSyntax": "[group, position, target, firedRounds, type] call BIS_fnc_wpArtillery", "broadcasted": false, "description": "Let group members fire artillery barrage on waypoint position. Units must have magazine type.", "server": false}, "ctValue": {"reviewLevel": 2, "syntax": "<scalar> = ctValue <uiControl>", "local": true, "example": "_number = ctValue _control;", "docSyntax": "Number = ctValue Control", "broadcasted": false, "description": "Returns metadata (number) associated with a particular row of RscControlsTable.", "server": false}, "briefingName": {"reviewLevel": 2, "syntax": "briefingName", "local": false, "example": "_name = briefingName;", "docSyntax": "briefingName", "broadcasted": false, "description": "Returns the name of the current briefing/scenario name.", "server": false}, "vectorMultiply": {"reviewLevel": 1, "syntax": "vector vectorMultiply scalar", "local": false, "example": "_newVector = [1,2,3] vectorMultiply 3; //[3,6,9]", "docSyntax": "vector vectorMultiply scalar", "broadcasted": false, "description": "Multiplies 3D vector by a scalar.", "server": false}, "BIS_fnc_moduleCuratorSetCostsSide": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "addCuratorCameraArea": {"reviewLevel": 2, "syntax": "<objCurator> addCuratorCameraArea [cameraAreaID,position,radius]", "local": false, "example": "myCurator addCuratorCameraArea [3,position mySoldier,300];", "docSyntax": "curatorObj addCuratorCameraArea [cameraAreaID,position,radius]", "broadcasted": false, "description": "Adds or changes curator camera area (depends on if ID is already used).", "server": false}, "BIS_fnc_getRespawnInventories": {"example": "", "server": false, "broadcasted": false, "description": "Return respawn inventories available for the given unit Parameter(s): 0: OBJECT, GROUP, SIDE or NAMESPACE 1 (Optional): BOOL - true to show even inventories disabled by curator 2 (Optional): BOOL - true to return namespace, inventory and role limits (used in the new respawn screen) instead of inventories itself Returns: ARRAY (of Strings)", "local": false}, "BIS_fnc_trimString": {"reviewLevel": 2, "syntax": "[someText,beginning,length] call BIS_fnc_trimString", "local": false, "example": "[\"dreaded_is_the_man\", 0, 6] call BIS_fnc_trimString; // will return \"dreaded\"", "docSyntax": "[someText, beginning, length] call BIS_fnc_trimString", "broadcasted": false, "description": "Get a substring out of the string.", "server": false}, "setPosWorld": {"reviewLevel": 1, "syntax": "<object> setPosWorld position", "local": false, "example": "_obj setPosWorld getPosWorld _obj;", "docSyntax": "object setPosWorld position", "broadcasted": true, "description": "Sets position of an object based on PositionWorld, which is PositionASL of the model centre [0,0,0].", "server": true}, "taskType": {"reviewLevel": 2, "syntax": "taskType <objTask>", "local": false, "example": "_type = taskType (currentTask player);", "docSyntax": "taskType task", "broadcasted": false, "description": "Returns the type of the given task", "server": false}, "getMousePosition": {"reviewLevel": 2, "syntax": "getMousePosition", "local": false, "example": "_pos = getMousePosition;", "docSyntax": "getMousePosition", "broadcasted": false, "description": "Returns mouse position in UI coordinates.", "server": false}, "BIS_fnc_setPPeffectTemplate": {"reviewLevel": 2, "syntax": "[template,transition,global] call BIS_fnc_setPPeffectTemplate;", "local": false, "example": "[\"Mediterranean\", 3, false] call BIS_fnc_setPPeffectTemplate;", "docSyntax": "[template, transition, global] call BIS_fnc_setPPeffectTemplate;", "broadcasted": false, "description": "Apply post-process effects according to template from CfgPostprocessTemplates.", "server": false}, "setUnloadInCombat": {"reviewLevel": 2, "syntax": "<objVehicle> setUnloadInCombat [allowCargo,allowTurrets]", "local": true, "example": "_veh setUnloadInCombat [true, false];", "docSyntax": "vehicle setUnloadInCombat [allowCargo, allowTurrets]", "broadcasted": true, "description": "If cargo or turret units should get out of vehicle when in combat. If true, vehicle will stop and units will dismount. Vehicle must be local.", "server": false}, "diag_activeMissionFSMs": {"reviewLevel": 2, "syntax": "diag_activeMissionFSMs", "local": false, "example": "{systemChat str _x} forEach diag_activeMissionFSMs;", "docSyntax": "diag_activeMissionFSMs", "broadcasted": false, "description": "Returns array with active Mission FSMs.", "server": false}, "isDamageAllowed": {"reviewLevel": 2, "syntax": "isDamageAllowed <object>", "local": false, "example": "_isGod =\u00c2\u00a0!isDamageAllowed player;", "docSyntax": "isDamageAllowed object", "broadcasted": false, "description": "A getter for allowDamage command. The command indicates if damage is allowed at current locality, hence local effect of the command. A complete solution for being able to tell whether or not an object can be damaged at current locality looks like this: _canBeDamaged = local _obj && isDamageAllowed _obj;", "server": true}, "BIS_fnc_getCfgSubClasses": {"example": "_allVehHitPoints = (configfile >> \"CfgVehicles\" >> \"C_Hatchback_01_sport_F\" >> \"HitPoints\") call BIS_fnc_getCfgSubClasses;", "server": false, "broadcasted": false, "description": "Return all child classes of given class. Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes and an attribute. Example: * 1st way of calling: _subclasses = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call Bis_fnc_getCfgSubClasses; * 2nd way of calling: _subclasses = [\"Hubs\"] call Bis_fnc_getCfgSubClasses; Returns: ARRAY (of STRINGS with sub-classes names)", "local": false}, "BIS_fnc_moduleMine": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "channelEnabled": {"reviewLevel": 1, "syntax": "channelEnabled channel", "local": false, "example": "_isGlobalChatEnabled = (channelEnabled 0) select 0; // Check if user can use text on global channel", "docSyntax": "channelEnabled channel", "broadcasted": false, "description": "Returns true or false depending on whether the given channel is enabled or disabled. For more information about enabling/disabling of chat channels see enableChannel. Channel / Number correspondence:", "server": false}, "BIS_fnc_interpolateWeather": {"example": "", "server": false, "broadcasted": false, "description": "Interpolate weather (overcast and fog) according to 2 boundry dates and their weather conditions. Parameter(s): _this select 0: array - _date1 [_year1,_month1,_day1,_hour1,_min1] _this select 1: array - _weather1 [_overcast1,_fog1] _this select 2: array - _date2 [_year2,_month2,_day2,_hour2,_min2] _this select 3: array - _weather2 [_overcast2,_fog2] _this select 4: array - _subjectDate [_year,_month,_day,_hour,_min] (default: current date) Returns: [_interpolatedOvercast,_interpolatedFog] Example: [_overcast,_fog] = [[2035,1,5,24,00],[0.1,0.5],[2035,1,10,24,00],[0.3,0.2],[2035,1,7,24,00]] call BIS_fnc_interpolateWeather;", "local": false}, "BIS_fnc_moduleObjectiveRaceCP": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "dynamicSimulationDistance": {"reviewLevel": 1, "syntax": "dynamicSimulationDistance category", "local": false, "example": "hint str dynamicSimulationDistance \"Prop\";", "docSyntax": "dynamicSimulationDistance category", "broadcasted": false, "description": "A getter for setDynamicSimulationDistance", "server": false}, "BIS_fnc_diagAARrecord": {"reviewLevel": 2, "syntax": "call BIS_fnc_diagAARrecord", "local": false, "example": "call BIS_fnc_diagAARrecord;", "docSyntax": "call BIS_fnc_diagAARrecord", "broadcasted": false, "description": "Starts recording units position and events for an AAR (After Action Review).", "server": false}, "BIS_fnc_briefingInit": {"reviewLevel": 1, "syntax": "marker call BIS_fnc_briefingInit", "local": false, "example": "\"marker_1\" call BIS_fnc_briefingInit;", "docSyntax": "marker call BIS_fnc_briefingInit", "broadcasted": false, "description": "Initialize animated briefing markers.", "server": false}, "loadBackpack": {"reviewLevel": 2, "syntax": "loadBackpack <objUnit>", "local": false, "example": "myVariable = loadBackpack myUnit;", "docSyntax": "loadBackpack unit", "broadcasted": false, "description": "Returns current sum of mass from items stored in a backpack.", "server": false}, "allAirports": {"reviewLevel": 2, "syntax": "allAirports", "local": false, "example": "_allAirports = allAirports;", "docSyntax": "allAirports", "broadcasted": false, "description": "Returns all map airports, both static and dynamic", "server": false}, "getSuppression": {"reviewLevel": 2, "syntax": "getSuppression <objUnit>", "local": true, "example": "getSuppression AI_unit_1;", "docSyntax": "getSuppression unit", "broadcasted": false, "description": "Gets the suppression value of given unit. Returns SCALAR between 0 and 1. Suppression is not calculated for player entities.", "server": false}, "BIS_fnc_moduleMPTypeDefense": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "className": {"reviewLevel": 1, "syntax": "className location", "local": false, "example": "_shortName = className myLocation;", "docSyntax": "className location", "broadcasted": false, "description": "Returns short name of location.", "server": false}, "allDisplays": {"reviewLevel": 2, "syntax": "allDisplays", "local": false, "example": "_allDisps = allDisplays;", "docSyntax": "allDisplays", "broadcasted": false, "description": "Returns a list of all opened GUI displays. Other displays, such as IGUI displays could be accessed via uiNamespace variable, which is updated every time display is opened or closed. For example, to access IGUI displays: uiNamespace getVariable [\"IGUI_displays\", []];. Other display variables:", "server": false}, "diag_lightNewLoad": {"reviewLevel": 1, "syntax": "diag_lightNewLoad path", "local": false, "example": "diag_lightNewLoad \"o:\\lighting.txt\"", "docSyntax": "diag_lightNewLoad path", "broadcasted": false, "description": "Allows loading of lightning config during the gameplay (effectively changing the current scene lightning). Filename path can be either absolute or relative. The file must contain only the class LightningNew, which should contain lightning configuration.", "server": false}, "BIS_fnc_tridentClient": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "removeItems": {"reviewLevel": 2, "syntax": "<objUnit> removeItems <objItem>", "local": false, "example": "player removeItems \"FirstAidKit\";", "docSyntax": "unit removeItems item", "broadcasted": false, "description": "Removes all items with given template from the inventory.", "server": false}, "forceAddUniform": {"reviewLevel": 1, "syntax": "<objUnit> forceAddUniform type", "local": false, "example": "_unit forceAddUniform \"U_B_CombatUniform_mcam\";", "docSyntax": "unit forceAddUniform type", "broadcasted": true, "description": "Create a new uniform and hard link it into slot (without any restrictions).", "server": true}, "BIS_fnc_moduleCuratorAddEditableObjects": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "isEqualType": {"reviewLevel": 2, "syntax": "val1 isEqualType val2", "local": false, "example": "_var = [1,2,3]; _var isEqualType 0; //false _var isEqualType []; //true", "docSyntax": "val1 isEqualType val2", "broadcasted": false, "description": "Compares 2 values by their type. A much faster alternative to typeName a == typeName b.", "server": false}, "setPilotCameraTarget": {"reviewLevel": 2, "syntax": "<bool> = <object> setPilotCameraTarget <object>", "local": true, "example": "_pilotCamTrack = vehicle player setPilotCameraTarget [2100,4200,4.2];", "docSyntax": "bool = object setPilotCameraTarget target", "broadcasted": false, "description": "Sets an area or target to be tracked by the object airplane or helicopter pilotCamera. To track an object the vehicle has to have appropriate sensors (scanners) that can detect the given target type. Using objNull will unlock the camera", "server": false}, "allSimpleObjects": {"reviewLevel": 2, "syntax": "allSimpleObjects [className1,className2,...classNameN]", "local": false, "example": "allSimpleObjects [\"Box_NATO_Equip_F\", \"Land_CampingChair_V2_F\"];", "docSyntax": "allSimpleObjects [className1, className2,...classNameN]", "broadcasted": false, "description": "Returns array of all simple objects that belong to the listed class names. If the array of types is empty [], all simple objects are returned including those without class name.", "server": false}, "delete3DENEntities": {"reviewLevel": 1, "syntax": "delete3DENEntities entities", "local": false, "example": "delete3DENEntities (all3DENEntities select 0); // removes all objects", "docSyntax": "delete3DENEntities entities", "broadcasted": false, "description": "Delete given entities in Eden Editor, including anything that can be placed in editor.", "server": false}, "do3DENAction": {"reviewLevel": 1, "syntax": "do3DENAction action", "local": false, "example": "do3DENAction \"MissionSave\";// saves the scenario", "docSyntax": "do3DENAction action", "broadcasted": false, "description": "Performs given Eden Editor action.", "server": false}, "BIS_fnc_locWeaponInfo": {"reviewLevel": 2, "syntax": "call BIS_fnc_locWeaponInfo", "local": false, "example": "call BIS_fnc_locWeaponInfo;", "docSyntax": "call BIS_fnc_locWeaponInfo", "broadcasted": false, "description": "Shows a utility tool checking length of weapon info texts.", "server": false}, "setUnitTrait": {"reviewLevel": 2, "syntax": "<objUnit> setUnitTrait [<string>,<scalar>,isCustom]", "local": true, "example": "player setUnitTrait [\"Medic\",true];", "docSyntax": "unit setUnitTrait [skillName, value, isCustom]", "broadcasted": true, "description": "Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a bool.", "server": false}, "BIS_fnc_paramDaytime": {"reviewLevel": 1, "syntax": "datetime call BIS_fnc_paramDaytime", "local": false, "example": "_date = 12 call BIS_fnc_paramDaytime;", "docSyntax": "datetime call BIS_fnc_paramDaytime", "broadcasted": false, "description": "Sets time of the day to the hour. Minutes will always be zero.", "server": false}, "visibleCompass": {"reviewLevel": 2, "syntax": "visibleCompass", "local": false, "example": "if (visibleCompass) then {hint \"Compass is visible\"};", "docSyntax": "visibleCompass", "broadcasted": false, "description": "Checks if the player has compass opened and visible", "server": false}, "getPersonUsedDLCs": {"reviewLevel": 2, "syntax": "getPersonUsedDLCs <objUnit>", "local": false, "example": "_objects = getPersonUsedDLCs player;", "docSyntax": "getPersonUsedDLCs unit", "broadcasted": false, "description": "Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC.", "server": true}, "setNameSound": {"reviewLevel": 2, "syntax": "<objUnit> setNameSound <string>", "local": false, "example": "unit1 setNameSound \"dixon\";", "docSyntax": "person setNameSound name", "broadcasted": false, "description": "Sets the nameSound of a person. By default, when giving orders, the units are addressed by their number. When nameSound is set, it will be used instead to address the unit. For example: \"Two, hold fire!\", one can have: \"Miller, hold fire!\"", "server": true}, "tvSetPictureColorDisabled": {"reviewLevel": 2, "syntax": "<uiControl> tvSetPictureColorDisabled [path,<scalar>]", "local": false, "example": "_control tvSetPictureColorDisabled [[0], [1,0,1,1]]", "docSyntax": "control tvSetPictureColorDisabled [path, color]", "broadcasted": false, "description": "Sets the color of left picture of a tree item defined by path when item is disabled", "server": false}, "setDebriefingText": {"reviewLevel": 1, "syntax": "endType setDebriefingText [title,description]", "local": false, "example": "_currentObjective = (taskDescription (currentTask player)) select 2; \"endDeath\" setDebriefingText [\"You Lose\",\"All of your men were killed while assaulting the \" + _currentObjective];", "docSyntax": "endType setDebriefingText [title, description]", "broadcasted": false, "description": "Sets debriefing text for endType defined in CfgDebriefing.", "server": false}, "BIS_fnc_VRCourseCommandingActions1": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "getMusicPlayedTime": {"reviewLevel": 2, "syntax": "getMusicPlayedTime", "local": false, "example": "playMusic [\"LeadTrack06_F_Tank\", 0]; onEachFrame {hintSilent str getMusicPlayedTime};", "docSyntax": "getMusicPlayedTime", "broadcasted": false, "description": "Returns elapsed time in seconds for currently playing music track.", "server": false}, "addItemCargoGlobal": {"reviewLevel": 1, "syntax": "box addItemCargoGlobal [<objItem>,count]", "local": false, "example": "supplyBox addItemCargoGlobal [\"optic_ARCO2\", 10];", "docSyntax": "box addItemCargoGlobal [item, count]", "broadcasted": true, "description": "Creates new items and stores them in the given container. Works with items, weapons and magazines.", "server": true}, "setPlateNumber": {"reviewLevel": 2, "syntax": "<objVehicle> setPlateNumber <string>", "local": true, "example": "vehicle player setPlateNumber \"Custom Plate 99\"", "docSyntax": "vehicle setPlateNumber string", "broadcasted": true, "description": "Change the license plates on any vehicle which has plates configured. Max 15 characters are allowed!", "server": false}, "clearItemPool": {"reviewLevel": 1, "syntax": "clearItemPool box", "local": false, "example": "clearItemPool jeepOne", "docSyntax": "clearItemPool box", "broadcasted": false, "description": "Removes all items from ammo box (or any general weapon holder container)", "server": false}, "setLightUseFlare": {"reviewLevel": 1, "syntax": "light setLightUseFlare <bool>", "local": true, "example": "myLight setLightUseFlare true;", "docSyntax": "light setLightUseFlare bool", "broadcasted": false, "description": "Sets if light has flare.", "server": false}, "removeAllHandgunItems": {"reviewLevel": 2, "syntax": "removeAllHandgunItems <objUnit>", "local": true, "example": "", "docSyntax": "removeAllHandgunItems unit", "broadcasted": true, "description": "Removes all items from weapon except magazine.", "server": false}, "currentWeaponTurret": {"reviewLevel": 2, "syntax": "<objVehicle> currentWeaponTurret [turret path]", "local": false, "example": "_weapon = MBT_Kuma currentWeaponTurret [0];", "docSyntax": "vehicle currentWeaponTurret [turret path]", "broadcasted": false, "description": "Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.", "server": false}, "BIS_fnc_getServerVariable": {"reviewLevel": 2, "syntax": "[<object>,varName,default] spawn BIS_fnc_getServerVariable", "local": false, "example": "[ missionNamespace, \"BIS_someVar\", \"defaultValue\"] spawn BIS_fnc_getServerVariable;", "docSyntax": "[target, varName, default] spawn BIS_fnc_getServerVariable", "broadcasted": false, "description": "Fetch a variable saved on server. Used when you want to share variables only to specific clients to prevent large traffic. Must be spawned because communication with server takes some time.", "server": false}, "BIS_fnc_phoneticalWord": {"reviewLevel": 2, "syntax": "[integer,short] call BIS_fnc_phoneticalWord;", "local": false, "example": "[ 1 ] call BIS_fnc_phoneticalWord; //Returns \"Alpha\"", "docSyntax": "[integer,short] call BIS_fnc_phoneticalWord;", "broadcasted": false, "description": "Convert integer to NATO phonetical alphabet word (e.g. 2 becomes \"Bravo\") or letter of alphabet.", "server": false}, "BIS_fnc_moduleZoneProtection": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "dynamicSimulationDistanceCoef": {"reviewLevel": 1, "syntax": "dynamicSimulationDistanceCoef class", "local": false, "example": "hint str dynamicSimulationDistanceCoef \"IsMoving\";", "docSyntax": "dynamicSimulationDistanceCoef class", "broadcasted": false, "description": "A getter for setDynamicSimulationDistanceCoef", "server": false}, "BIS_fnc_exportCfgGroups": {"example": "", "server": false, "broadcasted": false, "description": "Export group or object composition for use in CfgGroups. The result will be copied to clipboard.", "local": false}, "secondaryWeaponMagazine": {"reviewLevel": 2, "syntax": "secondaryWeaponMagazine <objUnit>", "local": false, "example": "hint secondaryWeaponMagazine player; //[\"NLAW_F\"]", "docSyntax": "secondaryWeaponMagazine unit", "broadcasted": false, "description": "Returns either single element array, containing class name of currently loaded in the secondary weapon magazine, or an empty array if unit has no secondary weapon or secondary weapon is not loaded. This command is used for infantry weapons only.", "server": false}, "connectTerminalToUAV": {"reviewLevel": 1, "syntax": "<objUnit> connectTerminalToUAV uav", "local": false, "example": "bool = player connectTerminalToUAV uav1;", "docSyntax": "person connectTerminalToUAV uav", "broadcasted": true, "description": "Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot. If UAV is already connected to another terminal, this new connection will fail.", "server": true}, "BIS_fnc_damagePulsing": {"reviewLevel": 2, "syntax": "call BIS_fnc_damagePulsing", "local": false, "example": "call BIS_fnc_damagePulsing;", "docSyntax": "call BIS_fnc_damagePulsing", "broadcasted": false, "description": "Game pulsing damage effect.", "server": false}, "BIS_fnc_curatorObjectEdited": {"reviewLevel": 2, "syntax": "[module,<object>] call BIS_fnc_curatorObjectEdited", "local": false, "example": "[ module_curator, someObject ] call BIS_fnc_curatorObjectEdited;", "docSyntax": "[module, object] call BIS_fnc_curatorObjectEdited", "broadcasted": false, "description": "Code executed when curator object is edited (i.e., moved or rotated). When a soldier or a vehicle is moved high above ground, create a parachute for them.", "server": false}, "objectParent": {"reviewLevel": 2, "syntax": "objectParent <object>", "local": false, "example": "_weaponholder = objectParent _mybackpack;", "docSyntax": "objectParent object", "broadcasted": false, "description": "Returns parent of an object if the object is proxy, otherwise objNull. In case of backpack, the parent is a weaponholder or a cargo space of a vehicle or the unit carrying it. Unit in a vehicle will return the vehicle as parent.", "server": false}, "getArtilleryComputerSettings": {"reviewLevel": 2, "syntax": "getArtilleryComputerSettings", "local": false, "example": "hint str getArtilleryComputerSettings; //[\"Semi (medium)\",\"HE Mortar Shells\",0]", "docSyntax": "getArtilleryComputerSettings", "broadcasted": false, "description": "Returns settings from artillery computer currently opened by player.", "server": false}, "magazinesAmmoCargo": {"reviewLevel": 2, "syntax": "magazinesAmmoCargo <objVehicle>", "local": false, "example": "magazinesAmmoCargo vehicle player;", "docSyntax": "magazinesAmmoCargo vehicle", "broadcasted": false, "description": "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.", "server": false}, "BIS_fnc_setObjectTexture": {"reviewLevel": 2, "syntax": "[<object>,textures] call BIS_fnc_setObjectTexture", "local": false, "example": "[player, \"#(rgb,8,8,3)color(0,0,1,1)\"] call BIS_fnc_setObjectTexture;", "docSyntax": "[object, textures] call BIS_fnc_setObjectTexture", "broadcasted": false, "description": "Set object textures.", "server": false}, "waypointTimeoutCurrent": {"reviewLevel": 2, "syntax": "waypointTimeoutCurrent <objGroup>", "local": false, "example": "_timeout = waypointTimeoutCurrent group player;", "docSyntax": "waypointTimeoutCurrent group", "broadcasted": false, "description": "Gets the current timeout for currentWaypoint of a group or -1 if countdown is not in progress.", "server": false}, "BIS_fnc_moduleMissionName": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_objectHeight": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_objectHeight", "local": false, "example": "player call BIS_fnc_objectHeight;", "docSyntax": "object call BIS_fnc_objectHeight", "broadcasted": false, "description": "Return object height defined by it's bounding box and ev. offset/fix.", "server": false}, "addToRemainsCollector": {"reviewLevel": 1, "syntax": "addToRemainsCollector remains", "local": false, "example": "addToRemainsCollector [unit1, unit2, vehicle1];", "docSyntax": "addToRemainsCollector remains", "broadcasted": true, "description": "Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in description.ext", "server": true}, "BIS_fnc_liveFeedModuleEffects": {"example": "", "server": false, "broadcasted": false, "description": "Add effects to a live feed via a module. Parameters: _this: OBJECT - Live Feed - Effects module */ // They ran me on a dedicated server. I stopped their function.", "local": false}, "magazinesDetailBackpack": {"reviewLevel": 2, "syntax": "magazinesDetailBackpack <objUnit>", "local": false, "example": "magazinesDetailBackpack player", "docSyntax": "magazinesDetailBackpack unit", "broadcasted": false, "description": "Returns an array with the type names of all the unit's backpack magazines.", "server": false}, "inRangeOfArtillery": {"reviewLevel": 2, "syntax": "<array> inRangeOfArtillery [[<objUnit>],magazineType]", "local": false, "example": "_isInRange = getMarkerPos \"myTarget\" inRangeOfArtillery [[myArty], \"32Rnd_155mm_Mo_shells\"]", "docSyntax": "pos inRangeOfArtillery [[unit], magazineType]", "broadcasted": false, "description": "Returns true if all given units are able to fire at given position with given magazineType.", "server": true}, "BIS_fnc_splitString": {"reviewLevel": 2, "syntax": "[stringToSplit,separators,byStr] call BIS_fnc_splitString", "local": false, "example": "[\"this is a test\", \" \"] call BIS_fnc_splitString; // returns [\"this\", \"is\", \"a\", \"test\"]", "docSyntax": "[stringToSplit, separators, byStr] call BIS_fnc_splitString", "broadcasted": false, "description": "Split spring according to given separators", "server": false}, "BIS_fnc_moduleTTCPTrigger": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setVelocityModelSpace": {"reviewLevel": 2, "syntax": "<objVehicle> setVelocityModelSpace [x,y,z]", "local": true, "example": "car setVelocityModelSpace [0, 10, 0]; //pushes car forward", "docSyntax": "vehicle setVelocityModelSpace [x, y, z]", "broadcasted": true, "description": "Sets the velocity (speed vector) of the given vehicle relative to its model.", "server": false}, "simulInClouds": {"reviewLevel": 2, "syntax": "simulInClouds <array>", "local": false, "example": "simulInClouds (getPos player)", "docSyntax": "simulInClouds pos", "broadcasted": false, "description": "Returns if given position is in clouds.", "server": false}, "toFixed": {"reviewLevel": 1, "syntax": "<scalar> toFixed decimals", "local": false, "example": "123 toFixed 2; //\"123.00\"", "docSyntax": "number toFixed decimals", "broadcasted": false, "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript toFixed()", "server": false}, "BIS_fnc_VRCourseCommandingMovement2": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_credits_movieConfig": {"example": "", "server": false, "broadcasted": false, "description": "/* File: fn_credits_movieConfig.sqf Description: Movie credits config preprocessor. Parameter(s): _this select 0: Number - Index of item in config (CfgCredits >> CreditsMovie >> item) Returned value: _array: Array _array select 0: String - Position name (and tags) as structured text. _array select 1: String - Names (and tags) as structured text. _array select 2: Number - Required space coeficient (numberOfNames * textSizeCoef), -1 if config entry doesn't exist", "local": false}, "BIS_fnc_drawMinefields": {"reviewLevel": 2, "syntax": "call BIS_fnc_drawMinefields", "local": false, "example": "call BIS_fnc_drawMinefields;", "docSyntax": "call BIS_fnc_drawMinefields", "broadcasted": false, "description": "Draw minefields on the map. Dynamically calculated from all mines positions. Distinguishes AP and AT minefields.", "server": false}, "canTriggerDynamicSimulation": {"reviewLevel": 2, "syntax": "canTriggerDynamicSimulation <objUnit>", "local": false, "example": "hint str canTriggerDynamicSimulation player;", "docSyntax": "canTriggerDynamicSimulation unit", "broadcasted": false, "description": "A getter for triggerDynamicSimulation", "server": false}, "BIS_fnc_taskCompleted": {"reviewLevel": 1, "syntax": "taskID call BIS_fnc_taskCompleted", "local": false, "example": "_completed = \"task_1\" call BIS_fnc_taskCompleted;", "docSyntax": "taskID call BIS_fnc_taskCompleted", "broadcasted": false, "description": "Returns true if task has been completed.", "server": false}, "BIS_fnc_error": {"reviewLevel": 2, "syntax": "[param1,param2,...,param10] call BIS_fnc_error;", "local": false, "example": "[\"Player is too far away (%1)\",player distance dude] call BIS_fnc_error;", "docSyntax": "[param1,param2,...,param10] call BIS_fnc_error;", "broadcasted": false, "description": "Log error message and display it (bottom of the UI). If it's called from a function, it'll include the function name before your content. Output is: \"profileName/log: ERROR: <your content>\"", "server": false}, "getPlayerScores": {"reviewLevel": 2, "syntax": "getPlayerScores <objUnit>", "local": false, "example": "getPlayerScores BIS_player1;", "docSyntax": "getPlayerScores unitName", "broadcasted": false, "description": "In MP: returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score). In SP: empty array []", "server": false}, "BIS_fnc_taskAlwaysVisible": {"reviewLevel": 1, "syntax": "taskID call BIS_fnc_taskAlwaysVisible", "local": false, "example": "_isForcedVisible = \"task_1\" call BIS_fnc_taskAlwaysVisible;", "docSyntax": "taskID call BIS_fnc_taskAlwaysVisible", "broadcasted": false, "description": "Returns true if task is forced to be always visible (default: false).", "server": false}, "openDLCPage": {"reviewLevel": 1, "syntax": "openDLCPage dlcID", "local": false, "example": "openDLCPage 288520", "docSyntax": "openDLCPage dlcID", "broadcasted": false, "description": "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)", "server": false}, "BIS_fnc_missionTimeLeft": {"reviewLevel": 2, "syntax": "call BIS_fnc_missionTimeLeft", "local": false, "example": "call BIS_fnc_missionTimeLeft;", "docSyntax": "call BIS_fnc_missionTimeLeft", "broadcasted": false, "description": "Returns time in seconds until the mission end. Remaining time can be set using estimatedTimeLeft command or using BIS_fnc_countdown.", "server": false}, "hideSelection": {"reviewLevel": 2, "syntax": "<object> hideSelection [selection,hidden];", "local": true, "example": "BIS_vehicle hideSelection [ \"someSelection\", true ];", "docSyntax": "object hideSelection [selection, hidden];", "broadcasted": true, "description": "Hides or enables the given selection for the object", "server": false}, "BIS_fnc_moduleHint": {"example": "", "server": false, "broadcasted": false, "description": "Show a hint to all players of side Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters", "local": false}, "addUniform": {"reviewLevel": 1, "syntax": "<objUnit> addUniform type", "local": false, "example": "_unit addUniform \"U_B_CombatUniform_mcam\";", "docSyntax": "unit addUniform type", "broadcasted": true, "description": "Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier). To check if uniform is allowed use isUniformAllowed and to force add incompatible uniform use forceAddUniform", "server": true}, "BIS_fnc_cameraOld": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_cameraOld", "local": false, "example": "[player] call BIS_fnc_cameraOld; // starts the camera on the player", "docSyntax": "[target] call BIS_fnc_cameraOld", "broadcasted": false, "description": "Classic camera script, replaced by the Splendid\u00e2\u201e\u00a2 BIS_fnc_camera.", "server": false}, "BIS_fnc_isInZoom": {"reviewLevel": 2, "syntax": "[_min,_max] call BIS_fnc_isInZoom;", "local": false, "example": "if ([0.001,0.02] call BIS_fnc_isInZoom) then { hint \"Zoom level is in between 0.001 and 0.02\"; };", "docSyntax": "[_min,_max] call BIS_fnc_isInZoom;", "broadcasted": false, "description": "Checks if map zoom level is in between given interval (min,max)", "server": false}, "BIS_fnc_indicateBleeding": {"reviewLevel": 2, "syntax": "call BIS_fnc_indicateBleeding;", "local": false, "example": "call BIS_fnc_indicateBleeding;", "docSyntax": "call BIS_fnc_indicateBleeding;", "broadcasted": false, "description": "Shows a PP effect which indicates bleeding.", "server": false}, "resetSubgroupDirection": {"reviewLevel": 2, "syntax": "resetSubgroupDirection <objUnit>", "local": false, "example": "resetSubgroupDirection myUnit;", "docSyntax": "resetSubgroupDirection unit", "broadcasted": false, "description": "Resets direction of subgroup.", "server": false}, "showChat": {"reviewLevel": 2, "syntax": "showChat <bool>", "local": false, "example": "showChat false;", "docSyntax": "showChat bool", "broadcasted": false, "description": "Shows/hides the whole chat window.", "server": false}, "allMines": {"reviewLevel": 2, "syntax": "allMines", "local": false, "example": "allMines", "docSyntax": "allMines", "broadcasted": false, "description": "Returns an array of all mines in the mission", "server": false}, "BIS_fnc_diagWiki": {"reviewLevel": 2, "syntax": "[mode] call BIS_fnc_diagWiki", "local": false, "example": "[\"RadioProtocol_Sent\"] call BIS_fnc_diagWiki;", "docSyntax": "[mode] call BIS_fnc_diagWiki", "broadcasted": false, "description": "Scans specific config folder and outputs the values in wiki format.", "server": false}, "BIS_fnc_diagKeyLayout": {"example": "", "server": false, "broadcasted": false, "description": "Exports default key layout to wiki template. Parameter(s): _this select 0: STRING - category, can be one of following \"\" - all controls in game \"All\" \"BasicInfantryControls\" \"Car\" \"Air\" \"Helicopter\" \"Submarine\" \"Buldozer\" \"UserActions\" _this select 1: STRING - selection method, can be one of following \"\" - single tap \"double\" - double tap \"LCtrl\" - with left control pressed \"RCtrl\" - with right control pressed \"LShift\" - with left shift pressed \"RShift\" - with right shift pressed Returns: STRING - wiki export text (also copied to clipboard)", "local": false}, "BIS_fnc_moduleObjectiveGetIn": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "cbChecked": {"reviewLevel": 2, "syntax": "cbChecked <uiControl>", "local": false, "example": "_checked = cbChecked _myCheckBox;", "docSyntax": "cbChecked control", "broadcasted": false, "description": "Returns the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control).", "server": false}, "vectorDistanceSqr": {"reviewLevel": 2, "syntax": "vector1 vectorDistanceSqr vector2", "local": false, "example": "_distSqr = getPos player vectorDistanceSqr [0,0,2];", "docSyntax": "vector1 vectorDistanceSqr vector2", "broadcasted": false, "description": "Squared distance between two 3D vectors.", "server": false}, "BIS_fnc_effectFired": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_VRCourseCommandingActions3": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "setLightDayLight": {"reviewLevel": 1, "syntax": "light setLightDayLight <bool>", "local": true, "example": "myLight setLightDayLight true;", "docSyntax": "light setLightDayLight bool", "broadcasted": false, "description": "Sets if light can be used during the day.", "server": false}, "isUAVConnected": {"reviewLevel": 1, "syntax": "isUAVConnected uav", "local": false, "example": "bool = isUAVConnected cursorTarget;", "docSyntax": "isUAVConnected uav", "broadcasted": false, "description": "Returns true if UAV is connected to some terminal.", "server": false}, "BIS_fnc_removeScriptedEventHandler": {"reviewLevel": 2, "syntax": "[namespace,<string>,<scalar>] call BIS_fnc_removeScriptedEventHandler", "local": false, "example": "[missionNamespace, \"event\", 2] call BIS_fnc_removeScriptedEventHandler;", "docSyntax": "[namespace, name, id] call BIS_fnc_removeScriptedEventHandler", "broadcasted": false, "description": "Removes scripted event handler with given name and id. Additionally \"ScriptedEventHandlerRemoved\" scripted EH is called. For the list of available scripted event handlers see Arma 3: Event Handlers/ScriptedEventHandlers", "server": false}, "BIS_fnc_advHint": {"reviewLevel": 2, "syntax": "[classes,duration1,condition1,duration2,condition2,showing,onlyFullHint,onlyOnce,useSound] call BIS_fnc_advHint;", "local": false, "example": "[[\"Common\", \"GPS\"]] call BIS_fnc_advHint;", "docSyntax": "[classes, duration1, condition1, duration2, condition2, showing, onlyFullHint, onlyOnce, useSound] call BIS_fnc_advHint;", "broadcasted": false, "description": "Shows advanced hint to player.", "server": false}, "BIS_fnc_curatorSayMessage": {"reviewLevel": 2, "syntax": "[speaker,sentence] call BIS_fnc_curatorSayMessage", "local": false, "example": "[ player, \"mp_groundsupport_01_casrequested_BHQ_0\" ] call BIS_fnc_curatorSayMessage;", "docSyntax": "[speaker, sentence] call BIS_fnc_curatorSayMessage", "broadcasted": false, "description": "Plays some radio message from CfgRadio locally.", "server": false}, "BIS_fnc_colorRGBAtoTexture": {"reviewLevel": 2, "syntax": "<scalar> call BIS_fnc_colorRGBAtoTexture", "local": false, "example": "_texture = [0,0,0,1] call BIS_fnc_colorRGBAtoTexture;", "docSyntax": "color call BIS_fnc_colorRGBAtoTexture", "broadcasted": false, "description": "Converts RGB color format to procedural texture, e.g [0,0,0,1] becomes \"#(argb,8,8,3)color(0,0,0,1)\".", "server": false}, "magazineCargo": {"reviewLevel": 1, "syntax": "magazineCargo box", "local": false, "example": "hint str magazineCargo uniformContainer cursorTarget;", "docSyntax": "magazineCargo box", "broadcasted": false, "description": "Get array with magazines from ammo box (or any general weapon holder container).", "server": false}, "flagAnimationPhase": {"reviewLevel": 2, "syntax": "flagAnimationPhase <objFlag>", "local": false, "example": "flagAnimationPhase _flag1; //0.5", "docSyntax": "flagAnimationPhase flag", "broadcasted": false, "description": "Returns flag position on the flag pole in range of 0..1, where 0 is bottom of the flag pole, 1 is the top of the flag pole. The result is local to the PC on which command is executed", "server": true}, "getEnvSoundController": {"reviewLevel": 1, "syntax": "position getEnvSoundController controller", "local": false, "example": "position player getEnvSoundController \"trees\"; //0.3333", "docSyntax": "position getEnvSoundController controller", "broadcasted": false, "description": "Returns value of the specified controller.", "server": false}, "BIS_fnc_timeToString": {"reviewLevel": 2, "syntax": "[<scalar>,Format] call BIS_fnc_timeToString;", "local": false, "example": "_time = 7.36; [_time] call BIS_fnc_timeToString; // 07:21:36", "docSyntax": "[Time,Format] call BIS_fnc_timeToString;", "broadcasted": false, "description": "This function returns a 24-hour time as a string from a decimal", "server": false}, "tvSetPictureRightColorSelected": {"reviewLevel": 2, "syntax": "<uiControl> tvSetPictureRightColorSelected [path,<scalar>]", "local": false, "example": "_control tvSetPictureRightColorSelected [[0], [1,0,1,1]]", "docSyntax": "control tvSetPictureRightColorSelected [path, color]", "broadcasted": false, "description": "Sets the color of the right picture of a tree item defined by path when item is selected", "server": false}, "curatorMouseOver": {"reviewLevel": 2, "syntax": "curatorMouseOver", "local": false, "example": "_mouseOver = curatorMouseOver; possible return value:", "docSyntax": "curatorMouseOver", "broadcasted": false, "description": "Returns Curator Editable Object under curator mouse pointer in form of array:", "server": false}, "reverse": {"reviewLevel": 2, "syntax": "reverse <array>", "local": false, "example": "_arr = [1,2,3]; reverse _arr; hint str _arr; //[3,2,1]", "docSyntax": "reverse array", "broadcasted": false, "description": "Reverses given array by reference (modifies the original array, just like resize).", "server": false}, "BIS_fnc_VRCourseCommandingVehicles1": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_effectKilledAirDestruction": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_drawCuratorLocations": {"example": "", "server": false, "broadcasted": false, "description": "Label every vilage, town and city in curator interface Parameter(s): 0: OBJECT - curator module Returns: BOOL", "local": false}, "removeFromRemainsCollector": {"reviewLevel": 1, "syntax": "removeFromRemainsCollector remains", "local": false, "example": "removeFromRemainsCollector [unit1, unit2, vehicle1];", "docSyntax": "removeFromRemainsCollector remains", "broadcasted": true, "description": "Removes vehicles/units from disposal manager, added earlier with addToRemainsCollector", "server": true}, "vestContainer": {"reviewLevel": 2, "syntax": "vestContainer <objUnit>", "local": false, "example": "hint str vestContainer player; //2df7d600# 163942: dummyweapon.p3d", "docSyntax": "vestContainer unit", "broadcasted": false, "description": "Returns a cargo container of a unit's vest.", "server": false}, "BIS_fnc_VRCourseLaunchers1": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "canSuspend": {"reviewLevel": 2, "syntax": "canSuspend", "local": false, "example": "onEachFrame { systemChat str canSuspend; //false [] spawn {hint str canSuspend}; //true onEachFrame {}; };", "docSyntax": "canSuspend", "broadcasted": false, "description": "Returns true if sleep, uiSleep or waitUntil commands can be used in current scope. Usually when suspension is not allowed but used, for example when code is executed in unscheduled environment, the script engine would ignore any suspension command and throw error: \"Suspending not allowed in this context\". Using canSuspend command allows to detect the correct environment for the code.", "server": false}, "setVehicleReportOwnPosition": {"reviewLevel": 1, "syntax": "<objVehicle> setVehicleReportOwnPosition report", "local": false, "example": "(vehicle player) setVehicleReportOwnPosition true;", "docSyntax": "vehicle setVehicleReportOwnPosition report", "broadcasted": false, "description": "Sets that the vehicle will share its own position via datalink to the Side center.", "server": false}, "getAllHitPointsDamage": {"reviewLevel": 1, "syntax": "getAllHitPointsDamage entity", "local": false, "example": "getAllHitPointsDamage player; //[ // [\"HitFace\",\"HitNeck\",\"HitHead\",\"HitPelvis\",\"HitAbdomen\",\"HitDiaphragm\",\"HitChest\",\"HitBody\",\"HitArms\",\"HitHands\",\"HitLegs\"], // [\"\",\"neck\",\"head\",\"pelvis\",\"spine1\",\"spine2\",\"spine3\",\"body\",\"\",\"hands\",\"legs\"], // [0,0.0939002,0.0319932,0.0858595,0.174491,1,1,0.168495,1,0.5,0.195907] //]", "docSyntax": "getAllHitPointsDamage entity", "broadcasted": false, "description": "Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in setHitIndex and getHitIndex. Levels of damage are:", "server": true}, "ASLToAGL": {"reviewLevel": 1, "syntax": "ASLToAGL posASL", "local": false, "example": "_playerPosAGL = ASLToAGL getPosASL player;", "docSyntax": "ASLToAGL posASL", "broadcasted": false, "description": "Converts position from PositionASL to PositionAGL", "server": false}, "doArtilleryFire": {"reviewLevel": 2, "syntax": "<objUnit> doArtilleryFire [position,type,rounds]", "local": false, "example": "mortar1 doArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];", "docSyntax": "unit doArtilleryFire [position, type, rounds]", "broadcasted": false, "description": "Orders a unit to reload defined magazine commence fire burst on the given position (silently).", "server": false}, "setMass": {"reviewLevel": 1, "syntax": "myObject setMass [mass,<scalar>]", "local": true, "example": "myObject setMass [10,0.5];", "docSyntax": "myObject setMass [mass, time]", "broadcasted": true, "description": "Changes the mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.", "server": false}, "setLocalWindParams": {"reviewLevel": 2, "syntax": "setLocalWindParams [strength,diameter]", "local": false, "example": "setLocalWindParams [10, 5];", "docSyntax": "setLocalWindParams [strength, diameter]", "broadcasted": false, "description": "Sets parameters for helicopter rotor wash. Visually it affects how much the grass and bushes bend under a helicopter and how big is the area of the effect. Default [1.0, 1.0].", "server": false}, "backpackMagazines": {"reviewLevel": 2, "syntax": "backpackMagazines <objUnit>", "local": false, "example": "backpackMagazines player;", "docSyntax": "backpackMagazines unit", "broadcasted": false, "description": "Get array with all magazines from backpack of the given unit.", "server": false}, "get3DENActionState": {"reviewLevel": 1, "syntax": "get3DENActionState action", "local": false, "example": "if (get3DENActionState \"ToggleMap\" == 1) then {systemChat \"Editor map is open!\"};", "docSyntax": "get3DENActionState action", "broadcasted": false, "description": "Returns state of given action in the Eden Editor.", "server": false}, "remove3DENLayer": {"reviewLevel": 1, "syntax": "remove3DENLayer layerID", "local": false, "example": "_myLayer = -1 add3DENLayer \"Enemy Base\"; remove3DENLayer _myLayer\u00c2\u00a0;", "docSyntax": "remove3DENLayer layerID", "broadcasted": false, "description": "Remove Eden Editor editing layer.", "server": false}, "openSteamApp": {"reviewLevel": 1, "syntax": "openSteamApp appID", "local": false, "example": "openSteamApp 553228", "docSyntax": "openSteamApp appID", "broadcasted": false, "description": "Opens a Steam application, returns false if it wasn't possible to run the application.", "server": false}, "selectionNames": {"reviewLevel": 2, "syntax": "selectionNames <object>", "local": false, "example": "_house= \"Land_i_House_Small_02_V3_F\" createVehicle _pos; selectionNames _house; //[ // \"door_1\",\"door_2\",\"damt_1\",\"door_handle_1\",\"door_handle_2\",\"glass_1_hide\", // \"glass_2_hide\",\"glass_3_hide\",\"glass_1_unhide\",\"glass_2_unhide\",\"glass_3_unhide\", // \"glass_4_hide\",\"glass_4_unhide\" //]", "docSyntax": "selectionNames object", "broadcasted": false, "description": "Returns the list of model selections", "server": false}, "BIS_fnc_effectKilled": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_animateTaskWaypoint": {"reviewLevel": 1, "syntax": "param call BIS_fnc_animateTaskWaypoint;", "local": false, "example": "[player] call BIS_fnc_animateTaskWaypoint;", "docSyntax": "param call BIS_fnc_animateTaskWaypoint;", "broadcasted": false, "description": "Plays an animation that pushes the active task waypoint up and down.", "server": false}, "isEqualTypeAny": {"reviewLevel": 1, "syntax": "val isEqualTypeAny types", "local": false, "example": "_var = [1,2,3]; _var isEqualTypeAny [0,\"\",objNull]; //false _var isEqualTypeAny [0,\"\",objNull,[]]; //true", "docSyntax": "val isEqualTypeAny types", "broadcasted": false, "description": "Compares type of given value to every type in the given array and if match is found, true is returned.", "server": false}, "BIS_fnc_baseWeapon": {"reviewLevel": 2, "syntax": "[\"weaponName\"] call BIS_fnc_baseWeapon;", "local": false, "example": "newGun [\"arifle_Mk20_MRCO_pointer_F\"] call BIS_fnc_baseWeapon; // Returns \"arifle_Mk20_F\"", "docSyntax": "[\"weaponName\"] call BIS_fnc_baseWeapon;", "broadcasted": false, "description": "Determines base weapon class, with no attachments.", "server": false}, "BIS_fnc_VRCoursePlaceables1": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "deleteRange": {"reviewLevel": 2, "syntax": "<array> deleteRange [from,count]", "local": false, "example": "_arr = [1,2,3,4,5,6]; _arr deleteRange [1,4]; hint str _arr; //[1,6]", "docSyntax": "array deleteRange [from, count]", "broadcasted": false, "description": "Removes a range of array elements from the given array (modifies the original array, just like resize or set).", "server": false}, "getAnimAimPrecision": {"reviewLevel": 2, "syntax": "getAnimAimPrecision <objUnit>", "local": false, "example": "getAnimAimPrecision player;", "docSyntax": "getAnimAimPrecision unit", "broadcasted": false, "description": "Returns aim precision for current animation", "server": false}, "BIS_fnc_moduleMode": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_taskSetDestination": {"reviewLevel": 2, "syntax": "[<string>,destination] call BIS_fnc_taskSetDestination", "local": false, "example": "[\"BIS_task_01\",[1337,1337,0]] call BIS_fnc_taskSetDestination;", "docSyntax": "[taskName, destination] call BIS_fnc_taskSetDestination", "broadcasted": false, "description": "Set a task's destination.", "server": false}, "BIS_fnc_tridentSetRelationship": {"reviewLevel": 2, "syntax": "[side_1,side_2,<scalar>,absolute] call BIS_fnc_tridentSetRelationship", "local": false, "example": "[ west, east, 0.5, true ] call BIS_fnc_tridentSetRelationship;", "docSyntax": "[side_1,side_2,value,absolute] call BIS_fnc_tridentSetRelationship", "broadcasted": false, "description": "Set relationship of competing Trident sides. When the value reaches threshold, side relationship will change. The value slowly decreases towards 0.", "server": false}, "Revive": {"server": false, "broadcasted": false, "local": false}, "getAllSoundControllers": {"reviewLevel": 2, "syntax": "getAllSoundControllers <objVehicle>", "local": false, "example": "getAllSoundControllers vehicle player;", "docSyntax": "getAllSoundControllers vehicle", "broadcasted": false, "description": "Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds.", "server": false}, "assignCurator": {"reviewLevel": 2, "syntax": "<objUnit> assignCurator <objCurator>", "local": false, "example": "player assignCurator myCurator;", "docSyntax": "player assignCurator curatorObj", "broadcasted": false, "description": "Assign player as curator. Two players cannot act as one curator.", "server": false}, "enableMimics": {"reviewLevel": 2, "syntax": "<objUnit> enableMimics <bool>", "local": false, "example": "cursorTarget enableMimics false;", "docSyntax": "unit enableMimics enabled", "broadcasted": false, "description": "Enables/disables mimics on a given unit.", "server": false}, "ropeLength": {"reviewLevel": 1, "syntax": "ropeLength rope", "local": false, "example": "_length = ropeLength (ropes heli1 select 0);", "docSyntax": "ropeLength rope", "broadcasted": false, "description": "Return rope length in meters (set by ropeCreate, ropeCut, ropeUnwind)", "server": false}, "allUnitsUAV": {"reviewLevel": 2, "syntax": "allUnitsUAV", "local": false, "example": "hint format [\"No. of UAV(s) on the map:\u00c2\u00a0%1\", count allUnitsUAV];", "docSyntax": "allUnitsUAV", "broadcasted": false, "description": "Return a list of all UAV vehicles.", "server": false}, "setGroupOwner": {"reviewLevel": 1, "syntax": "<objGroup> setGroupOwner clientID", "local": false, "example": "_localityChanged = _someGroup setGroupOwner (owner _playerObject);", "docSyntax": "group setGroupOwner clientID", "broadcasted": false, "description": "Changes the ownership of a group (and all its units) to a given client. Group leader can't be a player. Only works when called from a server. Returns true if locality was changed. For agents use setOwner command.", "server": false}, "addHeadgear": {"reviewLevel": 2, "syntax": "<objUnit> addHeadgear <objItem>", "local": false, "example": "player addHeadgear \"H_HelmetB\";", "docSyntax": "unit addHeadgear item", "broadcasted": true, "description": "Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.", "server": true}, "selectWeaponTurret": {"reviewLevel": 2, "syntax": "<objVehicle> selectWeaponTurret [<string>,turretPath]", "local": false, "example": "MBT_Kuma selectWeaponTurret [\"LMG_coax\",[0]];", "docSyntax": "vehicle selectWeaponTurret [weapon, turretPath]", "broadcasted": false, "description": "Selects the given weapon on specified turret. Use turret path [-1] for driver's turret. Since ver. 1.63.136864 this command supports both weapon name and muzzle name.", "server": false}, "uniform": {"reviewLevel": 2, "syntax": "uniform <objUnit>", "local": false, "example": "_uniform = uniform _unit", "docSyntax": "uniform unit", "broadcasted": false, "description": "Returns name of uniform.", "server": true}, "BIS_fnc_removeCommMenuItem": {"reviewLevel": 2, "syntax": "[owner,itemID] call BIS_fnc_removeCommMenuItem;", "local": false, "example": "[player,2] call BIS_fnc_removeCommMenuItem;", "docSyntax": "[owner,itemID] call BIS_fnc_removeCommMenuItem;", "broadcasted": false, "description": "Remove an item from the communication menu.", "server": false}, "airDensityRTD": {"reviewLevel": 2, "syntax": "airDensityRTD <scalar>", "local": false, "example": "_density = airDensityRTD 0;//Returns 1.22406", "docSyntax": "airDensityRTD altitude", "broadcasted": false, "description": "Returns air density in given altitude", "server": false}, "getCompatiblePylonMagazines": {"reviewLevel": 1, "syntax": "<objVehicle> getCompatiblePylonMagazines pylon", "local": false, "example": "vehicle player getCompatiblePylonMagazines 0; // returns array of arrays containing all compatible magazines", "docSyntax": "vehicle getCompatiblePylonMagazines pylon", "broadcasted": false, "description": "Get array of compatible pylon magazines", "server": false}, "ctrlSetModelScale": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetModelScale <scalar>", "local": false, "example": "_ctrl3D ctrlSetModelScale 1.5;", "docSyntax": "control ctrlSetModelScale scale", "broadcasted": false, "description": "Sets 3D control model scale", "server": false}, "getOxygenRemaining": {"reviewLevel": 2, "syntax": "getOxygenRemaining <objUnit>", "local": false, "example": "_oxygen = getOxygenRemaining player;", "docSyntax": "getOxygenRemaining unit", "broadcasted": false, "description": "Returns amount of remaining oxygen.", "server": false}, "BIS_fnc_removeRespawnInventory": {"reviewLevel": 2, "syntax": "[<object>,<scalar>] call BIS_fnc_removeRespawnInventory;", "local": false, "example": "[west, 1] call BIS_fnc_removeRespawnInventory;", "docSyntax": "[target,id] call BIS_fnc_removeRespawnInventory;", "broadcasted": false, "description": "Remove a respawn inventory added by BIS_fnc_addRespawnInventory.", "server": false}, "BIS_fnc_showAANArticle": {"reviewLevel": 2, "syntax": "[arrayOfArrays,<uiDisplay>,fade] call BIS_fnc_showAANArticle", "local": false, "example": "[ [ [\"title\",\"My Title\"], [\"meta\",[\"Katherine Bishop\",[2035,2,24,11,38],\"CET\"]], [\"textbold\",\"This is a bold text\"], [\"image\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\orange_overview_ca.paa\",\"Some image description\"]], [\"box\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\Faction_IDAP_overview_CA.paa\",\"You won't believe how playing Showcase Laws of War can change your life!\"]], [\"text\",\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tincidunt pretium ultricies. Etiam ac ornare est, quis posuere nisl. Mauris facilisis lectus eu turpis maximus consequat. Donec ut metus nec risus tristique mattis. Ut posuere rutrum tellus, ut molestie orci mattis id. Cras ultrices euismod diam, in venenatis nunc commodo eget. Interdum et malesuada fames ac ante ipsum primis in faucibus. Morbi congue dolor rutrum lectus euismod, ac faucibus magna molestie. Aliquam in libero sit amet eros sagittis tristique. Nam pellentesque dignissim aliquam.\"], [\"textlocked\",[\"Sed non est risus. Nulla condimentum at leo sed bibendum. Phasellus laoreet sit amet leo tincidunt consequat. Curabitur nec hendrerit purus. Nam massa nisi, mattis in aliquet consectetur, ornare eget nibh. Nunc dignissim, nibh sit amet ultrices tincidunt, mi nulla fermentum quam, non condimentum dolor eros vulputate massa.\",\"SUBSCRIBE PLZ\"]], [\"author\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\avatar_journalist_ca.paa\",\"Katherine Bishop is a journalist\"]] ] ] call bis_fnc_showAANArticle;", "docSyntax": "[arrayOfArrays, display, fade] call BIS_fnc_showAANArticle", "broadcasted": false, "description": "Show AAN article", "server": false}, "BIS_fnc_sideID": {"reviewLevel": 1, "syntax": "testedSide call BIS_fnc_sideID", "local": false, "example": "west call BIS_fnc_sideID; // returns 1", "docSyntax": "testedSide call BIS_fnc_sideID", "broadcasted": false, "description": "Return config side number.", "server": false}, "getDescription": {"reviewLevel": 2, "syntax": "getDescription <objUnit>", "local": false, "example": "", "docSyntax": "getDescription unit", "broadcasted": false, "description": "Returns the string representation of unit as an four slots array.", "server": false}, "enableSatNormalOnDetail": {"reviewLevel": 1, "syntax": "enableSatNormalOnDetail state", "local": false, "example": "enableSatNormalOnDetail true;", "docSyntax": "enableSatNormalOnDetail state", "broadcasted": false, "description": "Enables/Disables satellite normal map od detail maps.", "server": false}, "removeAllItemsWithMagazines": {"reviewLevel": 2, "syntax": "removeAllItemsWithMagazines <objUnit>", "local": false, "example": "removeAllItemsWithMagazines player;", "docSyntax": "removeAllItemsWithMagazines unit", "broadcasted": false, "description": "Removes all itemsWithMagazines from the uniform, vest and backpack.", "server": false}, "Pixel_Grid_System": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_animalSiteSpawn": {"reviewLevel": 2, "syntax": "[animalSite,classnamesToSpawn,radius] call BIS_fnc_animalSiteSpawn;", "local": false, "example": "[ player, [\"rabbit_f\",\"turtle_f\",\"hen_random_f\"], 200] call BIS_fnc_animalSiteSpawn;", "docSyntax": "[animalSite, classnamesToSpawn, radius] call BIS_fnc_animalSiteSpawn;", "broadcasted": false, "description": "Create an area that spawns animals. The animals will be created or deleted if a player is inside or outside the area's radius. Can only be used by the server or in singleplayer.", "server": false}, "getModelInfo": {"reviewLevel": 2, "syntax": "getModelInfo <object>", "local": false, "example": "_modelInfo = getModelInfo player;", "docSyntax": "getModelInfo object", "broadcasted": false, "description": "Returns object's model info in format [modelName, modelPath, hasSkeleton]. Model path is suitable for use with createSimpleObject command.", "server": false}, "BIS_fnc_randomPos": {"reviewLevel": 2, "syntax": "[whitelist,blacklist,<code>] call BIS_fnc_randomPos", "local": false, "example": "_randomPosMapNoWater = [] call BIS_fnc_randomPos;", "docSyntax": "[whitelist, blacklist, code] call BIS_fnc_randomPos", "broadcasted": false, "description": "Selects random position according to given params within given area", "server": false}, "getPosATLVisual": {"reviewLevel": 2, "syntax": "getPosATLVisual <object>", "local": false, "example": "_playerRenderedPosATL = getPosATLVisual player;", "docSyntax": "getPosATLVisual object", "broadcasted": false, "description": "Returns an object's rendered 3D position ATL (z value above ground) in render time scope.", "server": true}, "assignItem": {"reviewLevel": 2, "syntax": "<objUnit> assignItem <objItem>", "local": false, "example": "bluforUnit addItem \"NVGoggles\"; bluforUnit assignItem \"NVGoggles\"; opforUnit addItem \"NVGoggles_OPFOR\"; opforUnit assignItem \"NVGoggles_OPFOR\"; independentUnit addItem \"NVGoggles_INDEP\"; independentUnit assignItem \"NVGoggles_INDEP\";", "docSyntax": "unit assignItem item", "broadcasted": true, "description": "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.", "server": true}, "BIS_fnc_moduleEffectsFire": {"reviewLevel": 2, "syntax": "[module] call BIS_fnc_moduleEffectsFire", "local": false, "example": "[BIS_module] call BIS_fnc_moduleEffectsFire;", "docSyntax": "[module] call BIS_fnc_moduleEffectsFire", "broadcasted": false, "description": "Creates fire on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "server": false}, "ctrlSetModelDirAndUp": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetModelDirAndUp [dir,up]", "local": false, "example": "_ctrl3D ctrlSetModelDirAndUp [[0,1,0],[0,0,1]]; //default orientation", "docSyntax": "control ctrlSetModelDirAndUp [dir, up]", "broadcasted": false, "description": "Sets orientation of 3D control model. It is similar to setVectorDirAndUp command for an object.", "server": false}, "currentNamespace": {"reviewLevel": 2, "syntax": "currentNamespace", "local": false, "example": "if (currentNamespace isEqualTo uiNamespace) then {hint \"This is uiNamespace\"};", "docSyntax": "currentNamespace", "broadcasted": false, "description": "Returns current global namespace the script runs in.", "server": false}, "goggles": {"reviewLevel": 2, "syntax": "goggles <objUnit>", "local": false, "example": "_goggles = goggles assaultDiver; //G_Diving", "docSyntax": "goggles unit", "broadcasted": false, "description": "Returns name of currently used goggles (for NVGoggles use hmd).", "server": true}, "BIS_fnc_getCfgData": {"reviewLevel": 1, "syntax": "config call BIS_fnc_getCfgData", "local": false, "example": "_value = (configFile >> \"BulletBubbles\" >> \"BulletBubbles1\") call BIS_fnc_getCfgData;", "docSyntax": "config call BIS_fnc_getCfgData", "broadcasted": false, "description": "Smart-return number, text or array value from config.", "server": false}, "BIS_fnc_adjustSimpleObject": {"reviewLevel": 2, "syntax": "[<object>,[class,model,reversed,verticalOffset,animAdjustments,selectionToHide]] call BIS_fnc_adjustSimpleObject", "local": false, "example": "[myCar, [\"B_MyCar_F\", \"path\\to\\file.p3d\"]] call BIS_fnc_adjustSimpleObject;", "docSyntax": "[object, [class, model, reversed, verticalOffset, animAdjustments, selectionToHide]] call BIS_fnc_adjustSimpleObject", "broadcasted": false, "description": "Adjust simple object vertical position, animations and selection according to provided data.", "server": false}, "enableSimulationGlobal": {"reviewLevel": 1, "syntax": "entity enableSimulationGlobal <bool>", "local": false, "example": "_myObject enableSimulationGlobal false;", "docSyntax": "entity enableSimulationGlobal enable", "broadcasted": true, "description": "MP command. Enable or disable simulation for given entity, globally. Call this only from the server. Has the same effect as enableSimulation when used in SP.", "server": true}, "squadParams": {"reviewLevel": 2, "syntax": "squadParams <objUnit>", "local": false, "example": "_info = squadParams player;", "docSyntax": "squadParams unit", "broadcasted": false, "description": "Returns data about squad of given unit loaded from squad.xml.", "server": true}, "simulWeatherSync": {"reviewLevel": 2, "syntax": "simulWeatherSync", "local": false, "example": "simulWeatherSync;", "docSyntax": "simulWeatherSync", "broadcasted": false, "description": "Synchronizes Simul Weather with Arma weather, generates all keyframes.", "server": false}, "BIS_fnc_paramWeather": {"reviewLevel": 2, "syntax": "[0] call BIS_fnc_paramWeather;", "local": false, "example": "overCastValue = [1] call BIS_fnc_paramWeather;", "docSyntax": "[0] call BIS_fnc_paramWeather;", "broadcasted": false, "description": "Sets overcast using BIS_fnc_setOvercast.", "server": false}, "BIS_fnc_localize": {"reviewLevel": 1, "syntax": "localizationString call BIS_fnc_localize", "local": false, "example": "// assuming the stringtable contains a key \"STR_someString\" with the value \"Hello world\" \"STR_someString\" call BIS_fnc_localize; // returns \"Hello world\" // assuming the stringtable does not contain a key \"STR_anotherString\" \"STR_anotherString\" call BIS_fnc_localize; // returns \"STR_anotherString\"", "docSyntax": "localizationString call BIS_fnc_localize", "broadcasted": false, "description": "Checks if passed string is localization key and if so, return the localized text. Else, returns the passed string itself.", "server": false}, "ctCurSel": {"reviewLevel": 2, "syntax": "ctCurSel <uiControl>", "local": true, "example": "_curSel = ctCurSel _control;", "docSyntax": "ctCurSel ctrl", "broadcasted": false, "description": "Returns index of the selected row. Will take only rows, but not headers into account.", "server": false}, "buldozer_LoadNewRoads": {"reviewLevel": 1, "syntax": "buldozer_LoadNewRoads path", "local": false, "example": "result = buldozer_LoadNewRoads \"C:/A3/Map_Stratis/data/roads/\"", "docSyntax": "buldozer_LoadNewRoads path", "broadcasted": false, "description": "Generates new roads. Working only in buldozer.", "server": false}, "BIS_fnc_blackIn": {"reviewLevel": 2, "syntax": "[<scalar>,smoothing] call BIS_fnc_blackIn", "local": false, "example": "[ \"TAG_aVeryUniqueID\", false ] call BIS_fnc_blackIn;", "docSyntax": "[id,smoothing] call BIS_fnc_blackIn", "broadcasted": false, "description": "Unregister a black screen. When none other black screen is registered, fade it out.", "server": false}, "BIS_fnc_moduleTTCPTriggerBehind": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "getStamina": {"reviewLevel": 2, "syntax": "getStamina <objUnit>;", "local": false, "example": "getStamina player;", "docSyntax": "getStamina unit;", "broadcasted": false, "description": "Get current stamina (~ seconds until depletion)", "server": false}, "eyeDirection": {"reviewLevel": 2, "syntax": "eyeDirection <objUnit>", "local": false, "example": "can = \"Land_Can_V3_F\" createVehicle position player; onEachFrame { can setPosASL [ (eyePos player select 0) + (eyeDirection player select 0), (eyePos player select 1) + (eyeDirection player select 1), (eyePos player select 2) + (eyeDirection player select 2) ] }", "docSyntax": "eyeDirection unit", "broadcasted": false, "description": "Returns the direction object is watching (eyes, or a vehicle primary observer).", "server": true}, "getPilotCameraTarget": {"reviewLevel": 2, "syntax": "getPilotCameraTarget <object>", "local": true, "example": "_pilotCamTrack = (getPilotCameraTarget vehicle player) select 0; _pilotCamTargetPos = (getPilotCameraTarget vehicle player) select 1; _pilotCamTarget = (getPilotCameraTarget vehicle player) select 2;", "docSyntax": "getPilotCameraTarget object", "broadcasted": false, "description": "Returns the target of the object airplane or helicopter pilotCamera tracking.", "server": false}, "BIS_fnc_diagMacrosVerify": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_moduleHandle": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_VRCourseTargetDesignation3": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_moduleTracers": {"reviewLevel": 2, "syntax": "[logic,activated] call BIS_fnc_moduleTracers", "local": false, "example": "[myLogic, true] call BIS_fnc_moduleTracers;", "docSyntax": "[logic, activated] call BIS_fnc_moduleTracers", "broadcasted": false, "description": "Function used by the Tracers module.", "server": false}, "unassignItem": {"reviewLevel": 2, "syntax": "<objUnit> unassignItem <objItem>", "local": false, "example": "bluforUnit unassignItem \"NVGoggles\"; bluforUnit removeItem \"NVGoggles\"; opforUnit unassignItem \"NVGoggles_OPFOR\"; opforUnit removeItem \"NVGoggles_OPFOR\"; independentUnit unassignItem \"NVGoggles_INDEP\"; independentUnit removeItem \"NVGoggles_INDEP\";", "docSyntax": "unit unassignItem item", "broadcasted": true, "description": "Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.", "server": true}, "addPrimaryWeaponItem": {"reviewLevel": 2, "syntax": "<objUnit> addPrimaryWeaponItem <objItem>", "local": true, "example": "player addPrimaryWeaponItem \"muzzle_snds_H\";", "docSyntax": "unit addPrimaryWeaponItem item", "broadcasted": true, "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.", "server": false}, "assignedItems": {"reviewLevel": 2, "syntax": "assignedItems <objUnit>", "local": false, "example": "hint str assignedItems player;", "docSyntax": "assignedItems unit", "broadcasted": false, "description": "Get array with all assigned items.", "server": false}, "magazinesDetailUniform": {"reviewLevel": 2, "syntax": "magazinesDetailUniform <objUnit>", "local": false, "example": "magazinesDetailUniform player", "docSyntax": "magazinesDetailUniform unit", "broadcasted": false, "description": "Returns an array with the type names of all the unit's uniform magazines.", "server": false}, "setWindStr": {"reviewLevel": 2, "syntax": "<scalar> setWindStr <scalar>", "local": false, "example": "60 setWindStr 0.8; // set the wind strength to 0.8 gradually over the next 60 seconds", "docSyntax": "time setWindStr value", "broadcasted": false, "description": "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "server": false}, "vectorCos": {"reviewLevel": 2, "syntax": "vector1 vectorCos vector2", "local": false, "example": "_cos = getPos player vectorCos [0,0,2];", "docSyntax": "vector1 vectorCos vector2", "broadcasted": false, "description": "Cosine of angle between two 3D vectors.", "server": false}, "ropeAttachedTo": {"reviewLevel": 2, "syntax": "ropeAttachedTo <objVehicle>", "local": false, "example": "_heli = ropeAttachedTo veh1;", "docSyntax": "ropeAttachedTo cargo", "broadcasted": false, "description": "Returns the ropes owner to which other objects are attached with ropes. This command is the opposite of ropeAttachedObjects.", "server": false}, "BIS_fnc_VREffectKilled": {"reviewLevel": 2, "syntax": "[<object>,instant,<scalar>] call BIS_fnc_VREffectKilled", "local": false, "example": "[ player, true, 5 ] call BIS_fnc_VREffectKilled;", "docSyntax": "[object, instant, delay] call BIS_fnc_VREffectKilled", "broadcasted": false, "description": "Delete body of a virtual soldier after he's killed.", "server": false}, "BIS_fnc_moduleCurator": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "enableDynamicSimulationSystem": {"reviewLevel": 2, "syntax": "enableDynamicSimulationSystem <bool>", "local": false, "example": "enableDynamicSimulationSystem true;", "docSyntax": "enableDynamicSimulationSystem enable", "broadcasted": false, "description": "Enables or disables the whole Arma_3_Dynamic_Simulation system", "server": false}, "backpackCargo": {"reviewLevel": 1, "syntax": "backpackCargo box", "local": false, "example": "hint str backpackCargo vehicle player;", "docSyntax": "backpackCargo box", "broadcasted": false, "description": "Get array with backpacks from ammo box (or any general weapon holder container).", "server": false}, "BIS_fnc_respawnInstant": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "handgunItems": {"reviewLevel": 2, "syntax": "handgunItems <objUnit>", "local": false, "example": "handgunItems player; /* [ \"muzzle_snds_L\", //silencer \"\", //laser \"\", //optics \"\" //bipod ]", "docSyntax": "handgunItems unit", "broadcasted": false, "description": "Returns array with all items assigned to the handgun. This command is used for infantry weapons only.", "server": true}, "lbSetSelectColor": {"reviewLevel": 2, "syntax": "lbSetSelectColor [<scalar>,<scalar>,<scalar>]", "local": false, "example": "lbSetSelectColor [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetSelectColor [idc, index, color]", "broadcasted": false, "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.", "server": false}, "disableRemoteSensors": {"reviewLevel": 1, "syntax": "disableRemoteSensors state", "local": false, "example": "disableRemoteSensors false;", "docSyntax": "disableRemoteSensors state", "broadcasted": false, "description": "This command will halt raycasting calculations (on the local machine only) for all groups which don't contain any local entities. If a group contains a single local entity then calculations will still be performed for the entire group.", "server": false}, "getFuelCargo": {"reviewLevel": 2, "syntax": "getFuelCargo <objVehicle>", "local": false, "example": "value = getFuelCargo myVehicleName;", "docSyntax": "getFuelCargo vehicle", "broadcasted": false, "description": "Returns the fuel amount (between 0 and 1) in the cargo space of a refuelling vehicle.", "server": true}, "BIS_fnc_effectKilledSecondaries": {"example": "", "server": false, "broadcasted": false, "description": "//Small secondary fuel explosions //By Maddmatt for ArmA 2", "local": false}, "BIS_fnc_rscLayer": {"reviewLevel": 2, "syntax": "[layerName] call BIS_fnc_rscLayer", "local": false, "example": "_id = [\"myLayerName\"] call BIS_fnc_rscLayer;", "docSyntax": "[layerName] call BIS_fnc_rscLayer", "broadcasted": false, "description": "Register RSC layer.", "server": false}, "groupFromNetId": {"reviewLevel": 2, "syntax": "groupFromNetId <scalar>", "local": false, "example": "_group = groupFromNetId \"4:45\";", "docSyntax": "groupFromNetId id", "broadcasted": false, "description": "Get group with given unique ID. For objects use objectFromNetId. As this command is MP only, you can use BIS_fnc_groupFromNetId, which extends the use to SP as well.", "server": false}, "stance": {"reviewLevel": 2, "syntax": "stance <objUnit>", "local": false, "example": "if (stance player == \"STAND\") then {hint \"I am standing!\"};", "docSyntax": "stance unit", "broadcasted": false, "description": "Returns the stance of the given unit. It can be one of:", "server": true}, "BIS_fnc_moduleSaveGame": {"reviewLevel": 2, "syntax": "[nil,nil,activated] call BIS_fnc_moduleSaveGame", "local": false, "example": "call BIS_fnc_moduleSaveGame;", "docSyntax": "[nil,nil,activated] call BIS_fnc_moduleSaveGame", "broadcasted": false, "description": "Saves the game. Saving has to be enabled.", "server": false}, "BIS_fnc_missionRespawnType": {"reviewLevel": 1, "syntax": "type call BIS_fnc_missionRespawnType", "local": false, "example": "_respawnAsNumber = 0 call BIS_fnc_missionRespawnType;", "docSyntax": "type call BIS_fnc_missionRespawnType", "broadcasted": false, "description": "Return respawn type defined in Description.ext. Can return as Number (e.g 1) or String (e.g \"BIRD\").", "server": false}, "setGusts": {"reviewLevel": 2, "syntax": "<scalar> setGusts <scalar>", "local": false, "example": "60 setGusts 0.75;", "docSyntax": "time setGusts value", "broadcasted": false, "description": "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.", "server": false}, "getFatigue": {"reviewLevel": 2, "syntax": "getFatigue <objUnit>", "local": false, "example": "value = getFatigue player;", "docSyntax": "getFatigue unit", "broadcasted": false, "description": "Returns fatigue of given unit.", "server": true}, "getUserMFDText": {"reviewLevel": 2, "syntax": "getUserMFDText <objVehicle>", "local": false, "example": "getUserMFDText _vehicle;", "docSyntax": "getUserMFDText vehicle", "broadcasted": false, "description": "Returns array of user text variables used in MFD.", "server": false}, "vectorModelToWorld": {"reviewLevel": 1, "syntax": "<object> vectorModelToWorld modelDir", "local": false, "example": "Convert model space vector [0,-10,4] to world space; vector gets rotated according to _airplane: _airplane vectorModelToWorld [0,-10,4];", "docSyntax": "object vectorModelToWorld modelDir", "broadcasted": false, "description": "Converts vector direction from model to world space.", "server": false}, "setTimeMultiplier": {"reviewLevel": 2, "syntax": "setTimeMultiplier <scalar>;", "local": false, "example": "setTimeMultiplier 60;", "docSyntax": "setTimeMultiplier value;", "broadcasted": true, "description": "Sets a time multiplier for in-game time. The command range is now capped at 0.1 - 120 to avoid performance problems.", "server": false}, "pitch": {"reviewLevel": 2, "syntax": "pitch <objUnit>", "local": false, "example": "pitch player", "docSyntax": "pitch person", "broadcasted": false, "description": "Returns the pitch of a persons voice.", "server": false}, "drawPolygon": {"reviewLevel": 2, "syntax": "<objMap> drawPolygon [polygon,<scalar>]", "local": false, "example": "test_polygon = []; for \"_i\" from 1 to 12 do { test_polygon pushBack (player getPos [10 + random 100, 360/_i]); }; findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { _this select 0 drawPolygon [test_polygon, [0,0,1,1]]; }];", "docSyntax": "map drawPolygon [polygon, color]", "broadcasted": false, "description": "Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points. Unlike with other draw<shape> commands and due to complexity, this command does not support filling of the polygon with color. Use drawTriangle command to construct and fill polygon shape as a workaround.", "server": false}, "setWaypointName": {"reviewLevel": 1, "syntax": "waypoint setWaypointName <string>", "local": false, "example": "[_grp,2] setWaypointName \"myName\";", "docSyntax": "waypoint setWaypointName name", "broadcasted": false, "description": "Changes the waypoint name.", "server": false}, "BIS_fnc_moduleChat": {"reviewLevel": 2, "syntax": "[logic,units,isActivated] call BIS_fnc_moduleChat", "local": false, "example": "myLogic setVariable [\"Channel\", \"2\"]; myLogic setVariable [\"Text\", \"Hello everyone, this is side chat!\"]; [myLogic, [player], true] call BIS_fnc_moduleChat;", "docSyntax": "[logic, units, isActivated] call BIS_fnc_moduleChat", "broadcasted": false, "description": "Make a list of units use any *chat command (groupChat, vehicleChat, sideChat, commandChat, globalChat).", "server": false}, "BIS_fnc_ordinalNumber": {"reviewLevel": 2, "syntax": "[<scalar>,language,isFeminine] call BIS_fnc_ordinalNumber", "local": false, "example": "_second = [42] call BIS_fnc_ordinalNumber; // will return \"42nd\" for English-speaking players", "docSyntax": "[number, language, isFeminine] call BIS_fnc_ordinalNumber", "broadcasted": false, "description": "Return number as ordinal number (e.g. 1 become \"1st\")", "server": false}, "BIS_fnc_moduleCuratorAddAddons": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "isPipEnabled": {"reviewLevel": 2, "syntax": "isPipEnabled", "local": false, "example": "PIPon = isPipEnabled;", "docSyntax": "isPipEnabled", "broadcasted": false, "description": "Returns true if Picture in Picture (Render to Texture) is enabled.", "server": false}, "BIS_fnc_curatorObjectRegistered": {"reviewLevel": 2, "syntax": "[curator,<code>] call BIS_fnc_curatorObjectRegistered", "local": false, "example": "[curatorModule,{hint format [\"Curator:%1, Classes:%2\",_this # 0, _this # 1]}] call BIS_fnc_curatorObjectRegistered;", "docSyntax": "[curator, code] call BIS_fnc_curatorObjectRegistered", "broadcasted": false, "description": "Register \"curatorObjectRegistered\" handler. Cost of vehicles with crews will be automatically calculated based on vehicle + crew cost.", "server": false}, "drawLine3D": {"reviewLevel": 2, "syntax": "drawLine3D [start,end,<scalar>]", "local": false, "example": "onEachFrame { drawLine3D [getPos player, getPos cursorTarget, [1,1,1,1]]; };", "docSyntax": "drawLine3D [start, end, color]", "broadcasted": false, "description": "Draws a line of a given color between two 3D positions. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\".", "server": false}, "BIS_fnc_initVehicle": {"reviewLevel": 2, "syntax": "[<objVehicle>,variant,animations,mass] call BIS_fnc_initVehicle", "local": false, "example": "result = [this, \"\", []] call BIS_fnc_initVehicle;", "docSyntax": "[vehicle, variant, animations, mass] call BIS_fnc_initVehicle", "broadcasted": false, "description": "This function changes the textures, animation sources and/or mass of a given vehicle.", "server": false}, "setGroupIdGlobal": {"reviewLevel": 2, "syntax": "<objGroup> setGroupIdGlobal [nameFormat,nameParam1,...,nameParamN]", "local": false, "example": "", "docSyntax": "group setGroupIdGlobal [nameFormat, nameParam1, ..., nameParamN]", "broadcasted": true, "description": "A global equivalent of setGroupId", "server": true}, "BIS_fnc_exportEditorPreviews": {"reviewLevel": 2, "syntax": "[duration,type,sides,mods,addons] spawn BIS_fnc_exportEditorPreviews", "local": false, "example": "// All objects [] spawn BIS_fnc_exportEditorPreviews;", "docSyntax": "[duration, type, sides, mods, addons] spawn BIS_fnc_exportEditorPreviews", "broadcasted": false, "description": "Export screeenshots of objects for Eden Editor and Community Wiki to <Arma 3 Profile>\\Screenshots\\EditorPreviews directory.", "server": false}, "BIS_fnc_exportCuratorCostTable": {"example": "", "server": false, "broadcasted": false, "description": "Generate spreadsheet with object classes and copy it to clipboard. The table will generate export code to be used in BIS_fnc_curatorObjectRegisteredTable Parameter(s): 0 (Optional): ARRAY of STRINGs - supported addons (classes from CfgPatches). When empty, all preloaded addons will be added. Use empty string to export just the cost calculation. 1 (Optional): STRING - format, can be \"ods\" or \"xls\" 2 (Optional): STRING - name of sheet with cost calculation. When empty, the calculation will be inserted on top of the table 3 (Optional): ARRAY of SIDEs or NUMBERs - filter only objects of listed sides or side IDs. Supported sides are west, east, resistance, civilian, sideUnknown and sideLogic 4 (Optional): CODE - condition for class to be listed. Config path to the class is passed as an argument (default: {true}) 5 (Optional): CODE - default cost, must return STRING. When empty string is returned, no default cost will be used (default: {\"\"}) Returns: BOOL", "local": false}, "cancelSimpleTaskDestination": {"reviewLevel": 2, "syntax": "cancelSimpleTaskDestination <objTask>", "local": false, "example": "cancelSimpleTaskDestination myTask;", "docSyntax": "cancelSimpleTaskDestination task", "broadcasted": false, "description": "Cancels a simple task destination.", "server": false}, "disableUAVConnectability": {"reviewLevel": 2, "syntax": "<object> disableUAVConnectability [uav,checkAllItems]", "local": false, "example": "unit disableUAVConnectability [uav,true];", "docSyntax": "object disableUAVConnectability [uav, checkAllItems]", "broadcasted": false, "description": "Disables unit's AV terminal(s) connecting to UAV.", "server": false}, "pushBackUnique": {"reviewLevel": 1, "syntax": "<array> pushBackUnique element", "local": false, "example": "_arr = [1,2,3]; _index = _arr pushBackUnique 3; hint str [_index, _arr]; //[-1,[1,2,3]]", "docSyntax": "array pushBackUnique element", "broadcasted": false, "description": "Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array.", "server": false}, "BIS_fnc_showCuratorFeedbackMessage": {"reviewLevel": 2, "syntax": "[curator,messageInfo] call BIS_fnc_showCuratorFeedbackMessage;", "local": false, "example": "[objNull, 404] call BIS_fnc_showCuratorFeedbackMessage;", "docSyntax": "[curator, messageInfo] call BIS_fnc_showCuratorFeedbackMessage;", "broadcasted": false, "description": "Show feedback message when illegal operation is attempted in curator interface.", "server": false}, "ctSetData": {"reviewLevel": 2, "syntax": "<uiControl> ctSetData [<scalar>,data]", "local": true, "example": "_control ctSetData [0, \"Test\"];", "docSyntax": "ctrl ctSetData [index, data]", "broadcasted": false, "description": "Associates metadata (string) with the row determined by the index. Returns Nothing.", "server": false}, "commandArtilleryFire": {"reviewLevel": 2, "syntax": "<objUnit> commandArtilleryFire [position,type,rounds]", "local": false, "example": "mortar1 commandArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];", "docSyntax": "unit commandArtilleryFire [position, type, rounds]", "broadcasted": false, "description": "Orders a unit to reload defined magazine commence fire burst on the given position (via the radio).", "server": false}, "isBleeding": {"reviewLevel": 2, "syntax": "isBleeding <objUnit>", "local": false, "example": "if (isBleeding player) then { player groupChat \"I'm bleeding!!\"; }", "docSyntax": "isBleeding unit", "broadcasted": false, "description": "Returns whether the unit is bleeding.", "server": false}, "removeWeaponGlobal": {"reviewLevel": 2, "syntax": "<objUnit> removeWeaponGlobal <string>", "local": false, "example": "{ _x removeWeaponGlobal \"Laserdesignator\"; } forEach allUnits;", "docSyntax": "unit removeWeaponGlobal weapon", "broadcasted": true, "description": "Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.", "server": true}, "groupOwner": {"reviewLevel": 2, "syntax": "groupOwner <objGroup>", "local": false, "example": "_clientID = groupOwner _someGroup;", "docSyntax": "groupOwner group", "broadcasted": false, "description": "Returns ID of client to which the group is local. Can be run only from server. When called from client, it always returns 0", "server": true}, "getHitIndex": {"reviewLevel": 1, "syntax": "<objVehicle> getHitIndex hitPartIndex", "local": false, "example": "vehicle player getHitIndex 3;", "docSyntax": "vehicle getHitIndex hitPartIndex", "broadcasted": false, "description": "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.", "server": true}, "tvSetTooltip": {"reviewLevel": 2, "syntax": "tvSetTooltip [<scalar>,path,<string>]", "local": false, "example": "tvSetTooltip [101, [0,2], \"This is a tooltip\"];", "docSyntax": "tvSetTooltip [idc, path, text]", "broadcasted": false, "description": "Sets the tooltip text associated with the specified tree view path.", "server": false}, "pixelGridBase": {"reviewLevel": 2, "syntax": "pixelGridBase", "local": false, "example": "_gridBaseHeight = pixelH * pixelGridBase;", "docSyntax": "pixelGridBase", "broadcasted": false, "description": "Returns grid size based on screen resolution.", "server": false}, "BIS_fnc_moduleFDCPIn": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "lbSetPictureColorSelected": {"reviewLevel": 2, "syntax": "lbSetPictureColorSelected [<scalar>,<scalar>,<scalar>]", "local": false, "example": "lbSetPictureColorSelected [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetPictureColorSelected [idc, index, color]", "broadcasted": false, "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", "server": false}, "BIS_fnc_sideColor": {"reviewLevel": 2, "syntax": "[<objSide>,returnString] call BIS_fnc_sideColor;", "local": false, "example": "[blufor, false] call BIS_fnc_sideColor; // Returns [0,0.3,0.6,1]", "docSyntax": "[side, returnString] call BIS_fnc_sideColor;", "broadcasted": false, "description": "Returns colour of define side either as Array in format RGBA or the name of the colour as String", "server": false}, "soldierMagazines": {"reviewLevel": 2, "syntax": "soldierMagazines <objUnit>", "local": false, "example": "soldierMagazines player;", "docSyntax": "soldierMagazines unit", "broadcasted": false, "description": "Get array with all magazines of the given unit.", "server": false}, "BIS_fnc_VRCourseBallistics4": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "setSuppression": {"reviewLevel": 2, "syntax": "<objUnit> setSuppression <scalar>", "local": false, "example": "AI_unit_1 setSuppression 1;", "docSyntax": "unit setSuppression value", "broadcasted": false, "description": "Sets the person's suppression, from 0 to 1.", "server": false}, "enableDynamicSimulation": {"reviewLevel": 2, "syntax": "<object> enableDynamicSimulation <bool>", "local": false, "example": "_myObject enableDynamicSimulation true;", "docSyntax": "object enableDynamicSimulation enable", "broadcasted": false, "description": "Enables or disables Arma_3_Dynamic_Simulation for given non AI object", "server": false}, "shownHUD": {"reviewLevel": 2, "syntax": "shownHUD", "local": false, "example": "_hudStatus = shownHUD;", "docSyntax": "shownHUD", "broadcasted": false, "description": "Returns array of Booleans corresponding to the visibility of various HUD elements (see extended showHUD).", "server": false}, "BIS_fnc_fadeEffect": {"reviewLevel": 2, "syntax": "[fadeInOrOut,blackOrWhite,duration,blur,music,ending,success] call BIS_fnc_fadeEffect", "local": false, "example": "[1, \"WHITE\", 5, 1] call BIS_fnc_fadeEffect;", "docSyntax": "[fadeInOrOut, blackOrWhite, duration, blur, music, ending, success] call BIS_fnc_fadeEffect", "broadcasted": false, "description": "Easily carry out complex fading. Default values will be used if parameters aren't defined or set to nil.", "server": false}, "compileFinal": {"reviewLevel": 1, "syntax": "<code> = compileFinal expression", "local": false, "example": "myCode = compileFinal \"a = a + 1\"; call myCode;", "docSyntax": "code = compileFinal expression", "broadcasted": false, "description": "Compile expression and makes it final, preventing it from:", "server": false}, "weaponsItems": {"reviewLevel": 2, "syntax": "weaponsItems <objVehicle>", "local": false, "example": "hint str weaponsItems player;", "docSyntax": "weaponsItems vehicle", "broadcasted": false, "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons.", "server": false}, "rotorsForcesRTD": {"reviewLevel": 2, "syntax": "rotorsForcesRTD RTD_helicopter", "local": false, "example": "_rotorForces = rotorsForcesRTD _taru// Returns [[-465.981,351.941,45960.5],[-469.079,397.451,46933.3]]", "docSyntax": "rotorsForcesRTD RTD_helicopter", "broadcasted": false, "description": "Returns force produced by rotors.", "server": false}, "BIS_fnc_isUnitVirtual": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_isUnitVirtual", "local": false, "example": "_isVirtual = someObject call BIS_fnc_isUnitVirtual;", "docSyntax": "[object] call BIS_fnc_isUnitVirtual", "broadcasted": false, "description": "Return if unit is virtual (used for example for Zeus players).", "server": false}, "isRemoteExecuted": {"reviewLevel": 2, "syntax": "isRemoteExecuted", "local": false, "example": "_remoteExecuted = isRemoteExecuted;", "docSyntax": "isRemoteExecuted", "broadcasted": false, "description": "Returns true if the code context is being remote executed by remoteExec or remoteExecCall. In SP always returns false. See also isRemoteExecutedJIP", "server": false}, "tvCount": {"reviewLevel": 2, "syntax": "tvCount [<scalar>,[path]]", "local": true, "example": "tvCount [101, [0]];", "docSyntax": "tvCount [idc, [path]]", "broadcasted": false, "description": "Returns childrens count of item on given path. IDC means id of parent Tree View.", "server": false}, "tvCollapse": {"reviewLevel": 2, "syntax": "tvCollapse [<scalar>,path]", "local": true, "example": "tvCollapse [101, [0]];", "docSyntax": "tvCollapse [idc, path]", "broadcasted": false, "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.", "server": false}, "getClientStateNumber": {"reviewLevel": 2, "syntax": "getClientStateNumber", "local": false, "example": "_state = getClientStateNumber;", "docSyntax": "getClientStateNumber", "broadcasted": false, "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:", "server": false}, "BIS_fnc_onDiaryChanged": {"example": "", "server": false, "broadcasted": false, "description": "Register code to be executed when diary item changes. Arguments passed into code are: 0: DISPLAY - map display 1: BOOL - true if clicked on subject list, false when on record list (clicking on subject may also trigger record) 2: STRING - subject name 3: STRING - record name 4: ANY - passed arguments (index of onDiaryChanged code when no custom arguments were used) Parameter(s): _this: CODE ARRAY - code with custom arguments in format [CODE,ARG1,ARG2,...] NUMBER - remove code of given index Returns: NUMBER - index of onDiaryChanged code", "local": false}, "BIS_fnc_curatorWaypointPlaced": {"reviewLevel": 2, "syntax": "[<object>,waypointGroup,waypointID] call BIS_fnc_curatorWaypointPlaced", "local": false, "example": "[curatorModule, group player, 5] call BIS_fnc_curatorWaypointPlaced;", "docSyntax": "[object, waypointGroup, waypointID] call BIS_fnc_curatorWaypointPlaced", "broadcasted": false, "description": "Code executed when curator waypoint is placed.", "server": false}, "BIS_fnc_moduleFDFadeMarker": {"reviewLevel": 2, "syntax": "[<string>,alpha] spawn BIS_fnc_moduleFDFadeMarker", "local": false, "example": "[\"tankMarker\", 0.25] spawn BIS_fnc_moduleFDFadeMarker;", "docSyntax": "[markerName, alpha] spawn BIS_fnc_moduleFDFadeMarker", "broadcasted": false, "description": "Gradually change the alpha of the given marker.", "server": false}, "BIS_fnc_setRespawnDelay": {"example": "", "server": false, "broadcasted": false, "description": "Increase the respawn time based on a condition Parameter(s): 0: CODE - Condition, must return BOOL 1: NUMBER - delay in seconds which is applied when the condition is true 2: STRING - description displayed when the delay is in effect Returns: NOTHING", "local": false}, "BIS_fnc_initParams": {"reviewLevel": 2, "syntax": "[modules] call BIS_fnc_initParams;", "local": false, "example": "call BIS_fnc_initParams;", "docSyntax": "[modules] call BIS_fnc_initParams;", "broadcasted": false, "description": "Initialize mission params and create log in the diary.", "server": false}, "ropeAttachTo": {"reviewLevel": 1, "syntax": "[veh,toPoint,ropeEndDownDir] ropeAttachTo rope", "local": false, "example": "[veh1,[0,0,0],[0,0,-1]] ropeAttachTo (ropes heli1 select 0);", "docSyntax": "[veh, toPoint, ropeEndDownDir] ropeAttachTo rope", "broadcasted": false, "description": "Attach vehicle to rope with optional offset", "server": false}, "animationSourcePhase": {"reviewLevel": 1, "syntax": "<object> animationSourcePhase source", "local": false, "example": "_phase = house animationSourcePhase \"Door_1_source\";", "docSyntax": "object animationSourcePhase source", "broadcasted": false, "description": "Returns current animation phase of given source. Similar to animationPhase or doorPhase but designed to complement animateSource. This command could be used to obtain relative turret direction and gun elevation on a vehicle (see Example 2)", "server": false}, "BIS_fnc_moduleShowHide": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "sendAUMessage": {"reviewLevel": 2, "syntax": "sendAUMessage [clientList,command]", "local": false, "example": "sendAUMessage [[dpnid1, dpnid2], \"ConnectTo: 192.168.1.66\"]", "docSyntax": "sendAUMessage [clientList, command]", "broadcasted": false, "description": "Send the command to the list of clients.", "server": false}, "get3DENGrid": {"reviewLevel": 1, "syntax": "get3DENGrid type", "local": false, "example": "currentMovementIncrement = get3DENGrid \"t\";// returns 1", "docSyntax": "get3DENGrid type", "broadcasted": false, "description": "Returns the grid increment for the given transformation type.", "server": false}, "animateBay": {"reviewLevel": 2, "syntax": "<objVehicle> animateBay [pylon <string>/<scalar>,anim phase]", "local": false, "example": "(vehicle player) animateBay [\"pylonLeft1\", 0.5];", "docSyntax": "vehicle animateBay [pylon name/index, anim phase]", "broadcasted": false, "description": "Force animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state =1.", "server": false}, "BIS_fnc_ambientAnimCombat": {"reviewLevel": 2, "syntax": "[<objUnit>,animationset,equipmentlevel,condition,behaviour] call BIS_fnc_ambientAnimCombat;", "local": false, "example": "[_unit,\"STAND\",\"FULL\",{(player distance _this) < 5}] call BIS_fnc_ambientAnimCombat;", "docSyntax": "[unit, animationset, equipmentlevel, condition, behaviour] call BIS_fnc_ambientAnimCombat;", "broadcasted": false, "description": "Play set of ambient animations on given unit AND allows the unit to leave the ambient state and engage enemy or move away.", "server": false}, "BIS_fnc_VRSpawnEffect": {"reviewLevel": 2, "syntax": "[<object>,reverse,size] call BIS_fnc_VRSpawnEffect", "local": false, "example": "[ player, false, 5 ] call BIS_fnc_VRSpawnEffect;", "docSyntax": "[object, reverse, size] call BIS_fnc_VRSpawnEffect", "broadcasted": false, "description": "VR (unit) spawn effect.", "server": false}, "BIS_fnc_ORBATRemoveGroupOverlay": {"reviewLevel": 2, "syntax": "[path,<scalar>] call BIS_fnc_ORBATRemoveGroupOverlay", "local": false, "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 4 ] call BIS_fnc_ORBATRemoveGroupOverlay;", "docSyntax": "[path, number] call BIS_fnc_ORBATRemoveGroupOverlay", "broadcasted": false, "description": "Unregister texture(s) to be displayed over CfgORBAT group.", "server": false}, "BIS_fnc_effectPlankton": {"reviewLevel": 2, "syntax": "call BIS_fnc_effectPlankton", "local": false, "example": "call BIS_fnc_effectPlankton;", "docSyntax": "call BIS_fnc_effectPlankton", "broadcasted": false, "description": "Create underwater plankton particle effect.", "server": false}, "addItemCargo": {"reviewLevel": 1, "syntax": "box addItemCargo [<objItem>,count]", "local": true, "example": "supplyBox addItemCargo [\"optic_ARCO\", 10];", "docSyntax": "box addItemCargo [item, count]", "broadcasted": false, "description": "Creates new items and stores them in given container. Works with items, weapons and magazines. For global variant see addItemCargoGlobal", "server": false}, "tvSetPictureRightColorDisabled": {"reviewLevel": 2, "syntax": "<uiControl> tvSetPictureRightColorDisabled [path,<scalar>]", "local": false, "example": "_control tvSetPictureRightColorDisabled [[0], [1,0,1,1]]", "docSyntax": "control tvSetPictureRightColorDisabled [path, color]", "broadcasted": false, "description": "Sets the color of the right picture of a tree item defined by path when item is disabled", "server": false}, "BIS_fnc_liveFeedSetSource": {"reviewLevel": 1, "syntax": "source call BIS_fnc_liveFeedSetSource", "local": false, "example": "[player, [0, 0.25, 1.6]] call BIS_fnc_liveFeedSetSource;", "docSyntax": "source call BIS_fnc_liveFeedSetSource", "broadcasted": false, "description": "Set the source of the current live feed.", "server": false}, "moonPhase": {"reviewLevel": 1, "syntax": "moonPhase date", "local": false, "example": "_currentMoonPhase = moonPhase date;", "docSyntax": "moonPhase date", "broadcasted": false, "description": "Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on setDate [4804,7,13,0,0]; Use Moon Phase Utility to find out date for a mission with desired moon.", "server": false}, "firstBackpack": {"reviewLevel": 1, "syntax": "firstBackpack box", "local": false, "example": "myVariable = firstBackpack myBox;", "docSyntax": "firstBackpack box", "broadcasted": false, "description": "Returns the first stored backpack.", "server": false}, "ctrlHTMLLoaded": {"reviewLevel": 2, "syntax": "ctrlHTMLLoaded <uiControl>", "local": false, "example": "_control htmlLoad \"test.html\"; if (!ctrlHTMLLoaded _control) then { hint \"Loading test.html failed!\"; };", "docSyntax": "ctrlHTMLLoaded control", "broadcasted": false, "description": "Returns true when HTML content was successfully loaded.", "server": false}, "setRandomLip": {"reviewLevel": 2, "syntax": "<objUnit> setRandomLip <bool>", "local": false, "example": "player setRandomLip true;", "docSyntax": "unit setRandomLip bool", "broadcasted": false, "description": "Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it's talking.", "server": false}, "removeAllCuratorEditingAreas": {"reviewLevel": 2, "syntax": "removeAllCuratorEditingAreas <objCurator>", "local": false, "example": "removeAllCuratorEditingAreas myCurator;", "docSyntax": "removeAllCuratorEditingAreas curatorObj", "broadcasted": false, "description": "Delete all curator edit areas.", "server": false}, "BIS_fnc_radialRed": {"reviewLevel": 2, "syntax": "[victim,bodyPart,<scalar>,shooter] call BIS_fnc_radialRed", "local": false, "example": "player addEventHandler [\"HandleDamage\", { _this call BIS_fnc_radialRed; }];", "docSyntax": "[victim, bodyPart, damage, shooter] call BIS_fnc_radialRed", "broadcasted": false, "description": "Red radial postprocess (hit damage, fire damage). Parameters are the same as the first four of HandleDamage EH.", "server": false}, "modelToWorldVisual": {"reviewLevel": 1, "syntax": "<object> modelToWorldVisual modelPos", "local": false, "example": "_aboveAndBehindPlayer = player modelToWorldVisual [0,-1,3];", "docSyntax": "object modelToWorldVisual modelPos", "broadcasted": false, "description": "Converts position from object model space to world space in render time scope. For ASL version see modelToWorldVisualWorld.", "server": false}, "ctrlModel": {"reviewLevel": 2, "syntax": "ctrlModel <uiControl>", "local": false, "example": "_model = ctrlModel _control3D;", "docSyntax": "ctrlModel control", "broadcasted": false, "description": "Returns model used in 3D Dialog Control.", "server": false}, "BIS_fnc_VRCoursePlaceables3": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_VRFadeOut": {"reviewLevel": 2, "syntax": "call BIS_fnc_VRFadeOut", "local": false, "example": "call BIS_fnc_VRFadeOut;", "docSyntax": "call BIS_fnc_VRFadeOut", "broadcasted": false, "description": "Fade Out effect for VR.", "server": false}, "diag_activeScripts": {"reviewLevel": 2, "syntax": "diag_activeScripts", "local": false, "example": "hint str diag_activeScripts; //[0,0,0,1]", "docSyntax": "diag_activeScripts", "broadcasted": false, "description": "Returns 4 element array with numbers of currently running scripts in format: [spawn-ed, execVM-ed, exec-ed, execFSM-ed]", "server": false}, "addMissionEventHandler": {"reviewLevel": 2, "syntax": "addMissionEventHandler [type,command]", "local": false, "example": "// A script could be executed to stop custom scripts graciously, or save progress & stats, for example: _id = addMissionEventHandler [\"Ended\",{ _this execVM \"missionEnded.sqf\" }];", "docSyntax": "addMissionEventHandler [type, command]", "broadcasted": false, "description": "Adds event handler (EH) attached to the current mission and returns EH handle. If EH has some data to return upon event, it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.", "server": false}, "setCustomWeightRTD": {"reviewLevel": 1, "syntax": "helicopterRTD setCustomWeightRTD weight", "local": false, "example": "myHelicopterRTD setCustomWeightRTD 120;", "docSyntax": "helicopterRTD setCustomWeightRTD weight", "broadcasted": false, "description": "Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model.", "server": false}, "setWaypointLoiterRadius": {"reviewLevel": 1, "syntax": "waypoint setWaypointLoiterRadius radius", "local": false, "example": "[_grp, 2] setWaypointLoiterRadius 200;", "docSyntax": "waypoint setWaypointLoiterRadius radius", "broadcasted": false, "description": "Assignes loiter radius to waypoint", "server": false}, "headgear": {"reviewLevel": 2, "syntax": "headgear <objUnit>", "local": false, "example": "hint headgear player; //H_HelmetB", "docSyntax": "headgear unit", "broadcasted": false, "description": "Returns headgear of unit.", "server": true}, "BIS_fnc_VRCourseBallistics1": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "setVehicleAmmoDef": {"reviewLevel": 2, "syntax": "<objUnit> setVehicleAmmoDef <scalar>", "local": true, "example": "player setVehicleAmmoDef 0;", "docSyntax": "unit setVehicleAmmoDef value", "broadcasted": true, "description": "Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to local turrets. To check the locality of turret use turretLocal.", "server": false}, "disableMapIndicators": {"reviewLevel": 2, "syntax": "disableMapIndicators [disableFriendly,disableEnemy,disableMines,disablePing]", "local": false, "example": "Disable visualization of friendly and enemy units:disableMapIndicators [true,true,false,false];", "docSyntax": "disableMapIndicators [disableFriendly,disableEnemy,disableMines,disablePing]", "broadcasted": false, "description": "Command allows suppressing visualization of FRIENDLY, ENEMY, MINES and/or PING map indicators from difficulty setting EXTENDED MAP CONTENT.", "server": false}, "BIS_fnc_romanNumeral": {"reviewLevel": 1, "syntax": "integer call BIS_fnc_romanNumeral;", "local": false, "example": "1 call BIS_fnc_romanNumerald; //Returns \"I\"", "docSyntax": "integer call BIS_fnc_romanNumeral;", "broadcasted": false, "description": "Convert integer to roman numeral (e.g. 42 becomes \"XLII\").", "server": false}, "BIS_fnc_moduleCuratorSetAttributes": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "ctrlSetFontHeightSecondary": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetFontHeightSecondary <scalar>", "local": false, "example": "_control ctrlSetFontHeightSecondary 0.05;", "docSyntax": "ctrl ctrlSetFontHeightSecondary value", "broadcasted": false, "description": "Sets the font size of the secondary text of given control.", "server": false}, "turretOwner": {"reviewLevel": 1, "syntax": "<objVehicle> turretOwner turretPath", "local": false, "example": "_ownerId = vehicle player turretOwner [0];", "docSyntax": "vehicle turretOwner turretPath", "broadcasted": false, "description": "Returns id of the owner of the turret. Server only. Returns 0 on non-server and SP.", "server": true}, "shownUAVFeed": {"reviewLevel": 2, "syntax": "shownUAVFeed", "local": false, "example": "_bool = shownUAVFeed;", "docSyntax": "shownUAVFeed", "broadcasted": false, "description": "Returns true if video feed transmitted from UAV is shown. A getter for showUAVFeed", "server": false}, "BIS_fnc_moduleSkiptime": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setAmmo": {"reviewLevel": 2, "syntax": "<objUnit> setAmmo [<string>,count]", "local": true, "example": "Set player's handgun magazine ammo count to 10 rounds: player setAmmo [handgunWeapon player, 10];", "docSyntax": "unit setAmmo [weapon, count]", "broadcasted": true, "description": "Sets custom ammo count in the currently loaded magazine of the specified weapon. The unit must be local to the computer where command is executed.", "server": false}, "BIS_fnc_camera": {"reviewLevel": 2, "syntax": "[mode,parameter] call BIS_fnc_camera", "local": false, "example": "[] call BIS_fnc_camera;", "docSyntax": "[mode, parameter] call BIS_fnc_camera", "broadcasted": false, "description": "Splendid\u00e2\u201e\u00a2 Camera, \"Ultimate Screenshot Simulator\"", "server": false}, "isWeaponDeployed": {"reviewLevel": 2, "syntax": "isWeaponDeployed <objUnit>", "local": false, "example": "_dep = isWeaponDeployed player;", "docSyntax": "isWeaponDeployed unit", "broadcasted": false, "description": "Returns true if weapon is currently deployed.", "server": true}, "BIS_fnc_diagKnownTargets": {"reviewLevel": 2, "syntax": "[<object>,radius] call BIS_fnc_diagKnownTargets", "local": false, "example": "call BIS_fnc_diagKnownTargets;", "docSyntax": "[target, radius] call BIS_fnc_diagKnownTargets", "broadcasted": false, "description": "Visualize and profile which units one specific unit knows about and how much. Calling function again stops diagnostics.", "server": false}, "removeMagazineGlobal": {"reviewLevel": 1, "syntax": "<objUnit> removeMagazineGlobal magazineName", "local": false, "example": "player removeMagazineGlobal \"30Rnd_65x39_caseless_mag\";", "docSyntax": "unit removeMagazineGlobal magazineName", "broadcasted": true, "description": "Removes the magazine from the unit.", "server": true}, "ctrlClassName": {"reviewLevel": 2, "syntax": "ctrlClassName <uiControl>", "local": false, "example": "List class names of all controls present on display 46:_ctrls = \"\"; for \"_i\" from -1 to 10000 do { with uiNamespace do { _ctrl = findDisplay 46 displayCtrl _i; if (!isNull _ctrl) then { _ctrls = _ctrls + format [\"IDC:\u00c2\u00a0%1, Class Name:\u00c2\u00a0%2\\n\", _i, ctrlClassName _ctrl]; }; }; }; hint _ctrls;", "docSyntax": "ctrlClassName control", "broadcasted": false, "description": "Returns the class name of a Control as it is defined in config. If you need config class of a game created Display, it is stored on display itself: _className = findDisplay 12 getVariable [\"BIS_fnc_initDisplay_configClass\", \"\"]; // \"RscDiary\"", "server": false}, "BIS_fnc_countdown": {"reviewLevel": 2, "syntax": "[timeInSeconds,global] call BIS_fnc_countdown", "local": false, "example": "_countDown = [50,false] call BIS_fnc_countDown;", "docSyntax": "[timeInSeconds,global] call BIS_fnc_countdown", "broadcasted": false, "description": "Triggers a countdown. Countdown can be accessed via missionNamespace variable bis_fnc_countdown_time", "server": false}, "BIS_fnc_openFieldManual": {"reviewLevel": 2, "syntax": "[topic,hint,<uiDisplay>,filter] call BIS_fnc_openFieldManual", "local": false, "example": "[\"Damage\", \"HitDamage\"] call BIS_fnc_openFieldManual;", "docSyntax": "[topic, hint, display, filter] call BIS_fnc_openFieldManual", "broadcasted": false, "description": "Opens Field Manual in briefing (SP, MP Server, MP Client) and players's map or journal. Selects the topic and hint passed as parameters. Can apply a (search) filter if desired.", "server": false}, "slingLoadAssistantShown": {"reviewLevel": 2, "syntax": "slingLoadAssistantShown", "local": false, "example": "waitUntil {slingLoadAssistantShown}; hint \"You lack rudimentary motor skills and basic eye-hand coordination.\"; //scold user for unethical practices", "docSyntax": "slingLoadAssistantShown", "broadcasted": false, "description": "Returns true of Sling Load Assistant is open", "server": false}, "BIS_fnc_animViewer": {"reviewLevel": 2, "syntax": "call BIS_fnc_animViewer", "local": false, "example": "call BIS_fnc_animViewer;", "docSyntax": "call BIS_fnc_animViewer", "broadcasted": false, "description": "Splendid\u00e2\u201e\u00a2 Animation Viewer.", "server": false}, "removeAllAssignedItems": {"reviewLevel": 2, "syntax": "removeAllAssignedItems <objUnit>", "local": true, "example": "removeAllAssignedItems player;", "docSyntax": "removeAllAssignedItems unit", "broadcasted": true, "description": "Unassigns and deletes all linked items from inventory. The commands operates on assignedItems array, which doesnt include goggles or headgear. Use removeGoggles and removeHeadgear for those.", "server": false}, "BIS_fnc_activateAddons": {"reviewLevel": 2, "syntax": "[addons] call BIS_fnc_activateAddons", "local": false, "example": "[\"class_1\",\"class_2\"] call BIS_fnc_activateAddons;", "docSyntax": "[addons] call BIS_fnc_activateAddons", "broadcasted": false, "description": "Activate addons upon mission start. Doesn't work when the mission is already running.", "server": false}, "get3DENLayerEntities": {"reviewLevel": 1, "syntax": "get3DENLayerEntities layerID", "local": false, "example": "_myLayer = -1 add3DENLayer \"CTRG\"; player set3DENLayer _myLayer; _entities = get3DENLayerEntities _myLayer;", "docSyntax": "get3DENLayerEntities layerID", "broadcasted": false, "description": "Return all entities and sub-layer in Eden Entity layer.", "server": false}, "BIS_fnc_progressLoadingScreen": {"reviewLevel": 2, "syntax": "[progress] call BIS_fnc_progressLoadingScreen", "local": false, "example": "_IDD = _prog = [0.75] call BIS_fnc_progressLoadingScreen;", "docSyntax": "[progress] call BIS_fnc_progressLoadingScreen", "broadcasted": false, "description": "Progress scripted loading screen. The value will be preserved even when a new screen is opened.", "server": false}, "BIS_fnc_isThrowable": {"reviewLevel": 2, "syntax": "<string> call BIS_fnc_isThrowable", "local": false, "example": "_isThrowable = \"SmokeShellGreen\" call BIS_fnc_isThrowable;", "docSyntax": "magazine call BIS_fnc_isThrowable", "broadcasted": false, "description": "Returns true if given magazine is throwable", "server": false}, "selectMax": {"reviewLevel": 2, "syntax": "selectMax <array>", "local": false, "example": "_max = selectMax [1,2,3,4,5]; //5", "docSyntax": "selectMax array", "broadcasted": false, "description": "Returns the array element with maximum numerical value. Engine solution to BIS_fnc_greatestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.", "server": false}, "BIS_fnc_VRCourseTargetDesignation2": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_neutralizeUnit": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_neutralizeUnit", "local": false, "example": "cursorTarget call BIS_fnc_neutralizeUnit;", "docSyntax": "object call BIS_fnc_neutralizeUnit", "broadcasted": false, "description": "Neutralize an object by intrinsic means:", "server": false}, "BIS_fnc_nearestRoad": {"reviewLevel": 2, "syntax": "[center,radius,blacklist] call BIS_fnc_nearestRoad", "local": false, "example": "_nearestRoad = [getPosATL player, 500] call BIS_fnc_nearestRoad;", "docSyntax": "[center, radius, blacklist] call BIS_fnc_nearestRoad", "broadcasted": false, "description": "Find the nearest road segment to certain position, within given radius.", "server": false}, "BIS_fnc_initRespawnBackpack": {"reviewLevel": 2, "syntax": "call BIS_fnc_initRespawnBackpack", "local": false, "example": "call BIS_fnc_initRespawnBackpack;", "docSyntax": "call BIS_fnc_initRespawnBackpack", "broadcasted": false, "description": "Init respawn backpack. Whover \"assembles\" it will receive a new respawn position. When backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby player will receive the respawn as well.", "server": false}, "BIS_fnc_getCfgDataArray": {"reviewLevel": 1, "syntax": "config call BIS_fnc_getCfgDataArray", "local": false, "example": "_array = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataArray;", "docSyntax": "config call BIS_fnc_getCfgDataArray", "broadcasted": false, "description": "Gets an array defined in Config. If the value is not an array, it's retyped into one.", "server": false}, "BIS_fnc_moduleCuratorSetEditingAreaType": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_moduleCuratorAddCameraArea": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "removeBackpackGlobal": {"reviewLevel": 2, "syntax": "removeBackpackGlobal <objUnit>", "local": false, "example": "removeBackpackGlobal player;", "docSyntax": "removeBackpackGlobal unit", "broadcasted": true, "description": "Removes backpack from a unit. (even non-local)", "server": true}, "isAutonomous": {"reviewLevel": 1, "syntax": "isAutonomous uav", "local": false, "example": "bool = isAutonomous uav;", "docSyntax": "isAutonomous uav", "broadcasted": false, "description": "Returns true if UAV is in autonomous mode.", "server": true}, "curatorPoints": {"reviewLevel": 2, "syntax": "curatorPoints <objCurator>", "local": false, "example": "_points = curatorPoints myCurator;", "docSyntax": "curatorPoints curatorObj", "broadcasted": false, "description": "Returns number of points that curator have. Points can be only in range from 0 to 1.", "server": false}, "BIS_fnc_diagMacros": {"example": "", "server": false, "broadcasted": false, "description": "Exports config macros. Parameter(s): 0: CONFIG or ARRAY - config container to be searched (e.g. configFile >> \"CfgVehicles\") or list of classes or classnames 1: ARRAY - list of macro names to be used (e.g. [\"MAPSIZE\",\"NAMESOUND\"]) 2 (Optional): STRING - macro category name (when param 0 is CONFIG, its classname is used by default - e.g. \"CfgVehicles\") Returns: STRING", "local": false}, "ropeUnwind": {"reviewLevel": 2, "syntax": "ropeUnwind [rope,<scalar>,targetLength,relative]", "local": false, "example": "ropeUnwind [ ropes heli1 select 0, 3, 10];//set rope length to 10m at 3m/s", "docSyntax": "ropeUnwind [rope, speed, targetLength, relative]", "broadcasted": false, "description": "Unwind rope to target length. Use relative parameter for changing rope length +/- from current length", "server": false}, "vestItems": {"reviewLevel": 2, "syntax": "vestItems <objUnit>", "local": false, "example": "vestItems player;", "docSyntax": "vestItems unit", "broadcasted": false, "description": "Get array with all items (of any kind, even weapons) from vest.", "server": false}, "BIS_fnc_weaponComponents": {"reviewLevel": 2, "syntax": "[classname] call BIS_fnc_weaponComponents", "local": false, "example": "\"arifle_mx_aco_pointer_f\" call BIS_fnc_weaponComponents; //[\"arifle_mx_f\",\"optic_aco\",\"acc_pointer_ir\"]", "docSyntax": "[classname] call BIS_fnc_weaponComponents", "broadcasted": false, "description": "Returns array with classname of the parent weapon (without attachments), followed by classnames of all its attachments.", "server": false}, "BIS_fnc_taskVar": {"reviewLevel": 1, "syntax": "taskID call BIS_fnc_taskVar", "local": false, "example": "\"task_1\" call BIS_fnc_taskVar;", "docSyntax": "taskID call BIS_fnc_taskVar", "broadcasted": false, "description": "Returns task's variable name.", "server": false}, "BIS_fnc_quotations": {"example": "", "server": false, "broadcasted": false, "description": "Display a quotation video. Parameters: _this select 0: STRING - Path to quotation video file. _this select 1: STRING - String, localized or not, used for subtitles.", "local": false}, "getConnectedUAV": {"reviewLevel": 2, "syntax": "getConnectedUAV <objUnit>", "local": false, "example": "getConnectedUAV player;", "docSyntax": "getConnectedUAV unit", "broadcasted": false, "description": "Returns UAV if unit has connection to some UAV.", "server": false}, "BIS_fnc_moduleCAS": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "wingsForcesRTD": {"reviewLevel": 2, "syntax": "wingsForcesRTD RTD_helicopter", "local": false, "example": "_wingForce = wingsForcesRTD _rtdHelo", "docSyntax": "wingsForcesRTD RTD_helicopter", "broadcasted": false, "description": "Returns force produced by wings.", "server": false}, "BIS_fnc_moduleDoorOpen": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "controlsGroupCtrl": {"reviewLevel": 1, "syntax": "ctrlgrp controlsGroupCtrl <scalar>", "local": false, "example": "_control = _controlsGroup controlsGroupCtrl 101;", "docSyntax": "ctrlgrp controlsGroupCtrl idc", "broadcasted": false, "description": "Returns a child control with specified idc from a controls group", "server": false}, "allCurators": {"reviewLevel": 2, "syntax": "allCurators", "local": false, "example": "_myVariable = allCurators;", "docSyntax": "allCurators", "broadcasted": false, "description": "Returns list of all curators.", "server": false}, "BIS_fnc_moduleFDCPClear": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_removeSupportLink": {"reviewLevel": 2, "syntax": "[requester,provider] call BIS_fnc_removeSupportLink", "local": false, "example": "[requesterMod, providerMod] call BIS_fnc_removeSupportLink;", "docSyntax": "[requester,provider] call BIS_fnc_removeSupportLink", "broadcasted": false, "description": "Removes support types during a mission.", "server": false}, "BIS_fnc_moduleCoverMap": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_deleteInventory": {"reviewLevel": 2, "syntax": "[<objUnit>,input] call BIS_fnc_deleteInventory", "local": false, "example": "[ player, [ missionNamespace, \"BIS_inv\"] ] call BIS_fnc_deleteInventory;", "docSyntax": "[unit,input] call BIS_fnc_deleteInventory", "broadcasted": false, "description": "Delete loadout saved using BIS_fnc_saveInventory.", "server": false}, "BIS_fnc_forceCuratorInterface": {"reviewLevel": 2, "syntax": "[mode,waitUntil] call BIS_fnc_forceCuratorInterface", "local": false, "example": "[ True, True ] call BIS_fnc_forceCuratorInterface;", "docSyntax": "[mode, waitUntil] call BIS_fnc_forceCuratorInterface", "broadcasted": false, "description": "Force curator interface, so user cannot exit it by pressing Zeus key.", "server": false}, "configClasses": {"reviewLevel": 1, "syntax": "condition configClasses config", "local": false, "example": "collect all CfgVehicles configs: _configs = \"true\" configClasses (configFile >> \"CfgVehicles\");", "docSyntax": "condition configClasses config", "broadcasted": false, "description": "Returns an array of config entries which meet criteria in condition code.", "server": false}, "setLightAttenuation": {"reviewLevel": 1, "syntax": "light setLightAttenuation [start,constant,linear,quadratic,hardlimitstart,hardlimitend]", "local": true, "example": "myLight setLightAttenuation [2,4,4,0,9,10];", "docSyntax": "light setLightAttenuation [start, constant, linear, quadratic, hardlimitstart, hardlimitend]", "broadcasted": false, "description": "Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)). start param represents distance, where the attenuation starts to take effects (dist = distance - start).", "server": false}, "BIS_fnc_moduleObjective": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_moduleTriggers": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setPylonLoadOut": {"reviewLevel": 2, "syntax": "<objVehicle> setPylonLoadOut [pylon <string>/<scalar>,<string> <string>,forced,turret];", "local": false, "example": "(vehicle player) setPylonLoadOut [\"pylon1\", \"\"];", "docSyntax": "vehicle setPylonLoadOut [pylon name/index, magazine name, forced, turret];", "broadcasted": false, "description": "Will add missile to vehicle pylon, TransportPylonsComponent in config is required", "server": false}, "get3DENEntity": {"reviewLevel": 2, "syntax": "get3DENEntity <scalar>", "local": false, "example": "myEntity = get3DENEntity 1", "docSyntax": "get3DENEntity id", "broadcasted": false, "description": "Returns Eden Entity based on its Eden ID. If the ID points to a layer or a comment, the ID will be returned instead.", "server": false}, "curatorAddons": {"reviewLevel": 2, "syntax": "curatorAddons <objCurator>", "local": false, "example": "_addons = curatorAddons myCurator;", "docSyntax": "curatorAddons curatorObj", "broadcasted": false, "description": "Returns list of addons allowed to given curator.", "server": false}, "BIS_fnc_respawnBase": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_addCuratorChallenge": {"example": "", "server": false, "broadcasted": false, "description": "Add challenges for curator to complete Parameter(s): 0: OBJECT - curator 1 (Optional): ARRAY - list of supported challenges from CfgCuratorChallenges (default: all challenges) 2 (Optional): NUMBER - number of added challenges (default: 3) 3 (Optional): CODE - condition for challenges to remain active {default: true} 4 (optional): CODE or [CODE,STRING] - code executed upon completing all challenges and reward description Arguments passed to the code are: 0: OBJECT - curator 1: NUMBER - number of previously completed challenges by given curator 2: STRING - parent task ID 5 (Optional): STRING - parent task ID Returns: STRING - ID of parent task under which all challenge tasks are", "local": false}, "BIS_fnc_moduleStrategicMapOpen": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setPilotLight": {"reviewLevel": 1, "syntax": "<objVehicle> setPilotLight set", "local": true, "example": "car setPilotLight true;", "docSyntax": "vehicle setPilotLight set", "broadcasted": true, "description": "Switches headlights of a vehicle on/off. Note that the vehicle has to be local, for global variant use Arma 3 Actions \"LightOn\"/\"LightOff\"", "server": false}, "removeSecondaryWeaponItem": {"reviewLevel": 2, "syntax": "<objUnit> removeSecondaryWeaponItem <objItem>", "local": true, "example": "player removeSecondaryWeaponItem (secondaryWeaponItems select 0);", "docSyntax": "unit removeSecondaryWeaponItem item", "broadcasted": true, "description": "Removes given weapon item from the secondary weapon cargo space. This command also supports weapon magazines.", "server": false}, "vectorDotProduct": {"reviewLevel": 2, "syntax": "vector1 vectorDotProduct vector2", "local": false, "example": "_dot = [1,0,1] vectorDotProduct [0,0,2];", "docSyntax": "vector1 vectorDotProduct vector2", "broadcasted": false, "description": "Dot product of two 3D vectors.", "server": false}, "BIS_fnc_showCuratorAttributes": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_showCuratorAttributes", "local": false, "example": "[BIS_vehicle] call BIS_fnc_showCuratorAttributes;", "docSyntax": "[target] call BIS_fnc_showCuratorAttributes", "broadcasted": false, "description": "Show attributes window of an entity. When no attributes are available, no window is opened.", "server": false}, "get3DENEntityID": {"reviewLevel": 1, "syntax": "get3DENEntityID entity", "local": false, "example": "myID = get3DENEntityID player", "docSyntax": "get3DENEntityID entity", "broadcasted": false, "description": "Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario.", "server": false}, "admin": {"reviewLevel": 2, "syntax": "admin <scalar>", "local": false, "example": "_isLoggedInAdmin = admin 3 == 2;", "docSyntax": "admin ownerID", "broadcasted": false, "description": "This is dedicated server command, which queries the admin state of any client on the network by their client (owner) id. Possible results are:", "server": false}, "param": {"reviewLevel": 2, "syntax": "param [<scalar>,defaultValue,expectedDataTypes,expectedArrayCount]", "local": false, "example": "[1, 2, 3] call { private _one = param [0, 1]; private _two = param [1, 2]; private _three = param [2, 3]; // ..... };", "docSyntax": "param [index, defaultValue, expectedDataTypes, expectedArrayCount]", "broadcasted": false, "description": "Extracts a single value with given index from input argument, similar to BIS_fnc_param. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.", "server": false}, "removeAllMissionEventHandlers": {"reviewLevel": 1, "syntax": "removeAllMissionEventHandlers type", "local": false, "example": "removeAllMissionEventHandlers \"Loaded\";", "docSyntax": "removeAllMissionEventHandlers type", "broadcasted": false, "description": "Removes all mission event handlers of the given type which were added by addMissionEventHandler.", "server": false}, "leaderboardDeInit": {"reviewLevel": 2, "syntax": "leaderboardDeInit <string>", "local": false, "example": "leaderboardDeInit \"TT01\"", "docSyntax": "leaderboardDeInit boardName", "broadcasted": false, "description": "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.", "server": false}, "allVariables": {"reviewLevel": 1, "syntax": "allVariables namespace", "local": false, "example": "_allVarsUINamespace = allVariables uiNamespace;", "docSyntax": "allVariables namespace", "broadcasted": false, "description": "Returns a list of all variables from desired namespace. Namespaces supported:", "server": false}, "isTutHintsEnabled": {"reviewLevel": 2, "syntax": "isTutHintsEnabled", "local": false, "example": "hint str isTutHintsEnabled;", "docSyntax": "isTutHintsEnabled", "broadcasted": false, "description": "Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).", "server": false}, "tvSetText": {"reviewLevel": 2, "syntax": "tvSetText [<scalar>,path,<string>]", "local": false, "example": "tvSetText [101, [0], \"Test data\"];", "docSyntax": "tvSetText [idc, path, text]", "broadcasted": false, "description": "Sets string text to item on given path. IDC means id of parent Tree View.", "server": false}, "removeAllOwnedMines": {"reviewLevel": 2, "syntax": "removeAllOwnedMines <objUnit>", "local": false, "example": "removeAllOwnedMines player;", "docSyntax": "removeAllOwnedMines unit", "broadcasted": false, "description": "Removes ownership of all owned mines/explosive devices of the given unit", "server": false}, "BIS_fnc_relPosObject": {"reviewLevel": 2, "syntax": "[parent,child,relPos,direction] call BIS_fnc_relPosObject", "local": false, "example": "[BIS_briefingTable, BIS_map, [0, -0.58, 0.857], 98] call BIS_fnc_relPosObject;", "docSyntax": "[parent, child, relPos, direction] call BIS_fnc_relPosObject", "broadcasted": false, "description": "Place an object relative to another object, like a setRelPos command.", "server": false}, "BIS_fnc_moduleTaskSetDescription": {"example": "", "server": false, "broadcasted": false, "description": "Set Task Description module function", "local": false}, "BIS_fnc_diagKnownAsTarget": {"example": "", "server": false, "broadcasted": false, "description": "/* File: fn_diagKnownAsTarget.sqf Description: Visualize and profile which units know about one specific unit and how much they do. Calling function again stops diagnostics. Parameter(s): _this select 0: profile unit (Object) [default player] _this select 1: radius (Scalar - meters) [default 1000m] Returns: -", "local": false}, "BIS_fnc_firedBombDemine": {"example": "", "server": false, "broadcasted": false, "description": "params [ [\"_vehicle\",objnull,[objnull]], [\"_weapon\",\"\",[\"\"]], [\"_muzzle\",\"\",[\"\"]], [\"_mode\",\"\",[\"\"]], [\"_ammo\",\"\",[\"\"]], [\"_magazine\",\"\",[\"\"]], [\"_projectile\",objnull,[objnull]] ];", "local": false}, "BIS_fnc_healthEffects": {"reviewLevel": 2, "syntax": "call BIS_fnc_healthEffects", "local": false, "example": "call BIS_fnc_healthEffects;", "docSyntax": "call BIS_fnc_healthEffects", "broadcasted": false, "description": "Effects when player is hit. Parameters are sent by handleDamage event handler.", "server": false}, "BIS_fnc_smoothStep": {"reviewLevel": 2, "syntax": "<scalar> call BIS_fnc_smoothStep", "local": false, "example": "_smoothedStep = 0.75 call BIS_fnc_smoothStep;", "docSyntax": "number call BIS_fnc_smoothStep", "broadcasted": false, "description": "Interpolates between 0 and 1 with smoothing at the limits. Formula is n\u00c2\u00b2 \u00c3\u2014 (3 - 2n).", "server": false}, "isEqualTo": {"reviewLevel": 2, "syntax": "val1 isEqualTo val2", "local": false, "example": "_arr1 = [1,[2,[3]]]; _arr2 = [1,[2,[3]]]; if (_arr1 isEqualTo _arr2) then {hint \"Arrays match!\"}", "docSyntax": "val1 isEqualTo val2", "broadcasted": false, "description": "Performs strict comparison between var1 and var2 and returns true if equal, otherwise false. Strict means that it would check that both arguments are of the same data type and then compare the values.", "server": false}, "BIS_fnc_setToPairs": {"example": "", "server": false, "broadcasted": false, "description": "Sets an item in pair array to given value. Remarks: Works similar to the BIS_fnc_addToPairs but it doesn't try to add values. It just overwrites the volue if the key already exists. Example: [[\"apple\",3],[\"pear\",10]] = [[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_setToPairs;", "local": false}, "BIS_fnc_missionConversationsLocal": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setHitIndex": {"reviewLevel": 2, "syntax": "<objVehicle> setHitIndex [hitPartIndex,<scalar>,useEffects]", "local": true, "example": "vehicle player setHitIndex [1, 1];", "docSyntax": "vehicle setHitIndex [hitPartIndex, damage, useEffects]", "broadcasted": true, "description": "Set the current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.", "server": false}, "BIS_fnc_isCampaign": {"reviewLevel": 2, "syntax": "[] call BIS_fnc_isCampaign", "local": false, "example": "[] call BIS_fnc_isCampaign;", "docSyntax": "[] call BIS_fnc_isCampaign", "broadcasted": false, "description": "Checks to see if a mission is being run in a campaign.", "server": false}, "getPilotCameraDirection": {"reviewLevel": 2, "syntax": "getPilotCameraDirection <object>", "local": true, "example": "_pilotCamVector = getPilotCameraDirection vehicle player", "docSyntax": "getPilotCameraDirection object", "broadcasted": false, "description": "Returns model space vector of the object airplane or helicopter pilotCamera .", "server": false}, "UAVControl": {"reviewLevel": 1, "syntax": "UAVControl uav", "local": false, "example": "UAVControl uav;", "docSyntax": "UAVControl uav", "broadcasted": false, "description": "Returns array with current operator of UAV and his vehicle role in UAV.", "server": false}, "setPitch": {"reviewLevel": 1, "syntax": "<objUnit> setPitch pitch", "local": false, "example": "unit1 setPitch 0.5;", "docSyntax": "person setPitch pitch", "broadcasted": false, "description": "Sets the pitch of a persons voice.", "server": true}, "BIS_fnc_getCfgDataObject": {"example": "", "server": false, "broadcasted": false, "description": "Get the object defined in cfg by its name (global variable). Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes and an attribute. Example: * 1st way of calling: _value = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\" >> \"trigger\") call BIS_fnc_getCfgDataObject; * 2nd way of calling: _value = [\"Hubs\",\"A1\",\"QuickStart\",\"trigger\"] call BIS_fnc_getCfgDataObject; Returns: OBJECT or OBJNULL", "local": false}, "BIS_fnc_importImageLinks": {"reviewLevel": 2, "syntax": "call BIS_fnc_importImageLinks;", "local": false, "example": "call BIS_fnc_importImageLinks;", "docSyntax": "call BIS_fnc_importImageLinks;", "broadcasted": false, "description": "Imports CfgVehicles image links from Community Wiki (https://community.bistudio.com/).", "server": false}, "arrayIntersect": {"reviewLevel": 2, "syntax": "array1 arrayIntersect array2", "local": false, "example": "_arr1 = [1,2,3,4,5,2,3,4]; _arr2 = [4,5,6,1,2,3,5,6]; hint str (_arr1 arrayIntersect _arr2); // [4,5,1,2,3]", "docSyntax": "array1 arrayIntersect array2", "broadcasted": false, "description": "Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.", "server": false}, "addSecondaryWeaponItem": {"reviewLevel": 2, "syntax": "<objUnit> addSecondaryWeaponItem <objItem>", "local": true, "example": "player addSecondaryWeaponItem \"muzzle_snds_L\";", "docSyntax": "unit addSecondaryWeaponItem item", "broadcasted": true, "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.", "server": false}, "enableAudioFeature": {"reviewLevel": 2, "syntax": "enableAudioFeature [feature,<bool>]", "local": false, "example": "prevState = enableAudioFeature [\"lowpass\", true];", "docSyntax": "enableAudioFeature [feature, enable]", "broadcasted": false, "description": "Enable/disable an audio feature, features are: \"lowpass\", \"building_interior\". Return previous state", "server": false}, "lightnings": {"reviewLevel": 2, "syntax": "lightnings", "local": false, "example": "Get the current lightnings value:_lightningsVal = lightnings;", "docSyntax": "lightnings", "broadcasted": false, "description": "Return the current lightnings value.", "server": false}, "BIS_fnc_diagMacrosNameSound": {"reviewLevel": 2, "syntax": "call BIS_fnc_diagMacrosNameSound", "local": false, "example": "call BIS_fnc_diagMacrosNameSound;", "docSyntax": "call BIS_fnc_diagMacrosNameSound", "broadcasted": false, "description": "Detects vehicle types and prints their radio protocol definitions to clipboard.", "server": false}, "BIS_fnc_guiEffectTiles": {"reviewLevel": 2, "syntax": "[<uiDisplay>] call BIS_fnc_guiEffectTiles;", "local": false, "example": "[ findDisplay 49] call BIS_fnc_guiEffectTiles //display 49 - pause menu", "docSyntax": "[display] call BIS_fnc_guiEffectTiles;", "broadcasted": false, "description": "Used in dialogs to animate background UAV tiles. See notes for a full working example.", "server": false}, "isUIContext": {"reviewLevel": 2, "syntax": "isUIContext", "local": false, "example": "if (isUIContext) then {hint \"UI control event\"};", "docSyntax": "isUIContext", "broadcasted": false, "description": "Returns true if the script originated from some UI control event, for example from \"onButtonDown\" EH. Exists within parent scope and immediate child scopes.", "server": false}, "rotorsRpmRTD": {"reviewLevel": 2, "syntax": "rotorsRpmRTD RTD_helicopter", "local": false, "example": "_mh9_main = (rotorsRpmRTD _MH9) select 0;//main rotor _mh9_tail = (rotorsRpmRTD _MH9) select 1;//tail rotor", "docSyntax": "rotorsRpmRTD RTD_helicopter", "broadcasted": false, "description": "Returns rotors RPM", "server": false}, "isWeaponRested": {"reviewLevel": 2, "syntax": "isWeaponRested <objUnit>", "local": true, "example": "_rest = isWeaponRested player;", "docSyntax": "isWeaponRested unit", "broadcasted": false, "description": "Returns true if weapon is currently rested.", "server": false}, "forcedMap": {"reviewLevel": 2, "syntax": "forcedMap", "local": false, "example": "_forceMapForced = forcedMap select 0; _openMapForced = forcedMap select 1;", "docSyntax": "forcedMap", "broadcasted": false, "description": "Returns if map was forced by using forceMap command or openMap command with force option", "server": false}, "enginesTorqueRTD": {"reviewLevel": 2, "syntax": "enginesTorqueRTD RTD_helicopter", "local": false, "example": "_UH80_E1 = (enginesTorqueRTD _UH80) select 0;//engine 1 Torque _UH80_E2 = (enginesTorqueRTD _UH80) select 1;//engine 2 Torque", "docSyntax": "enginesTorqueRTD RTD_helicopter", "broadcasted": false, "description": "Torque produced by engines in N\u00c2\u00b7m (Newton*meter)", "server": false}, "curatorSelected": {"reviewLevel": 2, "syntax": "curatorSelected", "local": false, "example": "selectedItems = curatorSelected;", "docSyntax": "curatorSelected", "broadcasted": false, "description": "Returns list of all curator selected items.", "server": false}, "BIS_fnc_StrategicMapAnimate": {"reviewLevel": 2, "syntax": "[<object>,<scalar>] spawn BIS_fnc_StrategicMapAnimate", "local": false, "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", 5] spawn BIS_fnc_StrategicMapAnimate;", "docSyntax": "[target,time] spawn BIS_fnc_StrategicMapAnimate", "broadcasted": false, "description": "Animates a Strategic Map.", "server": false}, "BIS_fnc_taskSetCurrent": {"reviewLevel": 2, "syntax": "<string> call BIS_fnc_taskSetCurrent", "local": false, "example": "\"BIS_task_01\" call BIS_fnc_taskSetCurrent;", "docSyntax": "taskName call BIS_fnc_taskSetCurrent", "broadcasted": false, "description": "Set a task to current. Identical to assigning a task.", "server": false}, "pixelW": {"reviewLevel": 2, "syntax": "pixelW", "local": false, "example": "_pixelWidth = pixelW;", "docSyntax": "pixelW", "broadcasted": false, "description": "Returns width of one pixel for current resolution.", "server": false}, "BIS_fnc_textureMarker": {"reviewLevel": 2, "syntax": "[wantedMarker] call BIS_fnc_textureMarker", "local": false, "example": "_notWhiteFlag = [\"flag_France\"] call BIS_fnc_textureMarker;", "docSyntax": "[wantedMarker] call BIS_fnc_textureMarker", "broadcasted": false, "description": "Checks whether texture is defined in CfgMarkers and if so, returns the marker texture.", "server": false}, "BIS_fnc_curatorObjectPlaced": {"reviewLevel": 2, "syntax": "[module,<object>] call BIS_fnc_curatorObjectPlaced", "local": false, "example": "[ curatorModule, player ] call BIS_fnc_curatorObjectPlaced;", "docSyntax": "[module,object] call BIS_fnc_curatorObjectPlaced", "broadcasted": false, "description": "Code executed when curator object is placed.", "server": false}, "BIS_fnc_setMissionStatusSlot": {"reviewLevel": 2, "syntax": "[<scalar>,<string>,<string>,<scalar>,fade,position,barHeight] call BIS_fnc_setMissionStatusSlot", "local": false, "example": "", "docSyntax": "[id, text, texture, color, fade, position, barHeight] call BIS_fnc_setMissionStatusSlot", "broadcasted": false, "description": "Set a slot for mission status with sectors, respawn tickets, etc.", "server": false}, "attachedTo": {"reviewLevel": 2, "syntax": "attachedTo <object>", "local": false, "example": "if (isNull attachedTo _obj1) then { hint \"_obj1 is not attached to anything.\"; };", "docSyntax": "attachedTo object", "broadcasted": false, "description": "Returns the object it is attached to.", "server": true}, "BIS_fnc_diagPreview": {"reviewLevel": 2, "syntax": "[container,parentClass,<scalar>,startPos] call BIS_fnc_diagPreview", "local": false, "example": "[ \"CfgVehicles\", \"Car\", 15, [0,0,0] ] call BIS_fnc_diagPreview;", "docSyntax": "[container, parentClass, distance, startPos] call BIS_fnc_diagPreview", "broadcasted": false, "description": "Previews selected classes from given container.", "server": false}, "apply": {"reviewLevel": 2, "syntax": "<array> apply <code>", "local": false, "example": "_arr = [1,2,3,4,5,6,7,8,9,0] apply {[1,0] select (_x\u00c2\u00a0% 2 == 0)}; //[1,0,1,0,1,0,1,0,1,0]", "docSyntax": "array apply code", "broadcasted": false, "description": "Applies given code to each element of the array and returns resulting array. The value of the current array element, to which the code will be applied, is stored in variable _x.", "server": false}, "logEntities": {"reviewLevel": 2, "syntax": "logEntities", "local": false, "example": "logEntities;", "docSyntax": "logEntities", "broadcasted": false, "description": "Creates a log file containing the list of all game entities in scene.", "server": false}, "tvDelete": {"reviewLevel": 2, "syntax": "tvDelete [<scalar>,path]", "local": true, "example": "tvDelete [101, [0, 0]];", "docSyntax": "tvDelete [idc, path]", "broadcasted": false, "description": "Removes an item with given Tree View Path from Tree View. The paths of other items on the same branch are updated accordingly and may change.", "server": false}, "BIS_fnc_moduleUnits": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_briefingAnimate": {"reviewLevel": 2, "syntax": "[<string>,stepId,<scalar>] call BIS_fnc_briefingAnimate", "local": false, "example": "// given you have 6 markers: // - \"myMarker\" // - \"myMarker_0\" // - \"myMarker_1\" // - \"myMarker_2\" // - \"myMarker_3\" // - \"myMarker_4\" for \"_i\" from 0 to 4 do { private _commit = 1; [\"myMarker\", 5, _commit] call BIS_fnc_briefingAnimate; sleep _commit; };", "docSyntax": "[markerName, stepId, delay] call BIS_fnc_briefingAnimate", "broadcasted": false, "description": "Animate briefing markers.", "server": false}, "setDriveOnPath": {"reviewLevel": 1, "syntax": "vehicleName setDriveOnPath <scalar>", "local": false, "example": "myVehicle setDriveOnPath [getMarkerPos \"wp1\", getMarkerPos \"wp2\"];", "docSyntax": "vehicleName setDriveOnPath points", "broadcasted": false, "description": "Sets the path to follow for AI driver. Note that unitReady will return true even if AI is still driving through the points.", "server": false}, "setObjectTextureGlobal": {"reviewLevel": 2, "syntax": "<object> setObjectTextureGlobal [selection,<string>]", "local": false, "example": "player setObjectTextureGlobal [0, \"\\MyAddon\\blue.paa\"];", "docSyntax": "obj setObjectTextureGlobal [selection, texture]", "broadcasted": true, "description": "Set the texture of the given selection on all computers in a network session.", "server": true}, "serverCommandExecutable": {"reviewLevel": 1, "syntax": "serverCommandExecutable command", "local": false, "example": "_canKick = serverCommandAvailable \"#kick\";", "docSyntax": "serverCommandExecutable command", "broadcasted": false, "description": "Returns true if the serverCommand can be performed on the machine and in this exact environment, otherwise false. serverCommand can be executed only from User Interface Event Handlers, and this command also checks if that's the case.", "server": false}, "vectorWorldToModel": {"reviewLevel": 1, "syntax": "<object> vectorWorldToModel worldDir", "local": false, "example": "Convert world space vector [0,-10,4] to model space of object _airplane: _airplane vectorWorldToModel [0,-10,4];", "docSyntax": "object vectorWorldToModel worldDir", "broadcasted": false, "description": "Converts vector direction from world to model space.", "server": false}, "diag_activeSQFScripts": {"reviewLevel": 2, "syntax": "diag_activeSQFScripts", "local": false, "example": "[] spawn { hint str diag_activeSQFScripts; }; // displays [[\"<spawn> hint str diag_activeSQFScripts;\", \"\", true, 1]]", "docSyntax": "diag_activeSQFScripts", "broadcasted": false, "description": "Returns information about active SQF scripts.", "server": false}, "BIS_fnc_moduleTTCPClear": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "ctHeaderControls": {"reviewLevel": 2, "syntax": "<uiControl> ctHeaderControls <scalar>", "local": true, "example": "_array = _control ctHeaderControls 0;", "docSyntax": "ctrl ctHeaderControls index", "broadcasted": false, "description": "Returns array of controls on the header with the given index.", "server": false}, "ctHeaderCount": {"reviewLevel": 2, "syntax": "ctHeaderCount <uiControl>", "local": true, "example": "ctHeaderCount _control;", "docSyntax": "ctHeaderCount ctrl", "broadcasted": false, "description": "Returns number of headers (rows not included) in the RscControlsTable.", "server": false}, "BIS_fnc_moduleEffectsShells": {"reviewLevel": 2, "syntax": "[module] call BIS_fnc_moduleEffectsShells", "local": false, "example": "[BIS_module] call BIS_fnc_moduleEffectsShells;", "docSyntax": "[module] call BIS_fnc_moduleEffectsShells", "broadcasted": false, "description": "Creates empty ammo cartridges on position of the module logic.", "server": false}, "BIS_fnc_runLater": {"reviewLevel": 1, "syntax": "param call BIS_fnc_runLater;", "local": false, "example": "//Hints current game time in the next frame after 5 seconds have passed [\"uniqueId\", { hint str time; }, 5] call BIS_fnc_runLater;", "docSyntax": "param call BIS_fnc_runLater;", "broadcasted": false, "description": "Stack code/function that should be run later, after some time/frames or/and custom condition.", "server": false}, "removeCuratorCameraArea": {"reviewLevel": 1, "syntax": "<objCurator> removeCuratorCameraArea cameraAreaID", "local": false, "example": "myCurator removeCuratorCameraArea 3;", "docSyntax": "curatorObj removeCuratorCameraArea cameraAreaID", "broadcasted": false, "description": "Removes curator camera area.", "server": false}, "BIS_fnc_moduleMPTypeSectorControl": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_curatorPinged": {"reviewLevel": 2, "syntax": "[module,<objUnit>] call BIS_fnc_curatorPinged", "local": false, "example": "[ module_curator, player ] call BIS_fnc_curatorPinged;", "docSyntax": "[module, player] call BIS_fnc_curatorPinged", "broadcasted": false, "description": "Show effects when player pings curator. Icon and entity list highlighting is handled by engine", "server": false}, "BIS_fnc_ambientAnimGetParams": {"reviewLevel": 1, "syntax": "input call BIS_fnc_ambientAnimGetParams", "local": false, "example": "_animParams = \"KEEL\" call BIS_fnc_ambientAnimGetParams;", "docSyntax": "input call BIS_fnc_ambientAnimGetParams", "broadcasted": false, "description": "Feeds params of given animset to BIS_fnc_ambientAnim.", "server": false}, "BIS_fnc_manageCuratorAddons": {"reviewLevel": 2, "syntax": "[curators,classes,condition,<string>] call BIS_fnc_manageCuratorAddons", "local": false, "example": "[BIS_curator,[\"A3_Air_F_Heli\"],{count allPlayers > 15},\"Helicopters unlocked!\"] call BIS_fnc_manageCuratorAddons;", "docSyntax": "[curators,classes,condition,text] call BIS_fnc_manageCuratorAddons", "broadcasted": false, "description": "Set which vision modes curator can access.", "server": false}, "BIS_fnc_objectFromNetId": {"reviewLevel": 1, "syntax": "netId call BIS_fnc_objectFromNetId;", "local": false, "example": "_obj = \"0:2\" call BIS_fnc_objectFromNetId;", "docSyntax": "netId call BIS_fnc_objectFromNetId;", "broadcasted": false, "description": "Extends MP-only objectFromNetId functionality to SP", "server": false}, "isStreamFriendlyUIEnabled": {"reviewLevel": 2, "syntax": "isStreamFriendlyUIEnabled", "local": false, "example": "hint str isStreamFriendlyUIEnabled;", "docSyntax": "isStreamFriendlyUIEnabled", "broadcasted": false, "description": "Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).", "server": false}, "BIS_fnc_wpRelax": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_bleedTickets": {"reviewLevel": 2, "syntax": "[[WEST,EAST,RESISTANCE,CIVILIAN],0.5,3,5] call BIS_fnc_bleedTickets;", "local": false, "example": "[] call BIS_fnc_bleedTickets; // Uses all default values to start the system.", "docSyntax": "[[WEST,EAST,RESISTANCE,CIVILIAN], 0.5, 3, 5] call BIS_fnc_bleedTickets;", "broadcasted": false, "description": "Function that handles bleeding ticket system. Tickets are set beforehand using BIS_fnc_respawnTickets.", "server": false}, "pixelGridNoUIScale": {"reviewLevel": 2, "syntax": "pixelGridNoUIScale", "local": false, "example": "_gridHeightNoUIScale = pixelH * pixelGridNoUIScale;", "docSyntax": "pixelGridNoUIScale", "broadcasted": false, "description": "Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids As mentioned in the name of this command, the user interface scale is ignored.", "server": false}, "BIS_fnc_respawnWave": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_enemyDetected": {"reviewLevel": 2, "syntax": "<objUnit> call BIS_fnc_enemyDetected", "local": false, "example": "_enemyDetected = _unit call BIS_fnc_enemyDetected;", "docSyntax": "unit call BIS_fnc_enemyDetected", "broadcasted": false, "description": "Returns true if unit knows about nearby enemy unit or driven vehicle.", "server": false}, "removeAllMusicEventHandlers": {"reviewLevel": 1, "syntax": "removeAllMusicEventHandlers type", "local": false, "example": "removeAllMusicEventHandlers \"MusicStart\"", "docSyntax": "removeAllMusicEventHandlers type", "broadcasted": false, "description": "Removes all music track event handlers of given type.", "server": false}, "removeCuratorEditableObjects": {"reviewLevel": 2, "syntax": "<objCurator> removeCuratorEditableObjects [[objects],removeCrew]", "local": false, "example": "curatorModule removeCuratorEditableObjects [[cursorTarget],true]", "docSyntax": "curatorObj removeCuratorEditableObjects [[objects],removeCrew]", "broadcasted": false, "description": "Unregister objects which can be edited by a curator.", "server": false}, "BIS_fnc_ctrlSetScale": {"reviewLevel": 2, "syntax": "[<uiControl>,<scalar>,<scalar>] spawn BIS_fnc_ctrlSetScale", "local": false, "example": "_finalPos = [_ctrl, 1.5, 3] spawn BIS_fnc_ctrlSetScale;", "docSyntax": "[control,scale,time] spawn BIS_fnc_ctrlSetScale", "broadcasted": false, "description": "Scale a control while maintaining its centering.", "server": false}, "BIS_fnc_wpPatrol": {"local": false, "example": "", "docSyntax": "", "broadcasted": false, "description": "", "server": false}, "BIS_fnc_estimatedTimeLeft": {"reviewLevel": 2, "syntax": "[<scalar>] call BIS_fnc_estimatedTimeLeft", "local": false, "example": "[180] call BIS_fnc_estimatedTimeLeft;", "docSyntax": "[time] call BIS_fnc_estimatedTimeLeft", "broadcasted": false, "description": "Set mission countdown.", "server": false}, "BIS_fnc_effectFiredFlares": {"example": "", "server": false, "broadcasted": false, "description": "/*ArmA 2 flares, by Maddmatt", "local": false}, "BIS_fnc_textTiles": {"reviewLevel": 2, "syntax": "[content,position,tileSize,duration,fadeInOutTime,tileTransparency] spawn BIS_fnc_textTiles", "local": false, "example": "[parseText \"<t font='PuristaBold' size='1.6'>MyMission</t><br />by Username\", true, nil, 7, 0.7, 0] spawn BIS_fnc_textTiles", "docSyntax": "[content, position, tileSize, duration, fadeInOutTime, tileTransparency] spawn BIS_fnc_textTiles", "broadcasted": false, "description": "Show animated text with background tiles. Can be used to display mission name.", "server": false}, "ctFindRowHeader": {"reviewLevel": 2, "syntax": "<uiControl> ctFindRowHeader <scalar>", "local": true, "example": "_index = _control ctFindRowHeader 0;", "docSyntax": "ctrl ctFindRowHeader row", "broadcasted": false, "description": "Takes index of a row as a parameter. Returns index of the closest header above this row.", "server": false}, "setUserActionText": {"reviewLevel": 2, "syntax": "<object> setUserActionText [actionIndex,textMenu,textWindowBackground,textWindowForeground]", "local": false, "example": "_id = player addAction [\"Hello\", \"\"]; player setUserActionText [_id, \"Good Bye\"];", "docSyntax": "object setUserActionText [actionIndex, textMenu, textWindowBackground, textWindowForeground]", "broadcasted": false, "description": "Changes user added action (see addAction) menu item text.", "server": true}, "getBurningValue": {"reviewLevel": 2, "syntax": "getBurningValue <objUnit>", "local": false, "example": "", "docSyntax": "getBurningValue unit", "broadcasted": false, "description": "Returns amount of damage from fire.", "server": false}, "profileName": {"reviewLevel": 2, "syntax": "profileName", "local": false, "example": "_myProfileName = profileName;", "docSyntax": "profileName", "broadcasted": false, "description": "Returns profile name.", "server": false}, "worldToModelVisual": {"reviewLevel": 1, "syntax": "<object> worldToModelVisual worldPosition", "local": false, "example": "_relPos = myObject worldToModelVisual [0,0,0];", "docSyntax": "object worldToModelVisual worldPosition", "broadcasted": false, "description": "Converts position from world space to object model space in render time scope.", "server": false}, "BIS_fnc_liveFeedSetTarget": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_liveFeedSetTarget", "local": false, "example": "player call BIS_fnc_liveFeedSetTarget;", "docSyntax": "target call BIS_fnc_liveFeedSetTarget", "broadcasted": false, "description": "Set the target of the current live feed.", "server": false}, "BIS_fnc_getVirtualBackpackCargo": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_getVirtualBackpackCargo", "local": false, "example": "BIS_ammoBox call BIS_fnc_getVirtualBackpackCargo;", "docSyntax": "object call BIS_fnc_getVirtualBackpackCargo", "broadcasted": false, "description": "Get virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "BIS_fnc_curatorRespawn": {"reviewLevel": 2, "syntax": "[newUnit,oldUnit] call BIS_fnc_curatorRespawn", "local": false, "example": "[BIS_newUnit,BIS_oldUnit] call BIS_fnc_curatorRespawn;", "docSyntax": "[newUnit,oldUnit] call BIS_fnc_curatorRespawn", "broadcasted": false, "description": "Restore unit for curators after respawn. When curator owner, it will transfer ownership to the new unit. When editable by curator, it will remove the dead unit and register the new one.", "server": false}, "BIS_fnc_exportCfgVehicles": {"reviewLevel": 2, "syntax": "[mode,sides,classes,useAI] call BIS_fnc_exportCfgVehicles;", "local": false, "example": "[] call BIS_fnc_exportCfgVehicles;", "docSyntax": "[mode,sides,classes,useAI] call BIS_fnc_exportCfgVehicles;", "broadcasted": false, "description": "Export list of objects for Community Wiki (Assets).", "server": false}, "setCuratorWaypointCost": {"reviewLevel": 1, "syntax": "<objCurator> setCuratorWaypointCost cost", "local": false, "example": "myCUrator setCuratorWaypointCost 0.1;", "docSyntax": "curatorObj setCuratorWaypointCost cost", "broadcasted": false, "description": "Sets cost of waypoints (used for placing, editing and deleting).", "server": false}, "getVehicleCargo": {"reviewLevel": 1, "syntax": "getVehicleCargo storingVehicle", "local": false, "example": "_vehicleCargo = getVehicleCargo blackfish; // returns [] if empty", "docSyntax": "getVehicleCargo storingVehicle", "broadcasted": true, "description": "Get a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.", "server": true}, "BIS_fnc_findInPairs": {"example": "", "server": false, "broadcasted": false, "description": "Searches the associative array for the 1st occurance of the key string and returns it's index. Syntax: _index:number = [_associativeArray:array,_key:string] call BIS_fnc_findInPairs; Example: 0 = [[[\"apple\",3],[\"pear\",2]],\"apple\"] call BIS_fnc_findInPairs; Returns: * if found: index (starting from 0) * if not found: -1", "local": false}, "BIS_fnc_taskDescription": {"reviewLevel": 2, "syntax": "<string> call BIS_fnc_taskDescription", "local": false, "example": "\"BIS_task_01\" call BIS_fnc_taskDescription;", "docSyntax": "taskName call BIS_fnc_taskDescription", "broadcasted": false, "description": "Return a task's description.", "server": false}, "BIS_fnc_moduleStrategicMapORBAT": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_removeVirtualItemCargo": {"reviewLevel": 2, "syntax": "[<object>,itemClasses,removeGlobally] call BIS_fnc_removeVirtualItemCargo", "local": false, "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualItemCargo;", "docSyntax": "[object,itemClasses,removeGlobally] call BIS_fnc_removeVirtualItemCargo", "broadcasted": false, "description": "Remove virtual items from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "server": false}, "BIS_fnc_removeAllScriptedEventHandlers": {"reviewLevel": 2, "syntax": "[namespace,<string>] call BIS_fnc_removeAllScriptedEventHandlers", "local": false, "example": "[missionNamespace, \"event\"] call BIS_fnc_removeAllScriptedEventHandlers;", "docSyntax": "[namespace, name] call BIS_fnc_removeAllScriptedEventHandlers", "broadcasted": false, "description": "Removes all scripted event handler with given name. Additionally \"ScriptedEventHandlerRemoved\" scripted EH is called for every removed event handler. For the list of available scripted event handlers see Arma 3: Event Handlers/ScriptedEventHandlers", "server": false}, "BIS_fnc_diagAAR": {"reviewLevel": 2, "syntax": "[mode,arguments] call BIS_fnc_diagAAR", "local": false, "example": "[\"Init\", [_anAARDisplay]] call BIS_fnc_diagAAR;", "docSyntax": "[mode, arguments] call BIS_fnc_diagAAR", "broadcasted": false, "description": "Fill an AAR (After Action Review) display with data and Event Handlers.", "server": false}, "mineDetectedBy": {"reviewLevel": 1, "syntax": "mine mineDetectedBy faction", "local": false, "example": "(allMines select 0) mineDetectedBy west;", "docSyntax": "mine mineDetectedBy faction", "broadcasted": false, "description": "Returns true if mine has been detected by a given side", "server": false}, "tvSetCurSel": {"reviewLevel": 2, "syntax": "tvSetCurSel [<scalar>,path]", "local": false, "example": "tvSetCurSel [101, [0]];", "docSyntax": "tvSetCurSel [idc, path]", "broadcasted": false, "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (available since Arma 3 v1.55.133898)", "server": false}, "targets": {"reviewLevel": 2, "syntax": "<objUnit> targets [enemyOnly,maxDistance,sides,maxAge,alternateCenter]", "local": false, "example": "_targets = _unit targets [false, 300, [east,sideEnemy]]; //all targets of east or renegade side in 300m", "docSyntax": "unit targets [enemyOnly, maxDistance, sides, maxAge, alternateCenter]", "broadcasted": false, "description": "Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned.", "server": true}, "BIS_fnc_curatorChallengeFireWeapon": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "activatedAddons": {"reviewLevel": 2, "syntax": "activatedAddons", "local": false, "example": "_addons = activatedAddons;", "docSyntax": "activatedAddons", "broadcasted": false, "description": "Returns a list of all activated addons.", "server": false}, "unitAimPositionVisual": {"reviewLevel": 2, "syntax": "unitAimPositionVisual <objUnit>", "local": false, "example": "unitAimPositionVisual player;", "docSyntax": "unitAimPositionVisual unit", "broadcasted": false, "description": "Returns the position on the unit other units can aim at in render scope. See also aimPos, unitAimPosition.", "server": true}, "set3DENGrid": {"reviewLevel": 2, "syntax": "set3DENGrid [type,<scalar>]", "local": false, "example": "set3DENGrid [\"t\",100]; // 100m movement increment", "docSyntax": "set3DENGrid [type,value]", "broadcasted": false, "description": "Sets the grid increment for the given transformation type.", "server": false}, "BIS_fnc_respawnEndMission": {"reviewLevel": 2, "syntax": "call BIS_fnc_respawnEndMission", "local": false, "example": "call BIS_fnc_respawnEndMission;", "docSyntax": "call BIS_fnc_respawnEndMission", "broadcasted": false, "description": "End a mission if all players are dead and there are no more respawn tickets (if any).", "server": false}, "remoteExecCall": {"reviewLevel": 4, "syntax": "<any> remoteExecCall [<string>, <scalar|object|array>, <bool>]", "local": false, "example": "\"hello\" remoteExecCall [\"hint\"];", "docSyntax": "params remoteExecCall [functionName, targets, JIP]", "broadcasted": true, "description": "Remote async execution of given funtion on given machines. Function can not contain delaying commands (i.e. sleep).", "server": false}, "getShadowDistance": {"reviewLevel": 2, "syntax": "getShadowDistance", "local": false, "example": "_value = getShadowDistance;", "docSyntax": "getShadowDistance", "broadcasted": false, "description": "Gets the shadows rendering distance.", "server": false}, "BIS_fnc_selectRespawnTemplate": {"reviewLevel": 2, "syntax": "[mode,arguments] call BIS_fnc_selectRespawnTemplate", "local": false, "example": "[\"playerKilledScript\", []] call BIS_fnc_selectRespawnTemplate;", "docSyntax": "[mode, arguments] call BIS_fnc_selectRespawnTemplate", "broadcasted": false, "description": "Select respawn template from CfgRespawnTemplates and execute its script / function. Internal use.", "server": false}, "BIS_fnc_exportCfgMagazines": {"example": "", "server": false, "broadcasted": false, "description": "Export list of addons for Community Wiki http://community.bistudio.com/wiki/Category:Arma_3:_Assets Parameter(s): 0: ARRAY of STRINGs - list of CfgPatches classes Returns: BOOL", "local": false}, "forgetTarget": {"reviewLevel": 2, "syntax": "<objGroup> forgetTarget <object>", "local": false, "example": "soldier1 forgetTarget soldier2;", "docSyntax": "group forgetTarget target", "broadcasted": false, "description": "Resets info group has about target", "server": false}, "BIS_fnc_allTurrets": {"reviewLevel": 1, "syntax": "vehicleClass call BIS_fnc_allTurrets", "local": false, "example": "_allTurrets = \"C_Offroad_01_F\" call BIS_fnc_allTurrets; // []", "docSyntax": "vehicleClass call BIS_fnc_allTurrets", "broadcasted": false, "description": "Returns all vehicle turrets from config with options. Does what allTurrets command does, except the param is vehicle's config class name", "server": false}, "setLightFlareSize": {"reviewLevel": 1, "syntax": "light setLightFlareSize size", "local": true, "example": "myLight setLightFlareSize 5;", "docSyntax": "light setLightFlareSize size", "broadcasted": false, "description": "Sets relative size of the flare for the light.", "server": false}, "removeUniform": {"reviewLevel": 2, "syntax": "removeUniform <objUnit>", "local": false, "example": "removeUniform player;", "docSyntax": "removeUniform unit", "broadcasted": true, "description": "Removes uniform from unit.", "server": true}, "BIS_fnc_shakeCuratorCamera": {"reviewLevel": 2, "syntax": "[strength,duration,area] spawn BIS_fnc_shakeCuratorCamera", "local": false, "example": "[] spawn BIS_fnc_shakeCuratorCamera;", "docSyntax": "[strength,duration,area] spawn BIS_fnc_shakeCuratorCamera", "broadcasted": false, "description": "Shake curator camera.", "server": false}, "currentChannel": {"reviewLevel": 2, "syntax": "currentChannel", "local": false, "example": "_selected = currentChannel; // 3 - for example for the Group", "docSyntax": "currentChannel", "broadcasted": false, "description": "Returns currently selected user chat channel on the UI (selected with < and > in MP). Correspondence between channel and number:", "server": false}, "leaderboardRequestRowsFriends": {"reviewLevel": 2, "syntax": "leaderboardRequestRowsFriends <string>", "local": false, "example": "leaderboardRequestRowsFriends \"TT01\";", "docSyntax": "leaderboardRequestRowsFriends boardName", "broadcasted": false, "description": "Requests given leaderboard to download friends rows from the given leaderboard", "server": false}, "sideAmbientLife": {"reviewLevel": 2, "syntax": "sideAmbientLife", "local": false, "example": "_sideAmbientLife = sideAmbientLife;", "docSyntax": "sideAmbientLife", "broadcasted": false, "description": "Returns side of ambient life, for example ambient life placed in Eden Editor.", "server": false}, "clearBackpackCargo": {"reviewLevel": 1, "syntax": "clearBackpackCargo box", "local": false, "example": "clearBackpackCargo myBox;", "docSyntax": "clearBackpackCargo box", "broadcasted": false, "description": "Removes all backpacks from ammo box (or any general weapon holder container).", "server": false}, "BIS_fnc_loadClass": {"reviewLevel": 2, "syntax": "[input,defaultValue] call BIS_fnc_loadClass", "local": false, "example": "[ [\"bin\\config.bin\"], configFile >> \"Cfg3DEN\" >> \"Camera\"] call BIS_fnc_loadClass", "docSyntax": "[input, defaultValue] call BIS_fnc_loadClass", "broadcasted": false, "description": "Searches for class in mission, campaign and then in global config file.", "server": false}, "ReportRemoteTarget": {"server": false, "broadcasted": false, "local": false}, "tvCurSel": {"reviewLevel": 2, "syntax": "tvCurSel <scalar>", "local": true, "example": "tvCurSel 101;", "docSyntax": "tvCurSel idc", "broadcasted": false, "description": "Returns path to currently selected item. IDC means id of parent Tree View.", "server": false}, "BIS_fnc_basicBackpack": {"reviewLevel": 1, "syntax": "backPackClassName call BIS_fnc_basicBackpack;", "local": false, "example": "baseBackpack = \"b_assaultpack_rgr_medic\" call BIS_fnc_basicBackpack; // Returns \"b_assaultpack_rgr\", the base class.", "docSyntax": "backPackClassName call BIS_fnc_basicBackpack;", "broadcasted": false, "description": "Determines basic backpack with no equipment present (ie empty).", "server": false}, "isLaserOn": {"reviewLevel": 2, "syntax": "isLaserOn <objVehicle>", "local": true, "example": "_on = isLaserOn _vehicle;", "docSyntax": "isLaserOn vehicle", "broadcasted": true, "description": "Returns true if the vehicle has its laser turned on. Not to be confused with isIRLaserOn which is for units", "server": false}, "BIS_fnc_playSound": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setHUDMovementLevels": {"reviewLevel": 2, "syntax": "setHUDMovementLevels [minSpeed,maxSpeed,minAlt,maxAlt,minDir,maxDir,targetOrPosition]", "local": false, "example": "setHUDMovementLevels [20,30,-1,-1,0.23,2.1,[0,0,0]]", "docSyntax": "setHUDMovementLevels [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, targetOrPosition]", "broadcasted": false, "description": "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.", "server": false}, "BIS_fnc_moduleAnimals": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "listRemoteTargets": {"reviewLevel": 2, "syntax": "listRemoteTargets <objSide>", "local": false, "example": "listRemoteTargets east;", "docSyntax": "listRemoteTargets side", "broadcasted": false, "description": "Return list of datalink targets and time for which they will be/were known", "server": false}, "BIS_fnc_isInsideArea": {"reviewLevel": 2, "syntax": "[center,size,position ] call BIS_fnc_isInsideArea", "local": false, "example": "_center = getPos player; _size = [ 5, 5 ]; _checkPos = getPos player; //Check an area, centered on the player that is 10m wide and 10m tall _inArea = [ _center, _size, _checkPos ] call BIS_fnc_isInsideArea;", "docSyntax": "[center, size, position ] call BIS_fnc_isInsideArea", "broadcasted": false, "description": "Detects whether a position is within a square area of given size about center.", "server": false}, "enableFatigue": {"reviewLevel": 2, "syntax": "<objUnit> enableFatigue <bool>", "local": true, "example": "player enableFatigue false;", "docSyntax": "unit enableFatigue enable", "broadcasted": true, "description": "Enables/Disables the person's fatigue.", "server": false}, "BIS_fnc_moduleObjectiveTarget": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_moduleCuratorSetCoefs": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "setUserMFDvalue": {"reviewLevel": 2, "syntax": "<objVehicle> setUserMFDvalue [<scalar>,<scalar>]", "local": false, "example": "BIS_Plane setUserMFDvalue [0,1]; // user0 in MFD will return 1", "docSyntax": "vehicle setUserMFDvalue [index, value]", "broadcasted": false, "description": "When MFD is using user controllers, this command can set values on them. For example, MFD config for Blackfoot has an entry", "server": false}, "profileNameSteam": {"reviewLevel": 2, "syntax": "profileNameSteam", "local": false, "example": "_mySteamProfileName = profileNameSteam;", "docSyntax": "profileNameSteam", "broadcasted": false, "description": "Returns name of the current Steam profile.", "server": false}, "BIS_fnc_moduleFDStatsClear": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_unitAddon": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_unitAddon", "local": false, "example": "[ player ] call BIS_fnc_unitAddon;", "docSyntax": "[object] call BIS_fnc_unitAddon", "broadcasted": false, "description": "Return addon from CfgPatches to which a given object belongs to.", "server": false}, "currentMagazineDetailTurret": {"reviewLevel": 2, "syntax": "<objVehicle> currentMagazineDetailTurret [turret path]", "local": false, "example": "_magazineDetail = MBT_Kuma currentMagazineDetailTurret [0];", "docSyntax": "vehicle currentMagazineDetailTurret [turret path]", "broadcasted": false, "description": "Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".", "server": false}, "tvSetPictureRight": {"reviewLevel": 2, "syntax": "tvSetPictureRight [<scalar>,path,<string>]", "local": false, "example": "tvSetPictureRight [101, [0], \"picture\"];", "docSyntax": "tvSetPictureRight [idc, path, name]", "broadcasted": false, "description": "Sets right picture on the tree view item defined by path", "server": false}, "BIS_fnc_feedbackMain": {"reviewLevel": 2, "syntax": "[] call BIS_fnc_feedbackMain", "local": false, "example": "[] call BIS_fnc_feedbackMain;", "docSyntax": "[] call BIS_fnc_feedbackMain", "broadcasted": false, "description": "Main feedback FSM, used for feedback effects (fatigue, drowning, injury etc.). Internal use only.", "server": false}, "BIS_fnc_selectDiarySubject": {"reviewLevel": 2, "syntax": "[diaryName] call BIS_fnc_selectDiarySubject", "local": false, "example": "[\"someSubject\"] call BIS_fnc_selectDiarySubject;", "docSyntax": "[diaryName] call BIS_fnc_selectDiarySubject", "broadcasted": false, "description": "Select diary subject. Temporary replacement for selectDiarySubject scripting command which is currently broken.", "server": false}, "vestMagazines": {"reviewLevel": 2, "syntax": "vestMagazines <objUnit>", "local": false, "example": "vestMagazines player;", "docSyntax": "vestMagazines unit", "broadcasted": false, "description": "Get array with all magazines from vest of the given unit.", "server": false}, "addWeaponItem": {"reviewLevel": 2, "syntax": "<objUnit> addWeaponItem [weaponName,itemName]", "local": true, "example": "player addWeaponItem [\"arifle_MX_GL_ACO_F\", \"1Rnd_HE_Grenade_shell\"];", "docSyntax": "unit addWeaponItem [weaponName, itemName]", "broadcasted": true, "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.", "server": false}, "getCameraViewDirection": {"reviewLevel": 2, "syntax": "getCameraViewDirection <objUnit>", "local": false, "example": "Draw AI eye direction (green), weapon direction (red) and camera direction (blue) in 3D: bob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"]; bob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"]; onEachFrame { _beg = ASLToAGL eyePos bob; _endE = (_beg vectorAdd (eyeDirection bob vectorMultiply 100)); drawLine3D [ _beg, _endE, [0,1,0,1]]; _endW = (_beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100)); drawLine3D [_beg, _endW, [1,0,0,1]]; _endV = (_beg vectorAdd (getCameraViewDirection bob vectorMultiply 100)); drawLine3D [_beg, _endV, [0,0,1,1]]; };", "docSyntax": "getCameraViewDirection unit", "broadcasted": false, "description": "Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from eyePos unit, for human player the origin should be taken from player camera position positionCameraToWorld [0,0,0]", "server": true}, "BIS_fnc_objectSide": {"reviewLevel": 2, "syntax": "[<object>,<bool>] call BIS_fnc_objectSide", "local": false, "example": "_realVehicleSide = [vehicle player, true] call BIS_fnc_objectSide;", "docSyntax": "[target, boolean] call BIS_fnc_objectSide", "broadcasted": false, "description": "Returns object side as defined in config (i.e. not affected by dynamic changing like rating)", "server": false}, "distanceSqr": {"reviewLevel": 2, "syntax": "var1 distanceSqr var2", "local": false, "example": "player distanceSqr (leader player)", "docSyntax": "var1 distanceSqr var2", "broadcasted": false, "description": "Computes the squared distance between two objects or positions.", "server": false}, "setWaypointLoiterType": {"reviewLevel": 1, "syntax": "waypoint setWaypointLoiterType type", "local": false, "example": "[_grp, 2] setWaypointLoiterType \"CIRCLE\";", "docSyntax": "waypoint setWaypointLoiterType type", "broadcasted": false, "description": "Sets the waypoint loiter type.", "server": false}, "BIS_fnc_enableSaving": {"reviewLevel": 2, "syntax": "<scalar> call BIS_fnc_enableSaving", "local": false, "example": "\"savingID\" call BIS_fnc_enableSaving;", "docSyntax": "id call BIS_fnc_enableSaving", "broadcasted": false, "description": "Controls the enabling of saving. Will only enable saving if there are no remaining requests for disabled saving.", "server": false}, "BIS_fnc_moduleMPTypeGameMaster": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_moduleCuratorSetCostsDefault": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "BIS_fnc_setCuratorAttributes": {"example": "", "server": false, "broadcasted": false, "description": "Set which attributes are available for given entity or entity type. Parameter(s): 0: OBJECT - curator 1: STRING - general setting for all entities of the given type, can be \"object\", \"player\", \"group', \"waypoint\" or \"marker\" OBJECT - setting for specific object, overrides general settings GROUP - setting for specific group, overrides general settings 2: ARRAY of STRINGs - attributes object: Skill UnitPos Rank Damage Fuel Lock RespawnVehicle RespawnPosition Exec group: GroupID Behaviour Formation waypoint: Behaviour Formation marker: MarkerText MarkerColor Returns: BOOL", "local": false}, "BIS_fnc_isLoading": {"reviewLevel": 2, "syntax": "call BIS_fnc_isLoading", "local": false, "example": "_isLoading = call BIS_fnc_isLoading;", "docSyntax": "call BIS_fnc_isLoading", "broadcasted": false, "description": "Check if a loading screen is opened.", "server": false}, "setLightIntensity": {"reviewLevel": 1, "syntax": "light setLightIntensity <scalar>", "local": true, "example": "myLight setLightIntensity 4;", "docSyntax": "light setLightIntensity value", "broadcasted": false, "description": "Sets intensity of light.", "server": false}, "weaponsItemsCargo": {"reviewLevel": 2, "syntax": "weaponsItemsCargo <objVehicle>", "local": false, "example": "weaponsItemsCargo vehicle player;", "docSyntax": "weaponsItemsCargo vehicle", "broadcasted": false, "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in weaponsItems format. If weapon has no magazine, an empty array [] is returned instead of magazine info.", "server": false}, "uniformItems": {"reviewLevel": 2, "syntax": "uniformItems <objUnit>", "local": false, "example": "uniformItems player;", "docSyntax": "uniformItems unit", "broadcasted": false, "description": "Get array with all items (of any kind, even weapons) from uniform.", "server": false}, "BIS_fnc_taskType": {"example": "_taskType:string = [_taskId:string] call BIS_fnc_taskType;", "server": false, "broadcasted": false, "description": "Returns type of given task. Parameters: 0: STRING - task id Returns: STRING - task type or type 'Default' if not defined", "local": false}, "sort": {"reviewLevel": 2, "syntax": "<array> sort <scalar>", "local": false, "example": "_arr = [5.21725,1.30859,4,5.03028,1]; _arr sort true; hint str _arr; //[1,1.30859,4,5.03028,5.21725]", "docSyntax": "array sort order", "broadcasted": false, "description": "Attempts to sort given array either in ascending (true) or descending (false) order. All array elements should be one of the following types:", "server": false}, "turretLocal": {"reviewLevel": 1, "syntax": "<objVehicle> turretLocal turretPath", "local": false, "example": "_isLocal = vehicle player turretLocal [0];", "docSyntax": "vehicle turretLocal turretPath", "broadcasted": false, "description": "Checks if a turret is local.", "server": true}, "setRainbow": {"reviewLevel": 2, "syntax": "<scalar> setRainbow <scalar>", "local": false, "example": "", "docSyntax": "time setRainbow value", "broadcasted": false, "description": "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "server": false}, "unassignCurator": {"reviewLevel": 2, "syntax": "unassignCurator <objCurator>", "local": false, "example": "unassignCurator myCurator;", "docSyntax": "unassignCurator curatorObj", "broadcasted": false, "description": "Unassign curator (will destroy both sides of connection).", "server": false}, "setFlagAnimationPhase": {"reviewLevel": 1, "syntax": "<objFlag> setFlagAnimationPhase phase", "local": false, "example": "_flag1 setFlagAnimationPhase 0.5;", "docSyntax": "flag setFlagAnimationPhase phase", "broadcasted": false, "description": "Sets flag position on the flag pole according to the given animation phase, where 0 is the bottom of the flag pole, 1 is the top of the flag pole. The changes to the flag position are local to the PC command is executed on. To animate flag use BIS_fnc_animateFlag", "server": true}, "BIS_fnc_trackMissionTime": {"example": "", "server": false, "broadcasted": false, "description": "Example 1:", "local": false}, "set3DENObjectType": {"reviewLevel": 1, "syntax": "objects set3DENObjectType classname", "local": false, "example": "[ get3DENMouseOver select 1] set3DENObjectType \"B_crew_F\"; // turns object under cursor into a blufor crewman", "docSyntax": "objects set3DENObjectType classname", "broadcasted": false, "description": "Sets the classname of one or more given Eden Editor objects. For Logic objects use set3DENLogicType", "server": false}, "unitIsUAV": {"reviewLevel": 2, "syntax": "unitIsUAV <objUnit>", "local": false, "example": "_isUAV = unitIsUAV veh;", "docSyntax": "unitIsUAV unit", "broadcasted": false, "description": "Returns true if the unit type is UAV - coresponding to transport param \"isUAV\"", "server": false}, "vectorUpVisual": {"reviewLevel": 1, "syntax": "vectorUpVisual objectName", "local": false, "example": "_vUp = vectorUpVisual vehicle player;", "docSyntax": "vectorUpVisual objectName", "broadcasted": false, "description": "Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope.", "server": true}, "BIS_fnc_vehicleRoles": {"reviewLevel": 2, "syntax": "<objVehicle> call BIS_fnc_vehicleRoles", "local": false, "example": "cursorObject call BIS_fnc_vehicleRoles;", "docSyntax": "vehicle call BIS_fnc_vehicleRoles", "broadcasted": false, "description": "Returns vehicle roles.", "server": false}, "lbSetTooltip": {"reviewLevel": 2, "syntax": "lbSetTooltip [<scalar>,<scalar>,tooltip]", "local": true, "example": "lbSetTooltip [101, 1, \"tooltip\"];", "docSyntax": "lbSetTooltip [idc, index, tooltip]", "broadcasted": false, "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.", "server": false}, "BIS_fnc_moduleBleedTickets": {"example": "", "server": false, "broadcasted": false, "description": "", "local": false}, "ctrlSetChecked": {"reviewLevel": 1, "syntax": "<uiControl> ctrlSetChecked checked", "local": false, "example": "_control ctrlSetChecked true;", "docSyntax": "control ctrlSetChecked checked", "broadcasted": false, "description": "Sets checked state of a checkbox in checkboxes control (CT_CHECKBOXES type 7 of Dialog Control). Since Arma 3 v1.71.141591 it is possible to check checkbox with given index in multiple checkboxes set-up. For more information see DialogControls-CheckBoxes.", "server": false}, "BIS_fnc_getUnitInsignia": {"reviewLevel": 2, "syntax": "[ <object> ] call BIS_fnc_getUnitInsignia;", "local": false, "example": "_texture = [ player ] call BIS_fnc_getUnitInsignia", "docSyntax": "[ object ] call BIS_fnc_getUnitInsignia;", "broadcasted": false, "description": "Get a unit's uniform insignia placed with BIS_fnc_setUnitInsignia", "server": false}, "BIS_fnc_diagMacrosMapSize": {"example": "", "server": false, "broadcasted": false, "description": "Prints mapSize values based on real object size and copies it to clipboard. Mission has to be running on order to get the values. Parameter(s): 0: CONFIG or ARRAY - either config container, or list of classes or classnames 1: STRING - output mode, can be on of following: \"wiki\" - wiki table \"config\" - #define macros with model dimension values \"config_current\" - #define macros with current config values 2: ARRAY - list of classnames which will be excluded from the scan Returns: STRING", "local": false}}, "ARMA2": {"waypointType": {"reviewLevel": 1, "syntax": "waypointType waypoint", "local": false, "example": "waypointType [groupOne,1],", "docSyntax": "waypointType waypoint", "broadcasted": false, "description": "Gets the waypoint type. Type can be:", "server": false}, "BIS_fnc_randomIndex": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_randomIndex", "local": false, "example": "[\"a\",0,objNull] call BIS_fnc_randomIndex; // returns 0, 1 or 2", "docSyntax": "array call BIS_fnc_randomIndex", "broadcasted": false, "description": "Return a random integer representing an index in the passed array.", "server": false}, "lnbAddRow": {"reviewLevel": 2, "syntax": "lnbAddRow [<scalar>,[ <string>,<string>... ]]", "local": true, "example": "lnbAddRow [1,[\"COL1\",\"COL2\"]];", "docSyntax": "lnbAddRow [IDC,[ String,String... ]]", "broadcasted": false, "description": "Adds a row of strings.", "server": false}, "BIS_fnc_arrayPop": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_arrayPop", "local": false, "example": "_array = [1,2,3,4]; _removedElement = _array call BIS_fnc_arrayPop; // _array is now [1,2,3] and _removedElement = 4", "docSyntax": "array call BIS_fnc_arrayPop", "broadcasted": false, "description": "This function removes the last (rightmost) element of an array and returns it.", "server": false}, "uiSleep": {"reviewLevel": 2, "syntax": "uiSleep <scalar>", "local": false, "example": "uiSleep 0.5", "docSyntax": "uiSleep delay", "broadcasted": false, "description": "Suspend execution of script for given uitime. uiSleep is a sleep method to delay script execution where script time/simulation time is stopped. uiSleep is basically using the system time (uiTime more specifically) and not simulation time. So in the cases where sleep command would get stuck indefinitely, uiSleep can still be used to effectively delay script execution. For example in a mission briefing or an editor or when simulation is paused in general.", "server": false}, "lnbSize": {"reviewLevel": 2, "syntax": "lnbSize <uiControl>", "local": true, "example": "lnbSize _ctrl;//[8,2]", "docSyntax": "lnbSize ctrl", "broadcasted": false, "description": "Returns size of 2D listbox or combobox as [rows, columns].", "server": false}, "markerShape": {"reviewLevel": 2, "syntax": "markerShape <string>", "local": false, "example": "if (markerShape \"Marker1\" == \"RECTANGLE\") then {hint \"Marker1 is a rectangle!\"}", "docSyntax": "markerShape name", "broadcasted": false, "description": "Gets the marker shape. See setMarkerShape for a list of strings that can be returned.", "server": true}, "findEmptyPosition": {"reviewLevel": 1, "syntax": "center findEmptyPosition [minDistance,maxDistance,vehicleType]", "local": false, "example": "_position = (getPosATL player) findEmptyPosition [0,100];", "docSyntax": "center findEmptyPosition [minDistance, maxDistance, vehicleType]", "broadcasted": false, "description": "Searches for an empty position around specified position. The search starts looking for an empty position at a minimum distance of [minDistance] from the [center] and looks as far away as [maxDistance]. If a [vehicleType] parameter is specified, then the search will look for an empty positions that is big enough to hold that vehicle type. If an empty position isn't found, an empty array is returned.", "server": false}, "BIS_fnc_arrayPush": {"reviewLevel": 2, "syntax": "[<array>,element] call BIS_fnc_arrayPush", "local": false, "example": "_newArray = [[0,1,2], 3] call BIS_fnc_arrayPush; // _newArray is [0,1,2,3]", "docSyntax": "[array, element] call BIS_fnc_arrayPush", "broadcasted": false, "description": "This function adds an element to the end of an array and returns the array.", "server": false}, "BIS_fnc_spawnCrew": {"reviewLevel": 2, "syntax": "[<objVehicle>,<objGroup>,dummyMode,dummyType,crewType]] call BIS_fnc_spawnCrew", "local": false, "example": "[ BIS_vehicle, group player ] call BIS_fnc_spawnCrew;", "docSyntax": "[vehicle,group,dummyMode,dummyType,crewType]] call BIS_fnc_spawnCrew", "broadcasted": false, "description": "Function to fill all crew positions in a vehicle, including turrets. In dummy mode no objects are created and the returned array contains only ones. In this mode the function can be used to count the actual crew of an existing vehicle or vehicle type.", "server": false}, "joinAsSilent": {"reviewLevel": 2, "syntax": "<objUnit> joinAsSilent [<objGroup>,<scalar>]", "local": false, "example": "player joinAsSilent [_group, 4];", "docSyntax": "unit joinAsSilent [group, id]", "broadcasted": true, "description": "Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining.", "server": true}, "clearMagazineCargoGlobal": {"reviewLevel": 2, "syntax": "clearMagazineCargoGlobal <objUnit>", "local": false, "example": "clearMagazineCargoGlobal jeepOne;", "docSyntax": "clearMagazineCargoGlobal unit", "broadcasted": true, "description": "Removes all magazines from the vehicle cargo space. MP synchronized.", "server": true}, "hcRemoveGroup": {"reviewLevel": 2, "syntax": "<objUnit> hcRemoveGroup <objGroup>", "local": false, "example": "player hcRemoveGroup BIS_group;", "docSyntax": "unit hcRemoveGroup group", "broadcasted": false, "description": "Removes group from unit's high command bar.", "server": false}, "numberToDate": {"reviewLevel": 2, "syntax": "numberToDate [year,<scalar>]", "local": false, "example": "_date = numberToDate [2008,0.5324]; //[2008,7,13,7,49]", "docSyntax": "numberToDate [year,time]", "broadcasted": false, "description": "Convert float number to a date.", "server": false}, "getObjectArgument": {"reviewLevel": 2, "syntax": "<objMap> getObjectArgument [<object>,argument]", "local": false, "example": "// returns string \"[1009.0351, 1319.4928]\" (findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"] // returns array [1009.0351, 1319.4928] (findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]", "docSyntax": "map getObjectArgument [object, argument]", "broadcasted": false, "description": "Return name of object argument in mission editor.", "server": false}, "BIS_fnc_threat": {"reviewLevel": 2, "syntax": "[<objUnit>] call BIS_fnc_threat", "local": false, "example": "_threatLevel = [ player ] call BIS_fnc_threat;", "docSyntax": "[unit] call BIS_fnc_threat", "broadcasted": false, "description": "Calculates threat values of given unit.", "server": false}, "mapCenterOnCamera": {"reviewLevel": 1, "syntax": "mainmap mapCenterOnCamera <bool>", "local": false, "example": "//--- Minimap update ((uiNamespace getVariable \"BIS_UAV_DISPLAY\") displayCtrl 112410) mapCenterOnCamera true;", "docSyntax": "mainmap mapCenterOnCamera enable", "broadcasted": false, "description": "<control> mapCenterOnCamera <boolean> syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.", "server": false}, "BIS_fnc_sceneSetBehaviour": {"reviewLevel": 1, "syntax": "param call BIS_fnc_sceneSetBehaviour;", "local": false, "example": "[\"disableAI\",[unit1,player,unit2,unit3]] call BIS_fnc_sceneSetBehaviour;", "docSyntax": "param call BIS_fnc_sceneSetBehaviour;", "broadcasted": false, "description": "Enables / disables a specific set of AI units, usable for cutscenes.", "server": false}, "BIS_fnc_sortNum": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_sortNum", "local": false, "example": "[5,9,987,6,97,8,6] call BIS_fnc_sortNum;//Returns [5,6,6,8,9,97,987]", "docSyntax": "array call BIS_fnc_sortNum", "broadcasted": false, "description": "Sorts an array of numbers from lowest (left) to highest (right). The passed array is modified by reference. This function uses the quick sort algorithm.", "server": false}, "kbRemoveTopic": {"reviewLevel": 1, "syntax": "<objUnit> kbRemoveTopic topicName", "local": false, "example": "_unit1 kbRemoveTopic \"howsTheWeather\";", "docSyntax": "person kbRemoveTopic topicName", "broadcasted": false, "description": "Unregister conversation topic from given person. See Conversations for more details.", "server": false}, "createTeam": {"reviewLevel": 2, "syntax": "createTeam [type,<string>]", "local": false, "example": "_team = createTeam [\"USMC_Team\", \"Fire Team Red\"];", "docSyntax": "createTeam [type, name]", "broadcasted": false, "description": "Create a team and name it.", "server": false}, "BIS_fnc_parseNumber": {"reviewLevel": 2, "syntax": "<scalar> call BIS_fnc_parseNumber", "local": false, "example": "_result = 7.62 call BIS_fnc_parseNumber; _result = \"7.62\" call BIS_fnc_parseNumber; _result = { 7.62 } call BIS_fnc_parseNumber;", "docSyntax": "value call BIS_fnc_parseNumber", "broadcasted": false, "description": "Return number from expression", "server": false}, "setWaypointVisible": {"reviewLevel": 1, "syntax": "waypoint setWaypointVisible visible", "local": false, "example": "[grp, 2] setWaypointVisible false;", "docSyntax": "waypoint setWaypointVisible visible", "broadcasted": true, "description": "Sets the visibility of the waypoint.", "server": false}, "serverCommand": {"reviewLevel": 1, "syntax": "serverCommand command", "local": false, "example": "serverCommand \"#logout\";", "docSyntax": "serverCommand command", "broadcasted": false, "description": "Executes a server command. Which command is available for execution can be found with serverCommandAvailable and whether or not it can be executed with serverCommandExecutable.", "server": false}, "addGroupIcon": {"reviewLevel": 2, "syntax": "<objGroup> addGroupIcon [iconClass,offset]", "local": false, "example": "groupName addGroupIcon [\"b_inf\", [offsetX, offsetY]]", "docSyntax": "group addGroupIcon [iconClass, offset]", "broadcasted": false, "description": "Adds icon to a group. Returns icon ID, Control icons visibility with setGroupIconsVisible.", "server": false}, "selectNoPlayer": {"reviewLevel": 2, "syntax": "selectNoPlayer", "local": false, "example": "Single player: selectNoPlayer; hint str player; //<NULL-object> Rough multiplayer emulation: _noPlayer = createGroup sideLogic createUnit [ \"Logic\", [0,0,1000], [], 0, \"NONE\" ]; selectPlayer _noPlayer; hint str player; //L Charlie 4-3:1 (KK)", "docSyntax": "selectNoPlayer", "broadcasted": false, "description": "Switches player to no unit, makes player return objNull. SP only, the command is completely ignored in MP.", "server": false}, "BIS_fnc_destroyCity": {"reviewLevel": 2, "syntax": "[position,areaSize,seed,blacklist] call BIS_fnc_destroyCity", "local": false, "example": "[\"destroyBase\", 500, 42, [ourHouseInTheMiddleOfTheStreet]] call BIS_fnc_destroyCity;", "docSyntax": "[position, areaSize, seed, blacklist] call BIS_fnc_destroyCity", "broadcasted": false, "description": "Destroys building in given area based on input seed.", "server": false}, "setVelocityTransformation": {"reviewLevel": 2, "syntax": "<object> setVelocityTransformation [fromPosASL,toPosASL,fromVelocity,toVelocity,fromVectorDir,toVectorDir,fromVectorUp,toVectorUp,interval]", "local": true, "example": "_tracker setVelocityTransformation [ _currentPos, _nextPos, _currentVelocity, _nextVelocity, _currentVectorDir, _nextVectorDir, _currentVectorUp, _nextVectorUp, _interval ];", "docSyntax": "object setVelocityTransformation [fromPosASL, toPosASL, fromVelocity, toVelocity, fromVectorDir, toVectorDir, fromVectorUp, toVectorUp, interval]", "broadcasted": true, "description": "Interpolates and applies PositionASL, velocity, vectorDir and vectorUp to the given object based on the interval value.", "server": false}, "hideObject": {"reviewLevel": 2, "syntax": "hideObject <object>", "local": false, "example": "hideObject unitName;", "docSyntax": "hideObject object", "broadcasted": false, "description": "Hide entity. Can be used on soldiers and vehicles, also on static objects.", "server": true}, "BIS_fnc_taskDefend": {"reviewLevel": 2, "syntax": "[<objGroup>,position] call BIS_fnc_taskDefend", "local": false, "example": "[group this, getPos this] call bis_fnc_taskDefend", "docSyntax": "[group,position] call BIS_fnc_taskDefend", "broadcasted": false, "description": "Group will man nearby static defenses within a 100 metre radius of the defense position and guard the position. Some units will man weapons, others will patrol and the remainder will sit on the ground.", "server": false}, "weaponsTurret": {"reviewLevel": 1, "syntax": "<objVehicle> weaponsTurret turretPath", "local": false, "example": "_weapons = vehicle player weaponsTurret [0,0]", "docSyntax": "vehicle weaponsTurret turretPath", "broadcasted": false, "description": "Returns all weapons of given turret. Use turret path [-1] for driver's turret.", "server": true}, "markerAlpha": {"reviewLevel": 2, "syntax": "markerAlpha <string>", "local": false, "example": "AlphaMarker = markerAlpha \"myMarker;", "docSyntax": "markerAlpha markerName", "broadcasted": false, "description": "Gets the marker alpha. See setMarkerAlpha.", "server": true}, "groupIconsVisible": {"reviewLevel": 2, "syntax": "groupIconsVisible", "local": false, "example": "hint str groupIconsVisible;", "docSyntax": "groupIconsVisible", "broadcasted": false, "description": "Returns array with group icons visibility. A getter for setGroupIconsVisible", "server": false}, "waypointShow": {"reviewLevel": 1, "syntax": "waypointShow waypoint", "local": false, "example": "_wpShow = waypointShow [groupOne,1];", "docSyntax": "waypointShow waypoint", "broadcasted": false, "description": "Gets the waypoint show/hide status.", "server": false}, "showCommandingMenu": {"reviewLevel": 2, "syntax": "showCommandingMenu <string>", "local": false, "example": "showCommandingMenu \"\";", "docSyntax": "showCommandingMenu name", "broadcasted": false, "description": "Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden.", "server": false}, "enableCamShake": {"reviewLevel": 2, "syntax": "enableCamShake <scalar>", "local": false, "example": "enableCamShake false;", "docSyntax": "enableCamShake value", "broadcasted": false, "description": "Allows camera shake effects via addCamShake. If set to false, then a currently active shake effect will stop immediately. By default, shake effects are enabled, but once they have been disabled by this command, they will have to be enabled first, in order to be visible.", "server": false}, "getEditorObjectScope": {"reviewLevel": 2, "syntax": "<objMap> getEditorObjectScope <object>", "local": false, "example": "", "docSyntax": "map getEditorObjectScope object", "broadcasted": false, "description": "Returns the editor object scope of the specified editor object.", "server": false}, "playMoveNow": {"reviewLevel": 1, "syntax": "soldier playMoveNow moveName", "local": true, "example": "player playMoveNow \"AmovPercMevaSlowWrflDf\"", "docSyntax": "soldier playMoveNow moveName", "broadcasted": true, "description": "When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded. List of moves in ArmA 2", "server": false}, "BIS_fnc_conditionalSelect": {"reviewLevel": 2, "syntax": "[items,condition] call BIS_fnc_conditionalSelect", "local": false, "example": "[[10,0,8,2,6,4], { _x > 5 }] call BIS_fnc_conditionalSelect; // will return [10,8,6]", "docSyntax": "[items, condition] call BIS_fnc_conditionalSelect", "broadcasted": false, "description": "This returns a sub-array of elements that satisfy a specific condition in the order they have been passed.", "server": false}, "sendTaskResult": {"reviewLevel": 2, "syntax": "<objTask> sendTaskResult [state,result,sentence]", "local": false, "example": "", "docSyntax": "task sendTaskResult [state,result,sentence]", "broadcasted": false, "description": "Send a result of the task to the task sender.", "server": false}, "BIS_fnc_relativeDirTo": {"reviewLevel": 2, "syntax": "[point1,point2] call BIS_fnc_relativeDirTo", "local": false, "example": "[ [0,0,0], player ] call BIS_fnc_relPos;", "docSyntax": "[point1, point2] call BIS_fnc_relativeDirTo", "broadcasted": false, "description": "Returns the relative direction from object 1 to object/position 2. Return value is always in between 0 and 360.", "server": false}, "BIS_fnc_invSlotsEmpty": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_invSlotsEmpty", "local": false, "example": "[ player ] call BIS_fnc_invSlotsEmpty;//Can return [0,0,-1,-7,0,-1,0,-12]", "docSyntax": "[object] call BIS_fnc_invSlotsEmpty", "broadcasted": false, "description": "Returns empty inventory slots of given unit.", "server": false}, "BIS_fnc_randomInt": {"reviewLevel": 2, "syntax": "[min,max] call BIS_fnc_randomInt", "local": false, "example": "[1,3] call BIS_fnc_randomInt; // will return 1, 2 or 3", "docSyntax": "[min, max] call BIS_fnc_randomInt", "broadcasted": false, "description": "Returns a random integer between the two passed numbers (inclusive). The order of parameters doesn't matter: it can be [min, max] or [max, min].", "server": false}, "ppEffectEnable": {"reviewLevel": 1, "syntax": "effect ppEffectEnable <bool>", "local": false, "example": "\"colorCorrections\" ppEffectEnable true;", "docSyntax": "effect ppEffectEnable enable", "broadcasted": false, "description": "Enable / disable Post process effects", "server": false}, "isShowing3DIcons": {"reviewLevel": 2, "syntax": "isShowing3DIcons <objMap>", "local": false, "example": "", "docSyntax": "isShowing3DIcons map", "broadcasted": false, "description": "Returns true if the editor is set to draw 3D icons.", "server": false}, "fadeSpeech": {"reviewLevel": 1, "syntax": "<scalar> fadeSpeech volume", "local": false, "example": "5 fadeSpeech 0.1;", "docSyntax": "time fadeSpeech volume", "broadcasted": false, "description": "Cause a smooth change in the master speech volume. The change duration is given by time, the target volume by volume. The default master is 1.0.", "server": false}, "BIS_fnc_version": {"reviewLevel": 2, "syntax": "call BIS_fnc_version", "local": false, "example": "_availableExpansions = call BIS_fnc_version;", "docSyntax": "call BIS_fnc_version", "broadcasted": false, "description": "Detects which Arma 2 expansions and addons are available. Only works in Arma 2.", "server": false}, "BIS_fnc_sceneGetObjects": {"reviewLevel": 2, "syntax": "[centre,radius,type] call BIS_fnc_sceneGetObjects", "local": false, "example": "[player, 20, \"Car\"] call BIS_fnc_sceneGetObjects;", "docSyntax": "[centre, radius, type] call BIS_fnc_sceneGetObjects", "broadcasted": false, "description": "", "server": false}, "progressLoadingScreen": {"reviewLevel": 1, "syntax": "progressLoadingScreen progress", "local": false, "example": "startLoadingScreen [\"Loading My Mission\"]; //Batch of code //Batch of code //Batch of code progressLoadingScreen 0.5; //Batch of code //Batch of code //Batch of code endLoadingScreen;", "docSyntax": "progressLoadingScreen progress", "broadcasted": false, "description": "If loading screen is shown, sets progress bar to the given value (interval is from 0 to 1])", "server": false}, "waypointFormation": {"reviewLevel": 1, "syntax": "waypointFormation waypoint", "local": false, "example": "waypointFormation [groupOne,1]", "docSyntax": "waypointFormation waypoint", "broadcasted": false, "description": "Gets the waypoint formation. Possible values are:", "server": false}, "selectEditorObject": {"reviewLevel": 2, "syntax": "<objMap> selectEditorObject <object>", "local": false, "example": "", "docSyntax": "map selectEditorObject object", "broadcasted": false, "description": "Select an editor object. Does not un-select previously selected objects.", "server": false}, "lnbDeleteRow": {"reviewLevel": 2, "syntax": "_ctrl lnbDeleteRow <scalar>", "local": false, "example": "_ctrl lnbDeleteRow 1;", "docSyntax": "_ctrl lnbDeleteRow row", "broadcasted": false, "description": "Removes row with the given index from the given listbox or combobox.", "server": false}, "sendUDPMessage": {"reviewLevel": 2, "syntax": "sendUDPMessage [ip,port,message]", "local": false, "example": "_bool = sendUDPMessage [\"192.168.0.1\", 2302, \"Here goes you message...\"];", "docSyntax": "sendUDPMessage [ip, port, message]", "broadcasted": false, "description": "Send message to given address using UDP protocol. Returns false if the message has not been delivered Note: Not implemented (see talk page for more info).", "server": false}, "currentWeapon": {"reviewLevel": 2, "syntax": "currentWeapon <objVehicle>", "local": false, "example": "_weaponClass = currentWeapon (vehicle player);//Example: \"M16A2GL\"", "docSyntax": "currentWeapon vehicle", "broadcasted": false, "description": "Return the name of the currently selected weapon (on the primary turret for vehicles).", "server": false}, "magazinesTurret": {"reviewLevel": 1, "syntax": "<objVehicle> magazinesTurret turretPath", "local": false, "example": "_mags = vehicle player magazinesTurret [0, 0];", "docSyntax": "vehicle magazinesTurret turretPath", "broadcasted": false, "description": "Returns all magazines of given turret. Use turret path [-1] for driver's turret. Alternatively, use magazinesAllTurrets", "server": true}, "setGroupIcon": {"reviewLevel": 2, "syntax": "<objGroup> setGroupIcon [<scalar>,icon,offset]", "local": false, "example": "_target setGroupIcon [_icon, \"hc_selectedEnemy\"]; _target setGroupIcon [_icon, \"flag\"]; _grp setGroupIcon [_iconsize, _iconsizeclass, _offset]; _grp setGroupIcon [_newid, _icon, _offset]; _grp setGroupIcon [_icon, _iconclass];", "docSyntax": "group setGroupIcon [id, icon, offset]", "broadcasted": false, "description": "Sets group icon properties.", "server": false}, "lifeState": {"reviewLevel": 2, "syntax": "lifeState <objUnit>", "local": false, "example": "_ls = lifeState loon;", "docSyntax": "lifeState unit", "broadcasted": false, "description": "Returns the life state of the given unit. Can be one of:", "server": true}, "BIS_fnc_isPosBlacklisted": {"reviewLevel": 2, "syntax": "[position,blacklistArea] call BIS_fnc_isPosBlacklisted", "local": false, "example": "[[50,50], [[0,0], [100,100]]] call BIS_fnc_isPosBlacklisted;", "docSyntax": "[position, blacklistArea] call BIS_fnc_isPosBlacklisted", "broadcasted": false, "description": "Function checks a blacklist and sees if the given position is in it or not.", "server": false}, "BIS_fnc_variableSpaceAdd": {"reviewLevel": 2, "syntax": "[<object>,varName,element,global,inArray] call BIS_fnc_variableSpaceAdd", "local": false, "example": "[ player,\"someVar\",1337,true,true ] call BIS_fnc_variableSpaceAdd;", "docSyntax": "[object,varName,element,global,inArray] call BIS_fnc_variableSpaceAdd", "broadcasted": false, "description": "Add element to variable from someone's variable space.", "server": false}, "BIS_fnc_unitVector": {"example": "", "server": false, "broadcasted": false, "description": "/************************************************************ Unit Vector Returns the unit vector for the passed vector (vector pointing in the same direction, but with magnitude == 1) This does not modify the original array. The array can have any number of elements (2, 3, etc). ************************************************************/", "local": false}, "BIS_fnc_arrayPushStack": {"reviewLevel": 2, "syntax": "[array1,array2] call BIS_fnc_arrayPushStack", "local": false, "example": "_array = [0,1,2]; [_array, [3,4,5]] call BIS_fnc_arrayPushStack; // _array is [0,1,2,3,4,5]", "docSyntax": "[array1, array2] call BIS_fnc_arrayPushStack", "broadcasted": false, "description": "This function is similar to the array push function; however, it pushes the contents of an array onto the stack array.", "server": false}, "backpackSpaceFor": {"reviewLevel": 1, "syntax": "result = backpack backpackSpaceFor weaponName", "local": false, "example": "(backpack player) backpackSpaceFor \"m16\"; // [weapons, magazines]", "docSyntax": "result = backpack backpackSpaceFor weaponName", "broadcasted": false, "description": "Returns how much space is in backpack for given weapon or magazine", "server": false}, "BIS_fnc_3Dcredits": {"reviewLevel": 2, "syntax": "[<string>,position,minDis,fadeDis] spawn BIS_fnc_3Dcredits", "local": false, "example": "[\"<t size='2'>Hello World</t>\", getPos helloWorld, 15, 0] spawn BIS_fnc_3Dcredits;", "docSyntax": "[text,position,minDis,fadeDis] spawn BIS_fnc_3Dcredits", "broadcasted": false, "description": "Displays structured text in 3D world.", "server": false}, "enableEngineArtillery": {"reviewLevel": 2, "syntax": "enableEngineArtillery <bool>", "local": false, "example": "enableEngineArtillery false;", "docSyntax": "enableEngineArtillery enabled", "broadcasted": false, "description": "Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire.", "server": false}, "startLoadingScreen": {"reviewLevel": 2, "syntax": "startLoadingScreen [<string>,resource]", "local": false, "example": "startLoadingScreen [\"Loading My Mission, please wait...\"];", "docSyntax": "startLoadingScreen [text, resource]", "broadcasted": false, "description": "Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, user control is disabled, mouse cursor is hidden, scripts run at full speed (50ms per frame instead of 3ms per frame for Scheduled Scripts). The loading screen does not end by itself and needs endLoadingScreen command, so make sure there is one at the end of loading operation.", "server": false}, "viewDistance": {"reviewLevel": 2, "syntax": "viewDistance", "local": false, "example": "hint (\"my view distance is \" + str viewDistance + \" meters\");", "docSyntax": "viewDistance", "broadcasted": false, "description": "Returns the rendering distance.", "server": false}, "isOnRoad": {"reviewLevel": 1, "syntax": "isOnRoad position", "local": false, "example": "_objOnRoad = isOnRoad player;", "docSyntax": "isOnRoad position", "broadcasted": false, "description": "Checks if given position is on road. Same as roadAt, only return is boolean instead of road object.", "server": true}, "BIS_fnc_taskHandler": {"returns": "void", "reviewLevel": 4, "syntax": "[<objUnit>, [[<string>, <scalar>]] call BIS_fnc_taskHandler;", "local": false, "example": "[ BIS_cooper, [ [\"objShaftoe\", 1], [\"objGorka\", 3]] call BIS_fnc_taskHandler;", "docSyntax": "[unit, [[task, priority]] call BIS_fnc_taskHandler;", "broadcasted": false, "description": "Automatically sets tasks as current for assigned units.", "server": false}, "assignedCommander": {"reviewLevel": 2, "syntax": "assignedCommander <objVehicle>", "local": false, "example": "_commander = assignedCommander vehicleName", "docSyntax": "assignedCommander vehicle", "broadcasted": false, "description": "Returns the soldier assigned to the given vehicle as a commander.", "server": false}, "enableGunLights": {"reviewLevel": 1, "syntax": "thing enableGunLights <scalar>", "local": true, "example": "_group enableGunLights true; // Arma 2 OA _group enableGunLights \"forceOn\"; // Arma 3", "docSyntax": "thing enableGunLights value", "broadcasted": true, "description": "Force the AI to use gun lights", "server": false}, "BIS_fnc_vectorFromXToY": {"reviewLevel": 2, "syntax": "[vector1,vector2] call BIS_fnc_vectorFromXToY", "local": false, "example": "_resultVector = [getPosASL vehicle player, getPosASL airTarget] call BIS_fnc_vectorFromXToY;", "docSyntax": "[vector1, vector2] call BIS_fnc_vectorFromXToY", "broadcasted": false, "description": "Returns a unit vector that 'points' from vector1 to vector2. This is a very useful function as it can be used with the velocity command to move an object from one position to another (i.e vector1 to vector2).", "server": false}, "worldToScreen": {"reviewLevel": 1, "syntax": "worldToScreen position", "local": false, "example": "_screenPos = worldToScreen getPos soldier1;", "docSyntax": "worldToScreen position", "broadcasted": false, "description": "Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned.", "server": false}, "BIS_fnc_distance2D": {"reviewLevel": 2, "syntax": "[param1,param2] call BIS_fnc_distance2D", "local": false, "example": "[player, rescueHelicopter] call BIS_fnc_distance2D;", "docSyntax": "[param1, param2] call BIS_fnc_distance2D", "broadcasted": false, "description": "Returns the distance between two objects or positions.", "server": false}, "lnbSetText": {"reviewLevel": 2, "syntax": "lnbSetText [<scalar>,[<scalar>,<scalar>],data]", "local": true, "example": "lnbSetText [101, [0,1], \"#1\"];", "docSyntax": "lnbSetText [idc,[row,column],data]", "broadcasted": false, "description": "Sets the additional text (invisible) in the item with the given position of the 2D listbox.", "server": false}, "lockedDriver": {"reviewLevel": 2, "syntax": "lockedDriver <objVehicle>", "local": false, "example": "_driverLocked = lockedDriver vehicle player;", "docSyntax": "lockedDriver vehicle", "broadcasted": false, "description": "Check whether driver position of the vehicle turret is locked.", "server": false}, "loadGame": {"reviewLevel": 2, "syntax": "loadGame", "local": false, "example": "loadGame;", "docSyntax": "loadGame", "broadcasted": false, "description": "Loads game from the last autosave made with saveGame. If no autosave exists, restarts the mission. When used in campaign it will also deduct 1 life, defined in:", "server": false}, "roadsConnectedTo": {"reviewLevel": 1, "syntax": "roadsConnectedTo roadSegment", "local": false, "example": "_road = (player nearRoads 50) select 0; _connectedRoads = roadsConnectedTo _road;", "docSyntax": "roadsConnectedTo roadSegment", "broadcasted": false, "description": "Find the road segments connected to the given road segment.", "server": false}, "waypointBehaviour": {"reviewLevel": 1, "syntax": "waypointBehaviour waypoint", "local": false, "example": "waypointBehaviour [groupOne,1]", "docSyntax": "waypointBehaviour waypoint", "broadcasted": false, "description": "Gets the waypoint behavior.", "server": false}, "BIS_fnc_invString": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_invString", "local": false, "example": "[ player ] call BIS_fnc_invString;", "docSyntax": "[object] call BIS_fnc_invString", "broadcasted": false, "description": "Returns inventory contents of given vehicle (unit). Note: for vehicles it returns mounted gun and its ammo, not cargo weapons and ammo.", "server": false}, "clearOverlay": {"reviewLevel": 2, "syntax": "clearOverlay <objMap>", "local": false, "example": "clearOverlay _map,", "docSyntax": "clearOverlay map", "broadcasted": false, "description": "Clear the current overlay.", "server": false}, "taskDestination": {"reviewLevel": 2, "syntax": "taskDestination <objTask>", "local": false, "example": "if (!isNull currentTask player) then {taskDestination currentTaskplayer}; //return Position (Array)", "docSyntax": "taskDestination task", "broadcasted": false, "description": "Returns the position of the task (as specified by destination parameter in config).", "server": false}, "nearObjectsReady": {"reviewLevel": 1, "syntax": "position nearObjectsReady radius", "local": false, "example": "_twnpos nearObjectsReady 500;//from ALICE", "docSyntax": "position nearObjectsReady radius", "broadcasted": false, "description": "Check whether all data are loaded to nearObjects will return in reasonable time.", "server": false}, "onTeamSwitch": {"reviewLevel": 1, "syntax": "onTeamSwitch commandset", "local": false, "example": "onTeamSwitch {[_from, _to] execVM \"myTeamSwitchScript.sqf\";};", "docSyntax": "onTeamSwitch commandset", "broadcasted": false, "description": "Defines an action performed when the team switch is finished. Commandset receives the following special variables: _from object previous unit, _to object current unit. Consecutive use of onTeamSwitch command will overwrite previously set commandset.", "server": false}, "setPlayerRespawnTime": {"reviewLevel": 1, "syntax": "setPlayerRespawnTime interval", "local": false, "example": "setPlayerRespawnTime 5;", "docSyntax": "setPlayerRespawnTime interval", "broadcasted": false, "description": "Sets the time interval (in seconds) that the player must wait before respawn.", "server": false}, "entities": {"reviewLevel": 1, "syntax": "entities type", "local": false, "example": "_allcars = entities \"Car\";", "docSyntax": "entities type", "broadcasted": false, "description": "Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored. When empty string \"\" is passed for the type, all entity types are returned.", "server": false}, "waypointHousePosition": {"reviewLevel": 1, "syntax": "waypointHousePosition waypoint", "local": false, "example": "waypointHousePosition [groupOne,1]", "docSyntax": "waypointHousePosition waypoint", "broadcasted": false, "description": "Returns buildingPos index assigned to the waypoint.", "server": false}, "enableSaving": {"reviewLevel": 2, "syntax": "enableSaving <bool>", "local": false, "example": "enableSaving false; // Saving disabled and make autosave. enableSaving true; // Saving enabled without autosave. enableSaving [ false, false ]; // Saving disabled without autosave. enableSaving [ false, true ]; // Saving disabled and make autosave. enableSaving [ true, false ]; // Saving enabled without autosave. enableSaving [ true, true ]; // Saving enabled and make autosave.", "docSyntax": "enableSaving enable", "broadcasted": false, "description": "Enable / disable saving of the game.", "server": false}, "taskState": {"reviewLevel": 2, "syntax": "<string> = taskState <objTask>", "local": false, "example": "tskSomeTask = player createSimpleTask [\"NewTask\"]; hint format[\"Taskstate:\u00c2\u00a0%1\", taskState tskSomeTask];", "docSyntax": "String = taskState task", "broadcasted": false, "description": "Returns the current state of a task. Possible return values are:", "server": false}, "serverTime": {"reviewLevel": 2, "syntax": "serverTime", "local": false, "example": "hint format [\"Synced server time\u00c2\u00a0:\u00c2\u00a0%1\", serverTime];", "docSyntax": "serverTime", "broadcasted": true, "description": "Returns the time since last server restart, synced to all clients in MP. The syncing is happening every 5 minutes, but you can force the next sync earlier by executing estimatedTimeLeft command. The time returned is also different to the time returned by time and diag_tickTime commands on server. Returns 0 in SP.", "server": false}, "removeMPEventHandler": {"reviewLevel": 2, "syntax": "<objUnit> removeMPEventHandler [event,<scalar>]", "local": false, "example": "player removeMPEventHandler [\"killed\", 0];", "docSyntax": "unitName removeMPEventHandler [event, index]", "broadcasted": true, "description": "Removes MP event handler added by addMPEventHandler. Format of handler is [type,index]. Index is returned by addMPEventHandler. When any handler is removed, all handler indices highter than the deleted one should decremented", "server": true}, "assignedGunner": {"reviewLevel": 2, "syntax": "assignedGunner <objVehicle>", "local": false, "example": "_gunner = assignedGunner vehicle player;", "docSyntax": "assignedGunner vehicle", "broadcasted": false, "description": "Returns the soldier assigned to the given vehicle as a gunner.", "server": false}, "diag_logSlowFrame": {"reviewLevel": 2, "syntax": "diag_logSlowFrame [section,threshold]", "local": false, "example": "diag_logSlowFrame ['total',0.3]", "docSyntax": "diag_logSlowFrame [section, threshold]", "broadcasted": false, "description": "Log all frames, where section takes longer than the threshold (in seconds).", "server": false}, "BIS_fnc_sandstorm": {"reviewLevel": 2, "syntax": "[<object>,interval,brightness,newspapers] call BIS_fnc_sandstorm", "local": false, "example": "[player, -1, 0.8, false] call BIS_fnc_sandstorm;", "docSyntax": "[object,interval,brightness,newspapers] call BIS_fnc_sandstorm", "broadcasted": false, "description": "Creates particle sandstorm round given object.", "server": false}, "fromEditor": {"reviewLevel": 1, "syntax": "fromEditor teamMember", "local": false, "example": "_fromEditor = fromEditor _member", "docSyntax": "fromEditor teamMember", "broadcasted": false, "description": "Return if given team was inserted directly from mission editor.", "server": false}, "playableUnits": {"reviewLevel": 2, "syntax": "playableUnits", "local": false, "example": "{_x groupChat \"I'm a playable unit.\";} forEach playableUnits;", "docSyntax": "playableUnits", "broadcasted": false, "description": "Returns a list of playable units in a multiplayer game (occupied by both AI or players), created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. This does not include dead players awaiting for respawn.", "server": false}, "estimatedEndServerTime": {"reviewLevel": 2, "syntax": "estimatedEndServerTime", "local": false, "example": "Estimated minutes left: _min = (ceil (estimatedEndServerTime - serverTime) / 60);", "docSyntax": "estimatedEndServerTime", "broadcasted": false, "description": "Estimated end of MP game in seconds converted to serverTime.", "server": false}, "fireAtTarget": {"reviewLevel": 1, "syntax": "sourceVehicle fireAtTarget [targetVehicle,weaponMuzzleName]", "local": false, "example": "_handle = this fireAtTarget [groundtarget1,\"HellfireLauncher\"];", "docSyntax": "sourceVehicle fireAtTarget [targetVehicle, weaponMuzzleName]", "broadcasted": false, "description": "Remotely forces a unit to fire the given weapon. See also: BIS_fnc_fire", "server": false}, "synchronizeObjectsAdd": {"reviewLevel": 2, "syntax": "<objUnit> synchronizeObjectsAdd [objects]", "local": false, "example": "_acm = _groupLogic createUnit [\"AmbientCombatManager\",position player,[],0,\"NONE\"]; _acm synchronizeObjectsAdd [player];", "docSyntax": "unit synchronizeObjectsAdd [objects]", "broadcasted": true, "description": "Add given objects to the unit's list of synchronized objects.", "server": true}, "createDiaryLink": {"reviewLevel": 2, "syntax": "createDiaryLink [<string>,<object>,<string>]", "local": false, "example": "_link = createDiarySubject [\"Group\",player,\"Player\"]", "docSyntax": "createDiaryLink [subject,object,text]", "broadcasted": false, "description": "Create a link to the section of diary given by subject. Record is selected based on given object (diary record,task or unit).", "server": false}, "removeGroupIcon": {"reviewLevel": 1, "syntax": "<objGroup> removeGroupIcon iconID", "local": false, "example": "_target removeGroupIcon (_target getvariable \"hc_attackicon\");", "docSyntax": "group removeGroupIcon iconID", "broadcasted": false, "description": "Remove icon with given ID from group.", "server": false}, "BIS_fnc_vectorAdd": {"reviewLevel": 2, "syntax": "[vector1,vector2] call BIS_fnc_vectorAdd", "local": false, "example": "[[1,1,1], [2,5,3]] call BIS_fnc_vectorAdd; // returns [3,6,4]", "docSyntax": "[vector1, vector2] call BIS_fnc_vectorAdd", "broadcasted": false, "description": "Returns the sum of two vectors.", "server": false}, "findEditorObject": {"reviewLevel": 2, "syntax": "<objMap> findEditorObject <scalar>", "local": false, "example": "", "docSyntax": "map findEditorObject value", "broadcasted": false, "description": "Return object that matches the provided reference.", "server": false}, "addMenu": {"reviewLevel": 2, "syntax": "<objMap> addMenu [<string>,priority]", "local": false, "example": "example", "docSyntax": "map addMenu [text,priority]", "broadcasted": false, "description": "Adds a new menu button. Priority is optional.", "server": false}, "setTaskState": {"reviewLevel": 1, "syntax": "<objTask> setTaskState state", "local": false, "example": "_tskKillSpongebob setTaskState \"Succeeded\";", "docSyntax": "task setTaskState state", "broadcasted": false, "description": "Set the state of a given task. State value may be one of:", "server": false}, "forceWalk": {"reviewLevel": 2, "syntax": "<objUnit> forceWalk <scalar>", "local": true, "example": "player forceWalk true;", "docSyntax": "unit forceWalk value", "broadcasted": false, "description": "Forces unit to walk even if run or sprint is selected.", "server": false}, "nMenuItems": {"reviewLevel": 1, "syntax": "<objMap> nMenuItems menuName", "local": false, "example": "", "docSyntax": "map nMenuItems menuName", "broadcasted": false, "description": "Returns the total number of user-added menu items belonging to the given menu.", "server": false}, "playAction": {"reviewLevel": 1, "syntax": "soldier playAction action", "local": true, "example": "soldierOne playAction \"SitDown\"", "docSyntax": "soldier playAction action", "broadcasted": true, "description": "When used on a person, a smooth transition to the given action will be initiated.", "server": false}, "armoryPoints": {"reviewLevel": 2, "syntax": "armoryPoints", "local": false, "example": "_points = armoryPoints;", "docSyntax": "armoryPoints", "broadcasted": false, "description": "Returns, stored in [USERNAME].ArmaXProfile, value of armoryPoints entry. If the entry doesn't exist, it returns 0.", "server": false}, "setToneMapping": {"reviewLevel": 1, "syntax": "setToneMapping toneName", "local": false, "example": "setToneMapping \"Filmic\"", "docSyntax": "setToneMapping toneName", "broadcasted": false, "description": "Applies a specific tone mapping to the game.", "server": false}, "setUnconscious": {"reviewLevel": 1, "syntax": "<objUnit> setUnconscious set", "local": true, "example": "_unit setUnconscious true;", "docSyntax": "unit setUnconscious set", "broadcasted": true, "description": "Since Arma 3 v1.63.136889, this command sets unit into incapacitated state and lifeState command returns \"INCAPACITATED\". Animation played while incapacitated depends on the injuries received.", "server": false}, "collapseObjectTree": {"reviewLevel": 2, "syntax": "collapseObjectTree <objMap>", "local": false, "example": "collapseObjectTree _map,", "docSyntax": "collapseObjectTree map", "broadcasted": false, "description": "Collapse the object tree.", "server": false}, "BIS_fnc_returnConfigEntry": {"reviewLevel": 2, "syntax": "[config,attribute,defaultValue] call BIS_fnc_returnConfigEntry", "local": false, "example": "[configfile >> \"Cfg3DEN\" >> \"Attributes\" >> \"ActivationType\",\"idc\"] call BIS_fnc_returnConfigEntry;", "docSyntax": "[config,attribute,defaultValue] call BIS_fnc_returnConfigEntry", "broadcasted": false, "description": "Explores parent classes in the run-time config for the value of a config entry.", "server": false}, "currentZeroing": {"reviewLevel": 1, "syntax": "currentZeroing gunner", "local": false, "example": "_zeroing = currentZeroing player;", "docSyntax": "currentZeroing gunner", "broadcasted": false, "description": "Returns zeroing of unit's weapon.", "server": false}, "BIS_fnc_locations": {"reviewLevel": 2, "syntax": "[type(s),area,debug] call BIS_fnc_locations", "local": false, "example": "[\"CityCenter\",[position player,1000]] call bis_fnc_locations;", "docSyntax": "[type(s),area,debug] call BIS_fnc_locations", "broadcasted": false, "description": "Creates or registers location logics (used in various modules, like Ambient Civilians, Ambient Civilian Vehicles or Warfare 2). Upon registering, function will set following variables into location logic's variable space:", "server": false}, "setWaypointCompletionRadius": {"reviewLevel": 1, "syntax": "waypoint setWaypointCompletionRadius radius", "local": false, "example": "[grp, 2] setWaypointCompletionRadius 30;", "docSyntax": "waypoint setWaypointCompletionRadius radius", "broadcasted": false, "description": "The completion radius allows units to call the waypoint completed once they are inside of the given circle.", "server": false}, "setLeader": {"reviewLevel": 1, "syntax": "team setLeader leader", "local": true, "example": "", "docSyntax": "team setLeader leader", "broadcasted": false, "description": "Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global.", "server": false}, "BIS_fnc_absSpeed": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_absSpeed;", "local": false, "example": "if (((vehicle player) call BIS_fnc_absSpeed) > 150) then { hint \"There goes my driver's license\u00c2\u00a0:(\"; };", "docSyntax": "Object call BIS_fnc_absSpeed;", "broadcasted": false, "description": "Returns absolute speed of a vehicle in kilometers per hour (km/h)", "server": false}, "setToneMappingParams": {"reviewLevel": 1, "syntax": "toneName setToneMappingParams <any>", "local": false, "example": "\"Filmic\" setToneMappingParams [0.2, 0.30, 0.20, 0.30, 0.01, 3.750, 6, 4]", "docSyntax": "toneName setToneMappingParams params", "broadcasted": false, "description": "Edits tone mapping parameters.", "server": false}, "commandRadio": {"reviewLevel": 1, "syntax": "<objUnit> commandRadio radioName", "local": false, "example": "_soldierOne commandRadio \"messageOne\";", "docSyntax": "unit commandRadio radioName", "broadcasted": false, "description": "Sends the audio message to the command radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "server": true}, "enableAIFeature": {"reviewLevel": 1, "syntax": "feature enableAIFeature <bool>", "local": false, "example": "\"AwareFormationSoft\" enableAIFeature true", "docSyntax": "feature enableAIFeature enabled", "broadcasted": false, "description": "Enable/disable given AI feature. Feature may be one of: \"AwareFormationSoft\", \"CombatFormationSoft\".", "server": false}, "unitBackpack": {"reviewLevel": 2, "syntax": "unitBackpack <objUnit>", "local": false, "example": "myBackpack = unitBackpack player", "docSyntax": "unitBackpack unit", "broadcasted": false, "description": "Returns unit's backpack", "server": false}, "lockCargo": {"reviewLevel": 1, "syntax": "<objVehicle> lockCargo lock", "local": true, "example": "vehicleName lockCargo true;", "docSyntax": "vehicle lockCargo lock", "broadcasted": true, "description": "Lock all cargo positions of a vehicle or lock by index. This command must be executed where vehicle is local. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike lock command", "server": false}, "allowDamage": {"reviewLevel": 1, "syntax": "<object> allowDamage allow", "local": true, "example": "player allowDamage false;", "docSyntax": "object allowDamage allow", "broadcasted": true, "description": "Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as setHit, setHitIndex, setHitPointDamage or setDamage. To check if damage is allowed at current locality, see isDamageAllowed.", "server": false}, "BIS_fnc_removeNestedElement": {"reviewLevel": 2, "syntax": "[<array>,itemToRemove] call BIS_fnc_removeNestedElement", "local": false, "example": "_array = [[1, 2], [3, 3, 4]]; _bool = [_array, 3] call BIS_fnc_removeNestedElement; // _array is now [[1, 2], [4]]", "docSyntax": "[array, itemToRemove] call BIS_fnc_removeNestedElement", "broadcasted": false, "description": "Function to remove an item in a nested array. Modifies the array by reference.", "server": false}, "with": {"reviewLevel": 1, "syntax": "with namespace", "local": false, "example": "_myWithType = with uiNamespace;", "docSyntax": "with namespace", "broadcasted": false, "description": "Creates a With Type that is used inside a do construct in order to execute code inside a given namespace.", "server": false}, "moveTime": {"reviewLevel": 1, "syntax": "moveTime soldier", "local": false, "example": "moveTime player;", "docSyntax": "moveTime soldier", "broadcasted": false, "description": "Returns the current time of the most important RTM animation currently being played on the soldier.", "server": false}, "ctrlRemoveEventHandler": {"reviewLevel": 2, "syntax": "<uiControl> ctrlRemoveEventHandler [handler <string>,<scalar>]", "local": false, "example": "_map ctrlRemoveEventHandler [\"Draw\", _id];", "docSyntax": "control ctrlRemoveEventHandler [handler name,id]", "broadcasted": false, "description": "Remove a given event handler from the given control.", "server": false}, "updateDrawIcon": {"reviewLevel": 2, "syntax": "<objMap> updateDrawIcon [<object>,<string> identifier,<scalar>,offset,width,height,maintain size?,angle,shadow]", "local": false, "example": "", "docSyntax": "map updateDrawIcon [object,string identifier,color,offset,width,height,maintain size?,angle,shadow]", "broadcasted": false, "description": "Updates the icon to be shown in 2D editor for the specified editor,object. If maintain size is false,icon will not scale depending on the,scale of the map. If maintain size is a number,the icon will maintain,size if map scale is below that number.", "server": false}, "allow3DMode": {"reviewLevel": 2, "syntax": "<objMap> allow3DMode <bool>", "local": false, "example": "", "docSyntax": "map allow3DMode bool", "broadcasted": false, "description": "Allow/dissallow 3D mode.,", "server": false}, "setObjectProxy": {"reviewLevel": 2, "syntax": "<objMap> setObjectProxy [<object>,proxy <object>]", "local": false, "example": "_map setObjectProxy [\"_group_0\", vehicle (leader _group)];", "docSyntax": "map setObjectProxy [object,proxy object]", "broadcasted": false, "description": "Set the proxy object associated with the given editor object.", "server": false}, "lnbAddColumn": {"reviewLevel": 1, "syntax": "_ctrl lnbAddColumn position", "local": true, "example": "_ctrl lnbAddColumn 0.8;", "docSyntax": "_ctrl lnbAddColumn position", "broadcasted": false, "description": "Adds an column at given position. It returns the index of the newly added column.", "server": false}, "lnbClear": {"reviewLevel": 2, "syntax": "lnbClear <scalar>", "local": false, "example": "lnbClear _ctrl;", "docSyntax": "lnbClear idc", "broadcasted": false, "description": "Clears all items in the given listbox or combobox.", "server": false}, "setTaskResult": {"reviewLevel": 2, "syntax": "<objTask> setTaskResult [state,result]", "local": false, "example": "", "docSyntax": "task setTaskResult [state,result]", "broadcasted": false, "description": "Set a result of the task.", "server": false}, "setObjectArguments": {"reviewLevel": 2, "syntax": "<objMap> setObjectArguments [<object>,[name1,value1,...]]", "local": false, "example": "", "docSyntax": "map setObjectArguments [object,[name1,value1,...]]", "broadcasted": false, "description": "Set object arguments in mission editor.", "server": false}, "targetsAggregate": {"reviewLevel": 1, "syntax": "[speaker,<objSide>,<objUnit>,place,<scalar>] targetsAggregate candidates", "local": false, "example": "_aggregation = [_this,\"\",\"\",\"\",\"\"] targetsAggregate _selected;//ca\\characters\\scripts\\reactCore_Full.fsm", "docSyntax": "[speaker, side, unit, place, time] targetsAggregate candidates", "broadcasted": false, "description": "Aggregate candidates.", "server": false}, "onGroupIconOverLeave": {"reviewLevel": 1, "syntax": "onGroupIconOverLeave command", "local": false, "example": "onGroupIconOverLeave { // Passed values for _this are: _is3D = _this select 0; _group = _this select 1; _wpID = _this select 2; _posx = _this select 3; _posy = _this select 4; _shift = _this select 5; _ctrl = _this select 6; _alt = _this select 7; _message = format [\"____ Info ____\"]; {_message = _message + format [\"\\n\u00c2\u00a0%1\",_x]} forEach _this; hint _message; }", "docSyntax": "onGroupIconOverLeave command", "broadcasted": false, "description": "Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once.", "server": false}, "gearSlotData": {"reviewLevel": 2, "syntax": "gearSlotData <uiControl>", "local": false, "example": "Open any ammobox and click by any gear slots", "docSyntax": "gearSlotData control", "broadcasted": false, "description": "Returns gear slot item name.", "server": false}, "triggerArea": {"reviewLevel": 2, "syntax": "triggerArea <objTrigger>", "local": false, "example": "_area = triggerArea sensor1; // result is [200, 120, 45, false]", "docSyntax": "triggerArea trigger", "broadcasted": false, "description": "Returns currently monitored trigger area. The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "server": true}, "visibleMap": {"reviewLevel": 2, "syntax": "visibleMap", "local": false, "example": "if (visibleMap) then {hint \"You're showing the map\u00c2\u00a0!\"}", "docSyntax": "visibleMap", "broadcasted": false, "description": "Return true if the main map is shown (active).", "server": false}, "BIS_fnc_arrayUnShift": {"reviewLevel": 2, "syntax": "[<array>,<scalar>] call BIS_fnc_arrayUnShift", "local": false, "example": "_array = [2,3,4]; [_array, 1] call BIS_fnc_arrayUnShift; // _array is now [1,2,3,4]", "docSyntax": "[array, value] call BIS_fnc_arrayUnShift", "broadcasted": false, "description": "This function adds an element to the beginning of an array and returns the array. The array is passed by reference so changes inside the function will be reflected outside of it.", "server": false}, "BIS_fnc_relPos": {"reviewLevel": 2, "syntax": "[start,<scalar>,direction] call BIS_fnc_relPos", "local": false, "example": "[ [0,0,0], 1000, 50 ] call BIS_fnc_relPos;//[766.044,642.788,0]", "docSyntax": "[start, distance, direction] call BIS_fnc_relPos", "broadcasted": false, "description": "Returns a position that is a specified distance and compass direction from the passed position or object.", "server": false}, "createGearDialog": {"reviewLevel": 2, "syntax": "createGearDialog [<objUnit>,resource]", "local": false, "example": "createGearDialog [player];", "docSyntax": "createGearDialog [unit, resource]", "broadcasted": false, "description": "Opens gear dialog for given unit. Alternatively use action command: player action [\"Gear\", player];", "server": false}, "BIS_fnc_playVideo": {"reviewLevel": 2, "syntax": "[content,size,<scalar>,skipVarName,bgColor,keepAspect] spawn BIS_fnc_playVideo", "local": false, "example": "_video = [\"A3\\Missions_F_EPA\\video\\A_in_intro.ogv\"] spawn BIS_fnc_playVideo;", "docSyntax": "[content, size, color, skipVarName, bgColor, keepAspect] spawn BIS_fnc_playVideo", "broadcasted": false, "description": "Plays in-game video with a range of options. The function can be called or spawned. If spawned, scriptDone command can be used to see if video is stopped or finished. If called in scheduled environment, the next line of code will not process until the video is stopped or finished.", "server": false}, "BIS_fnc_selectCrew": {"reviewLevel": 2, "syntax": "[<objSide>,configEntry] call BIS_fnc_selectCrew", "local": false, "example": "_crewType = [blufor, configFile >> \"CfgVehicles\" >> \"B_MRAP_01_F\"] call BIS_fnc_selectCrew;", "docSyntax": "[side, configEntry] call BIS_fnc_selectCrew", "broadcasted": false, "description": "Return an appropriate crew type for a certain vehicle.", "server": false}, "addBackpackCargo": {"reviewLevel": 2, "syntax": "<objVehicle> addBackpackCargo [packClassName,count]", "local": true, "example": "this addBackpackCargo [\"TK_RPG_Backpack_EP1\",2];", "docSyntax": "vehicle addBackpackCargo [packClassName,count]", "broadcasted": false, "description": "Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is here.", "server": true}, "disableConversation": {"reviewLevel": 1, "syntax": "<objUnit> disableConversation disable", "local": false, "example": "player disableConversation true", "docSyntax": "unitName disableConversation disable", "broadcasted": false, "description": "Disable the ability to talk to other people.", "server": false}, "safeZoneWAbs": {"reviewLevel": 2, "syntax": "safeZoneWAbs", "local": false, "example": "_szW = safeZoneWAbs;", "docSyntax": "safeZoneWAbs", "broadcasted": false, "description": "Returns SafeZone width (of all monitors, in case there's more than one)", "server": false}, "displayAddEventHandler": {"reviewLevel": 2, "syntax": "<uiDisplay> displayAddEventHandler [eventName,<code>]", "local": false, "example": "moduleName_keyDownEHId = (findDisplay 46) displayAddEventHandler [\"KeyDown\", \"hint str _this;\"];", "docSyntax": "display displayAddEventHandler [eventName, code]", "broadcasted": false, "description": "Adds an event handler to the given display. Returns the ID of the event handler, or -1 when failed.", "server": false}, "setCamShakeParams": {"reviewLevel": 2, "syntax": "setCamShakeParams [posCoef,vertCoef,horzCoef,bankCoef,interpolation]", "local": false, "example": "setCamShakeParams [0.1, 1, 1, 1, true];", "docSyntax": "setCamShakeParams [posCoef, vertCoef, horzCoef, bankCoef, interpolation]", "broadcasted": false, "description": "Set camera shake parameters. Will not have any effect until shake is started via addCamShake.", "server": false}, "attachTo": {"reviewLevel": 2, "syntax": "object1 attachTo [object2,offset,memPoint]", "local": false, "example": "player attachTo [car, [0, 0, 1] ];", "docSyntax": "object1 attachTo [object2, offset, memPoint]", "broadcasted": true, "description": "Attaches an object to another object. The offset is applied to the object center unless a memory point is provided. If no offset is specified, the offset used will be the current relative positioning of objects against each other.", "server": true}, "onShowNewObject": {"reviewLevel": 1, "syntax": "<objMap> onShowNewObject command", "local": false, "example": "", "docSyntax": "map onShowNewObject command", "broadcasted": false, "description": "Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior. Command receives:,_pos array position,", "server": false}, "BIS_fnc_cutDecimals": {"reviewLevel": 2, "syntax": "[<scalar>,precision] call BIS_fnc_cutDecimals", "local": false, "example": "_cutDecimals = [33.3333, 1] call BIS_fnc_cutDecimals; // returns 33.3", "docSyntax": "[number, precision] call BIS_fnc_cutDecimals", "broadcasted": false, "description": "Function that rounds specified number to specified amount of decimals.", "server": false}, "allDead": {"reviewLevel": 2, "syntax": "allDead", "local": false, "example": "{ deleteVehicle _x } forEach allDead;", "docSyntax": "allDead", "broadcasted": false, "description": "Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles.", "server": false}, "BIS_fnc_classWeapon": {"reviewLevel": 1, "syntax": "weaponClass call BIS_fnc_classWeapon", "local": false, "example": "_weaponConfig = currentWeapon player call BIS_fnc_classWeapon;", "docSyntax": "weaponClass call BIS_fnc_classWeapon", "broadcasted": false, "description": "Returns class of weapon given by string.", "server": false}, "getPosATL": {"reviewLevel": 2, "syntax": "getPosATL <object>", "local": false, "example": "_objPosition = getPosATL player", "docSyntax": "getPosATL object", "broadcasted": false, "description": "Returns the position of an object relative to the terrain.", "server": true}, "groupIconSelectable": {"reviewLevel": 2, "syntax": "groupIconSelectable", "local": false, "example": "hint str groupIconSelectable;", "docSyntax": "groupIconSelectable", "broadcasted": false, "description": "Returns whether or not group icons raise onGroupIconClick, onGroupIconOverEnter and onGroupIconOverLeave events.", "server": false}, "commandingMenu": {"reviewLevel": 2, "syntax": "commandingMenu", "local": false, "example": "waitUntil {commandingMenu == \"RscStatus\"}; hint \"Press 4, I'm bleeding\u00c2\u00a0!\";", "docSyntax": "commandingMenu", "broadcasted": false, "description": "Return the name of the player actual topmost commanding menu.", "server": false}, "addMagazineCargoGlobal": {"reviewLevel": 1, "syntax": "vehicleName addMagazineCargoGlobal [magazineName,count]", "local": false, "example": "_truck addMagazineCargoGlobal [\"M16\", 5];", "docSyntax": "vehicleName addMagazineCargoGlobal [magazineName, count]", "broadcasted": true, "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units. MP Synchronized", "server": true}, "BIS_fnc_maxDiffArray": {"reviewLevel": 2, "syntax": "[arrayOfNumbers] call BIS_fnc_maxDiffArray", "local": false, "example": "_maxDiff = [[0, 5, 10, -5]] call BIS_fnc_maxDiffArray; // will return 15 (-5 to 10)", "docSyntax": "[arrayOfNumbers] call BIS_fnc_maxDiffArray", "broadcasted": false, "description": "Function to return the maximum difference between all values in an array.", "server": false}, "showSubtitles": {"reviewLevel": 2, "syntax": "showSubtitles <bool>", "local": false, "example": "showSubtitles false;", "docSyntax": "showSubtitles enable", "broadcasted": false, "description": "Enables / disables showing of subtitles in a chat. Only scripted/engine chatter is affected, player manual chat is unaffected. Returns the previous state.", "server": false}, "BIS_fnc_invRemove": {"reviewLevel": 2, "syntax": "[<object>,class,count] call BIS_fnc_invRemove", "local": false, "example": "[ player,\"someClass\",5 ] call BIS_fnc_invRemove;", "docSyntax": "[object,class,count] call BIS_fnc_invRemove", "broadcasted": false, "description": "Removes from inventory. Given number of items. Returns actually removed items count.", "server": false}, "BIS_fnc_arrayShift": {"reviewLevel": 2, "syntax": "[<array>] call BIS_fnc_arrayShift", "local": false, "example": "_myArray = [\"2\", \"report\", \"status\"]; _removedElement = [_myArray] call BIS_fnc_arrayShift; // array is within an array _removedElement == \"2\"; // true _myArray isEqualTo [\"report\", \"status\"]; // true", "docSyntax": "[array] call BIS_fnc_arrayShift", "broadcasted": false, "description": "This function removes the first (leftmost) element of an array and returns it.", "server": false}, "setUnitRecoilCoefficient": {"reviewLevel": 1, "syntax": "<objUnit> setUnitRecoilCoefficient coefficient", "local": false, "example": "player setUnitRecoilCoefficient 10", "docSyntax": "unitName setUnitRecoilCoefficient coefficient", "broadcasted": false, "description": "Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil.", "server": false}, "importAllGroups": {"reviewLevel": 2, "syntax": "importAllGroups <objMap>", "local": false, "example": "", "docSyntax": "importAllGroups map", "broadcasted": false, "description": "Imports all groups into the RTE.", "server": false}, "BIS_fnc_infoText": {"reviewLevel": 2, "syntax": "[string_1,string_2,string_n] spawn BIS_fnc_infoText", "local": false, "example": "[ \"Somewhere on Altis\", format [\"Year\u00c2\u00a0%1\", date select 0], mapGridPosition player ] spawn BIS_fnc_infoText;", "docSyntax": "[string_1, string_2, string_n] spawn BIS_fnc_infoText", "broadcasted": false, "description": "Display a text in the \"mission\" GUI area with some effects. Good for the beginning of a mission.", "server": false}, "useAudioTimeForMoves": {"reviewLevel": 1, "syntax": "soldier useAudioTimeForMoves toggle", "local": false, "example": "player useAudioTimeForMoves true", "docSyntax": "soldier useAudioTimeForMoves toggle", "broadcasted": false, "description": "Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization.", "server": false}, "BIS_fnc_returnGroupComposition": {"example": "", "server": false, "broadcasted": false, "description": "/* File: returnGroupComp.sqf Description: Function which returns a logical group composition based on a number of parameters. Parameter(s): _this select 0: side (Side). _this select 1: number of characters (Number). _this select 2: (optional) type (String): - \"riflesquad\": (default) standard rifle squad. - \"sniper\": sniper team. Returns: Array of Strings - object types. TODO: use CfgGroups instead? */ //Validate parameter count", "local": false}, "setFSMVariable": {"reviewLevel": 1, "syntax": "handle setFSMVariable [<string>,<scalar>]", "local": false, "example": "_handle = execFSM \"test.fsm\"; _handle setFSMVariable [\"_foo\", 23]; sets variable _foo in the FSM to 23", "docSyntax": "handle setFSMVariable [name, value]", "broadcasted": false, "description": "Set variable to given value in the variable space of given FSM.", "server": false}, "setGroupIconsSelectable": {"reviewLevel": 2, "syntax": "setGroupIconsSelectable <bool>", "local": false, "example": "setGroupIconsSelectable true;", "docSyntax": "setGroupIconsSelectable bool", "broadcasted": false, "description": "Sets if group icons raise onGroupIconClick, onGroupIconOverEnter and onGroupIconOverLeave events.", "server": false}, "clearBackpackCargoGlobal": {"reviewLevel": 2, "syntax": "clearBackpackCargoGlobal <objUnit>", "local": false, "example": "clearBackpackCargoGlobal jeepOne;", "docSyntax": "clearBackpackCargoGlobal unit", "broadcasted": true, "description": "Removes all backpacks from the vehicle cargo space. MP synchronized.", "server": true}, "assignedCargo": {"reviewLevel": 2, "syntax": "assignedCargo <objVehicle>", "local": false, "example": "_list = assignedCargo _vehicleName", "docSyntax": "assignedCargo vehicle", "broadcasted": false, "description": "Returns the list of soldiers assigned to the given vehicle as a cargo.", "server": false}, "commitOverlay": {"reviewLevel": 2, "syntax": "commitOverlay <objMap>", "local": false, "example": "commitOverlay _map,", "docSyntax": "commitOverlay map", "broadcasted": false, "description": "Commit the current overlay.", "server": false}, "BIS_fnc_spawnVehicle": {"reviewLevel": 1, "syntax": "[position,direction,type,<objSide> or <objGroup>] call BIS_fnc_spawnVehicle", "local": false, "example": "[getPos mySpawnPos, 180, \"BMP3\", EAST] call bis_fnc_spawnvehicle", "docSyntax": "[position,direction,type,side or group] call BIS_fnc_spawnVehicle", "broadcasted": false, "description": "Function to spawn a certain vehicle type with all crew (including turrets). The vehicle can either become part of an existing group or create a new group.", "server": false}, "nextMenuItemIndex": {"reviewLevel": 2, "syntax": "nextMenuItemIndex <objMap>", "local": false, "example": "", "docSyntax": "nextMenuItemIndex map", "broadcasted": false, "description": "Returns the next available menu item index.", "server": false}, "isAutoHoverOn": {"reviewLevel": 2, "syntax": "isAutoHoverOn <objVehicle>", "local": false, "example": "status = isAutoHoverOn vehicle player;", "docSyntax": "isAutoHoverOn vehicle", "broadcasted": false, "description": "Return true if vehicle has enabled auto hover. (always returns false if the vehicle can't set auto hover)", "server": false}, "BIS_fnc_crows": {"reviewLevel": 2, "syntax": "[position,areaSize,<scalar>,height] call BIS_fnc_crows", "local": false, "example": "bis_crows = [BIS_scientist, 20, 8, 20] call BIS_fnc_crows;", "docSyntax": "[position,areaSize,number,height] call BIS_fnc_crows", "broadcasted": false, "description": "Spawns flock of crows circling the area.", "server": false}, "terrainIntersectASL": {"reviewLevel": 2, "syntax": "terrainIntersectASL [pos1,pos2]", "local": false, "example": "_intersects = terrainIntersectASL [getPosASL player, getPosASL chopper];", "docSyntax": "terrainIntersectASL [pos1, pos2]", "broadcasted": false, "description": "Checks for intersection of terrain between two ASL positions. Returns true if intersects with terrain. For AGL variant, see terrainIntersect", "server": false}, "clearGroupIcons": {"reviewLevel": 2, "syntax": "clearGroupIcons <objGroup>", "local": false, "example": "clearGroupIcons (group player);", "docSyntax": "clearGroupIcons group", "broadcasted": false, "description": "Removes all icon from group.", "server": false}, "allMissionObjects": {"reviewLevel": 1, "syntax": "allMissionObjects type", "local": false, "example": "_airObjects = allMissionObjects \"Air\";", "docSyntax": "allMissionObjects type", "broadcasted": false, "description": "Returns all mission objects (created by or during a mission) with given type (or its subtype). In some cases allMissionObjects could be substituted with entities, which would be much much faster alternative. Some of the unusual mission objects that can be detected with this command (as well as with nearestObject):", "server": false}, "triggerAttachedVehicle": {"reviewLevel": 2, "syntax": "triggerAttachedVehicle <objTrigger>", "local": false, "example": "return = triggerAttachedVehicle triggerName;", "docSyntax": "triggerAttachedVehicle trigger", "broadcasted": false, "description": "Returns vehicle attached to the trigger (for example using triggerAttachVehicle). Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "server": true}, "saveOverlay": {"reviewLevel": 2, "syntax": "saveOverlay <objMap>", "local": false, "example": "saveOverlay _map", "docSyntax": "saveOverlay map", "broadcasted": false, "description": "Save the current overlay.", "server": false}, "openDSInterface": {"reviewLevel": 2, "syntax": "openDSInterface", "local": false, "example": "openDSInterface", "docSyntax": "openDSInterface", "broadcasted": false, "description": "Opens MP interface.", "server": false}, "BIS_fnc_rotateVector2D": {"reviewLevel": 2, "syntax": "[vector2D,angle] call BIS_fnc_rotateVector2D", "local": false, "example": "[ [5,3], 60 ] call BIS_fnc_rotateVector2D;//Returns[-0.0980766,5.83013]", "docSyntax": "[vector2D, angle] call BIS_fnc_rotateVector2D", "broadcasted": false, "description": "This function returns a 2D vector rotated a specified number of degrees around the origin.", "server": false}, "lnbPicture": {"reviewLevel": 2, "syntax": "lnbPicture [<scalar>,[<scalar>,<scalar>]]", "local": true, "example": "lnbPicture [200, [1, 1]];", "docSyntax": "lnbPicture [IDC, [row, column]]", "broadcasted": false, "description": "Returns the picture name or path of the item with the given position of the 2D listbox.", "server": false}, "endMission": {"reviewLevel": 1, "syntax": "endMission endType", "local": true, "example": "endMission \"END1\";", "docSyntax": "endMission endType", "broadcasted": false, "description": "Finish the mission. The end type can be:", "server": false}, "getMagazineCargo": {"reviewLevel": 1, "syntax": "result = getMagazineCargo <object>", "local": false, "example": "_content = getMagazineCargo carName;", "docSyntax": "result = getMagazineCargo object", "broadcasted": false, "description": "Returns all magazines types and count from the cargo space", "server": true}, "BIS_fnc_boundingBoxCorner": {"example": "", "server": false, "broadcasted": false, "description": "Returns position of all four bounding box corners OR Returns position of the nearest corner to the given position Parameter(s): _this: OBJECT - object with bounding box OR _this: ARRAY in format: 0: OBJECT - object with bounding box 1: ARRAY or OBJECT - position for which the nearest corner is returned Returns: ARRAY in format [pos1, pos2, pos3, pos4] - 4 corners of the bounding box OR ARRAY in format [x,y,z] - position of the nearest corner Example 1: _corners = car call BIS_fnc_boundingBoxCorner; Example 2: _nearestCorner = [car, player] call BIS_fnc_boundingBoxCorner;", "local": false}, "safeZoneY": {"reviewLevel": 1, "syntax": "SafeZoneY", "local": false, "example": "_screenTopBorderY = safeZoneY; // returns a float value < 0", "docSyntax": "SafeZoneY", "broadcasted": false, "description": "", "server": false}, "aimedAtTarget": {"reviewLevel": 2, "syntax": "<objVehicle> aimedAtTarget [<object>,<string>]", "local": false, "example": "_aimingQuality = heli aimedAtTarget [target];", "docSyntax": "vehicle aimedAtTarget [target, weapon]", "broadcasted": false, "description": "Returns how good the weapon of the vehicle is aimed at the target.", "server": false}, "BIS_fnc_invAdd": {"reviewLevel": 2, "syntax": "[<object>,class,force] call BIS_fnc_invAdd", "local": false, "example": "[ player,\"someClass\" ] call BIS_fnc_invAdd;", "docSyntax": "[object,class,force] call BIS_fnc_invAdd", "broadcasted": false, "description": "Adds item to inventory - checks if there is room for it. Checks if add was done by engine.", "server": false}, "setSimpleTaskDescription": {"reviewLevel": 2, "syntax": "<objTask> setSimpleTaskDescription [description,descriptionShort,descriptionHUD]", "local": false, "example": "mytask setSimpleTaskDescription [\"Today you have to kill Spongebob\",\"Kill Spongebob\",\"Here he is!\"];", "docSyntax": "task setSimpleTaskDescription [description, descriptionShort, descriptionHUD]", "broadcasted": false, "description": "Attach descriptions to the simple task.", "server": false}, "safeZoneW": {"reviewLevel": 2, "syntax": "safeZoneW", "local": false, "example": "_screenWidth = safeZoneW;", "docSyntax": "safeZoneW", "broadcasted": false, "description": "", "server": false}, "leaveVehicle": {"reviewLevel": 2, "syntax": "<objGroup> leaveVehicle <objVehicle>", "local": true, "example": "_unit leaveVehicle _vehicle", "docSyntax": "group leaveVehicle vehicle", "broadcasted": false, "description": "Ceases the using of the vehicle by a group and unassigns vehicle from the group. If the argument is a single unit, the vehicle will be unassigned from unit's group. After vehicle is unassigned from the group, each individual crew member then unassigned from the vehicle.", "server": false}, "BIS_fnc_respect": {"reviewLevel": 2, "syntax": "[mode,param1,param2,param3] call BIS_fnc_respect", "local": false, "example": "", "docSyntax": "[mode, param1, param2, param3] call BIS_fnc_respect", "broadcasted": false, "description": "RESpect - The Effective Calculation Process.", "server": false}, "BIS_fnc_vectorDiff": {"reviewLevel": 2, "syntax": "[vector1,vector2] call BIS_fnc_vectorDiff", "local": false, "example": "_vectorDiff = [[1,2,3], [5,6,7]] call BIS_fnc_vectorDiff;", "docSyntax": "[vector1, vector2] call BIS_fnc_vectorDiff", "broadcasted": false, "description": "Returns a vector that is the difference between two vectors.", "server": false}, "BIS_fnc_dotProduct": {"reviewLevel": 2, "syntax": "[vector1,vector2] call BIS_fnc_dotProduct;", "local": false, "example": "[[1,2,3], [1,2,3]] call BIS_fnc_dotProduct; //Returns: 1*1+2*2+3*3 = 14", "docSyntax": "[vector1, vector2] call BIS_fnc_dotProduct;", "broadcasted": false, "description": "Dot product of two vectors.", "server": false}, "hcShowBar": {"reviewLevel": 2, "syntax": "hcShowBar <bool>", "local": false, "example": "hcShowBar true;", "docSyntax": "hcShowBar bool", "broadcasted": false, "description": "Shows or hides high command bar.", "server": false}, "BIS_fnc_returnNestedElement": {"reviewLevel": 2, "syntax": "[<array>,path] call BIS_fnc_returnNestedElement", "local": false, "example": "_array = [[1, 2], [3, 4]]; _value = [_array, [0, 1]] call BIS_fnc_returnNestedElement; // returns 2", "docSyntax": "[array, path] call BIS_fnc_returnNestedElement", "broadcasted": false, "description": "Function to return an item at a path in an array.", "server": false}, "BIS_fnc_customGPSvideo": {"reviewLevel": 2, "syntax": "[path,sizeCoef] spawn BIS_fnc_customGPSvideo", "local": false, "example": "_script = [\"\\ca\\video_pmc\\CP00_Reynolds_b.ogv\",1.04] spawn BIS_fnc_customGPSvideo; waitUntil {scriptDone _script};", "docSyntax": "[path,sizeCoef] spawn BIS_fnc_customGPSvideo", "broadcasted": false, "description": "Plays in-game video in GPS frame.", "server": false}, "weaponState": {"reviewLevel": 2, "syntax": "weaponState <objUnit>", "local": false, "example": "_wsPlayer = weaponState player; // [\"arifle_MXC_ACO_F\",\"arifle_MXC_ACO_F\",\"Single\",\"30Rnd_65x39_caseless_mag\",30]", "docSyntax": "weaponState unit", "broadcasted": false, "description": "Returns the currently selected weapon state for unit or vehicle.", "server": false}, "setCamUseTi": {"reviewLevel": 1, "syntax": "<bool> setCamUseTI modeIndex", "local": false, "example": "true setCamUseTI 1;", "docSyntax": "Bool setCamUseTI modeIndex", "broadcasted": false, "description": "Activates thermal vision. Mode index defines what sort of thermal vision it is:", "server": false}, "BIS_fnc_lowestNum": {"reviewLevel": 1, "syntax": "numbers call BIS_fnc_lowestNum", "local": false, "example": "_result = [7,2,1,5,10] call BIS_fnc_lowestNum; //_result = 1", "docSyntax": "numbers call BIS_fnc_lowestNum", "broadcasted": false, "description": "Returns the lowest number out of the passed set.", "server": false}, "copyToClipboard": {"reviewLevel": 2, "syntax": "copyToClipboard <string>", "local": false, "example": "copyToClipboard str _data;", "docSyntax": "copyToClipboard text", "broadcasted": false, "description": "Copy text string to the clipboard.", "server": false}, "debugFSM": {"reviewLevel": 1, "syntax": "FSMhandle debugFSM <bool>", "local": false, "example": "", "docSyntax": "FSMhandle debugFSM true", "broadcasted": false, "description": "Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version.", "server": false}, "unitsBelowHeight": {"reviewLevel": 1, "syntax": "units unitsBelowHeight height", "local": false, "example": "_allOnGroudUnits = group player unitsBelowHeight 10;", "docSyntax": "units unitsBelowHeight height", "broadcasted": false, "description": "Returns units in group/array below given height Above The Land (ATL). Current unit height ATL could be found with", "server": true}, "safeZoneXAbs": {"reviewLevel": 2, "syntax": "safeZoneXAbs", "local": false, "example": "_szX = safeZoneXAbs;", "docSyntax": "safeZoneXAbs", "broadcasted": false, "description": "Returns SafeZone left border (of all monitors, in case there's more than one)", "server": false}, "kbReact": {"reviewLevel": 2, "syntax": "<objUnit> kbReact [receiver,topicName,sentenceID(,argumentArray1,argumentArray2,\u00e2\u20ac\u00a6)]", "local": false, "example": "unit1 kbReact [unit2, \"topicName\", \"speech1\"]; will trigger as if unit1 said the sentence (via kbTell) // unit2's FSM will react accordingly.", "docSyntax": "person kbReact [receiver, topicName, sentenceID(, argumentArray1, argumentArray2, \u00e2\u20ac\u00a6)]", "broadcasted": false, "description": "Pass a non-verbal communication to the receiver. This command does as if the sentence was said and triggers the reaction scripts (AI FSM or player's conversation EH). See Conversations for more details.", "server": true}, "showHUD": {"reviewLevel": 2, "syntax": "showHUD <bool>", "local": false, "example": "showHUD false;", "docSyntax": "showHUD enable", "broadcasted": false, "description": "Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with drawIcon3D.", "server": false}, "BIS_fnc_transportService": {"example": "", "server": false, "broadcasted": false, "description": "/* File: transportService.sqf Description: Transportation system Parameter(s): 1: <object> unit allowed to use the transport system 2: <object> vehicle providing transport 3: <array> positions to be chosen by player; accepted strings are \"pickup\" and \"unload\", the second position is defined by the next paramter (OPTIONAL) 4: <position> (NEEDED ONLY IF PARAMETER #3 IS USED) Returns: N/A */ //MP framework init (used for move command given to transporter vehicle)", "local": false}, "addLiveStats": {"reviewLevel": 1, "syntax": "<objUnit> addLiveStats score", "local": false, "example": "player addLiveStats 10", "docSyntax": "unit addLiveStats score", "broadcasted": false, "description": "Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle). (Also available in OFPE & VBS2)", "server": false}, "triggerStatements": {"reviewLevel": 2, "syntax": "triggerStatements <objTrigger>", "local": false, "example": "_statements = triggerStatements someTrigger;", "docSyntax": "triggerStatements trigger", "broadcasted": false, "description": "Returns trigger statements in the form [cond, activ, desactiv]. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "server": true}, "ppEffectAdjust": {"reviewLevel": 1, "syntax": "effect ppEffectAdjust settings", "local": false, "example": "\"colorCorrections\" ppEffectAdjust [1, 1, -0.01, [0, 0, 0, 0], [1.5, 1, 1.2, 0.6], [0.199, 0.587, 0.114, 0]];", "docSyntax": "effect ppEffectAdjust settings", "broadcasted": false, "description": "Set post process effect parameters.", "server": false}, "BIS_fnc_inv": {"reviewLevel": 2, "syntax": "[<objUnit>] call BIS_fnc_inv", "local": false, "example": "[player] call BIS_fnc_inv;", "docSyntax": "[unit] call BIS_fnc_inv", "broadcasted": false, "description": "Returns inventory contents of given vehicle (unit). For vehicles it returns mounted gun and its ammo, not cargo weapons and ammo.", "server": false}, "scoreSide": {"reviewLevel": 2, "syntax": "scoreSide <objSide>", "local": false, "example": "_number = scoreSide west;", "docSyntax": "scoreSide side", "broadcasted": false, "description": "Returns score for the given side. MP Only.", "server": false}, "lockTurret": {"reviewLevel": 2, "syntax": "<objVehicle> lockTurret [turret path,lock]", "local": true, "example": "vehicleName lockTurret [[0,0], true];", "docSyntax": "vehicle lockTurret [turret path,lock]", "broadcasted": true, "description": "Lock the gunner position of the vehicle turret. This command must be executed where vehicle is local. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike lock command", "server": false}, "commandChat": {"reviewLevel": 1, "syntax": "<objUnit> commandChat chatText", "local": false, "example": "_soldierOne commandChat \"Show this text\";", "docSyntax": "unitName commandChat chatText", "broadcasted": false, "description": "Types text to the command radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "server": true}, "getObjectProxy": {"reviewLevel": 2, "syntax": "<objMap> getObjectProxy <object>", "local": false, "example": "(findDisplay 128 displayCtrl 51) getObjectProxy \"_unit_1\" // returns the object 'B 1-1-A:1 (Sean Johnson)'", "docSyntax": "map getObjectProxy object", "broadcasted": false, "description": "Return the proxy object associated with the given editor object.", "server": false}, "getGroupIconParams": {"reviewLevel": 2, "syntax": "getGroupIconParams <objGroup>", "local": false, "example": "_iconParams = getGroupIconParams group player;", "docSyntax": "getGroupIconParams group", "broadcasted": false, "description": "Returns group icons params used for command bar drawing such as color, text, scale, visibility, waypoint visibility, waypoint color.", "server": false}, "taskChildren": {"reviewLevel": 2, "syntax": "taskChildren <objTask>", "local": false, "example": "_children = taskChildren \"someTask\";", "docSyntax": "taskChildren task", "broadcasted": false, "description": "Return the child tasks of the specified task.", "server": false}, "BIS_fnc_customGPS": {"reviewLevel": 2, "syntax": "[path,deltaX,deltaY] call BIS_fnc_customGPS", "local": false, "example": "[\"ca\\missions_pmc\\data\\ui_gps_ca.paa\", -0.05, 0.16] call BIS_fnc_customGPS;", "docSyntax": "[path,deltaX,deltaY] call BIS_fnc_customGPS", "broadcasted": false, "description": "Replaces GPS frame.", "server": false}, "removeBackpack": {"reviewLevel": 2, "syntax": "removeBackpack <objUnit>", "local": true, "example": "removeBackpack this;", "docSyntax": "removeBackpack unit", "broadcasted": true, "description": "Removes unit's backpack", "server": false}, "getWeaponCargo": {"reviewLevel": 1, "syntax": "result = getWeaponCargo <object>", "local": false, "example": "_content = getWeaponCargo carName;", "docSyntax": "result = getWeaponCargo object", "broadcasted": false, "description": "Returns all weapons types and count from the cargo space", "server": true}, "waypointSpeed": {"reviewLevel": 1, "syntax": "waypointSpeed waypoint", "local": false, "example": "_speed = waypointSpeed [groupOne,1];", "docSyntax": "waypointSpeed waypoint", "broadcasted": false, "description": "Gets the waypoint speed. Possible values are:", "server": false}, "setOwner": {"reviewLevel": 1, "syntax": "<object> setOwner clientID", "local": false, "example": "_someObject setOwner 12;", "docSyntax": "object setOwner clientID", "broadcasted": false, "description": "From server machine, change the ownership of an object to a given client. Returns true if locality was changed.", "server": false}, "waypointCompletionRadius": {"reviewLevel": 1, "syntax": "waypointCompletionRadius waypoint", "local": false, "example": "_radius = waypointCompletionRadius [groupOne, 1];", "docSyntax": "waypointCompletionRadius waypoint", "broadcasted": false, "description": "Gets the radius around the waypoint where the waypoint is completed.", "server": false}, "addMagazineTurret": {"reviewLevel": 2, "syntax": "<objVehicle> addMagazineTurret [magazineName,turretPath,ammoCount]", "local": true, "example": "_tank addMagazineTurret [\"SmokeLauncherMag\",[0,0]];", "docSyntax": "vehicle addMagazineTurret [magazineName, turretPath, ammoCount]", "broadcasted": true, "description": "Adds a magazine to the turret. Use turret path [-1] for driver's turret. Note: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined. Since Arma 3 v1.55.133817 it is possible to set custom ammo count in added magazine.", "server": false}, "removeDrawIcon": {"reviewLevel": 2, "syntax": "<objMap> removeDrawIcon [<object>,<string> identifier]", "local": false, "example": "", "docSyntax": "map removeDrawIcon [object,string identifier]", "broadcasted": false, "description": "Removes an icon for an editor object.", "server": false}, "savingEnabled": {"reviewLevel": 2, "syntax": "savingEnabled", "local": false, "example": "if (savingEnabled) then { hint \"Saving is enabled!\"; };", "docSyntax": "savingEnabled", "broadcasted": false, "description": "Check if saving the game is enabled.", "server": false}, "nearRoads": {"reviewLevel": 1, "syntax": "<array> nearRoads radius", "local": false, "example": "_list = player nearRoads 50;", "docSyntax": "pos nearRoads radius", "broadcasted": false, "description": "Find the road segments within the circle of given radius.", "server": false}, "parsingNamespace": {"reviewLevel": 2, "syntax": "parsingNamespace", "local": false, "example": "parsingNamespace setVariable [\"var1\",101.23124]; _profVar1 = parsingNamespace getVariable \"var1\";", "docSyntax": "parsingNamespace", "broadcasted": false, "description": "Returns the global namespace attached to config parser.", "server": false}, "teams": {"reviewLevel": 2, "syntax": "teams", "local": false, "example": "_teams = teams;", "docSyntax": "teams", "broadcasted": false, "description": "Return a list of teams in the current mission.", "server": false}, "taskDescription": {"reviewLevel": 2, "syntax": "taskDescription <objTask>", "local": false, "example": "_taskDescArray = taskDescription _task;", "docSyntax": "taskDescription task", "broadcasted": false, "description": "Returns the sub-parts of the task description. The returned Array is in format [Task description, Task title, Task waypoint description].", "server": false}, "nearEntities": {"reviewLevel": 1, "syntax": "position nearEntities radius", "local": false, "example": "_list = player nearEntities 20; _list = ASLToAGL getPosASL player nearEntities 50; _list = player nearEntities [\"Man\", 1000]; _list = ASLToAGL getPosASL player nearEntities [\"LaserTarget\", 3000]; _list = player nearEntities [[\"Car\", \"Motorcycle\", \"Tank\"], 50]; _list = ASLToAGL getPosASL player nearEntities [[\"Man\", \"Air\", \"Car\", \"Motorcycle\", \"Tank\"], 200];", "docSyntax": "position nearEntities radius", "broadcasted": false, "description": "Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed.", "server": true}, "removeAllMPEventHandlers": {"reviewLevel": 1, "syntax": "objectName removeAllMPEventHandlers event", "local": false, "example": "player removeAllMPEventHandlers \"mpkilled\";", "docSyntax": "objectName removeAllMPEventHandlers event", "broadcasted": true, "description": "Removes all MP event handlers of the given type which were added by addMPEventHandler. Command needs to be executed only on one PC for MP event handler to be removed globally.", "server": true}, "BIS_fnc_invSlots": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_invSlots", "local": false, "example": "[ player ] call BIS_fnc_invSlots;//Returns [1,1,1,8,12,1,0,12] for \"B_T_Recon_TL_F\" class. Means: 1 x WeaponSlotPrimary, 1 x WeaponSlotHangun, ... , 12 x WeaponSlotInventory", "docSyntax": "[object] call BIS_fnc_invSlots", "broadcasted": false, "description": "Returns config inventory slots of given unit (total numbers of available slots in array).", "server": false}, "visiblePositionASL": {"reviewLevel": 2, "syntax": "visiblePositionASL <object>", "local": false, "example": "playerRenderedPosASL = visiblePositionASL player;", "docSyntax": "visiblePositionASL object", "broadcasted": false, "description": "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope.", "server": false}, "unlockAchievement": {"reviewLevel": 2, "syntax": "unlockAchievement <string>", "local": false, "example": "_isUnlocked = unlockAchievement \"someAchievement\";", "docSyntax": "unlockAchievement name", "broadcasted": false, "description": "Unlock the given achievement.", "server": false}, "BIS_fnc_showTime": {"reviewLevel": 2, "syntax": "[startDate,endDate] call BIS_fnc_showTime", "local": false, "example": "_dayStart = date; _dayStart set [3, 0];", "docSyntax": "[startDate, endDate] call BIS_fnc_showTime", "broadcasted": false, "description": "Shows time gap between two dates.", "server": false}, "taskParent": {"reviewLevel": 2, "syntax": "taskParent <objTask>", "local": false, "example": "_parent = taskParent \"someTask\";", "docSyntax": "taskParent task", "broadcasted": false, "description": "Return the parent task of the specified task.", "server": false}, "getFriend": {"reviewLevel": 2, "syntax": "side1 getFriend side2", "local": false, "example": "value = west getFriend east;", "docSyntax": "side1 getFriend side2", "broadcasted": false, "description": "Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly. See also Side relations.", "server": true}, "faction": {"reviewLevel": 2, "syntax": "faction <objUnit>", "local": false, "example": "_playersFaction = faction player;", "docSyntax": "faction unitName", "broadcasted": false, "description": "Gets unit faction. Factions are defined under CfgFactionClasses. If the given faction is not defined, the command returns empty string. Standard Factions include:", "server": true}, "currentWaypoint": {"reviewLevel": 1, "syntax": "currentWaypoint groupName", "local": false, "example": "_index = currentWaypoint group player;", "docSyntax": "currentWaypoint groupName", "broadcasted": false, "description": "Returns the index of the current waypoint contrary to misleading name. To determine the validity of the index, compare it to the waypoints count. If all waypoints are 'completed', then the index is 1 greater than the last valid index. If there are no waypoints, then the index is 0. By default, a group has 1 waypoint at their starting position, which is considered completed and so the currentWaypoint is 1.", "server": false}, "addMagazine": {"reviewLevel": 1, "syntax": "<objUnit> addMagazine magazineName", "local": true, "example": "player addMagazine \"30Rnd_556x45_STANAG\";", "docSyntax": "unitName addMagazine magazineName", "broadcasted": true, "description": "Adds a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled (or uniform/vest/bagpack are full in Arma3), any further addMagazine commands are ignored. If class of magazine does not exist, error message is printed in .rpt: player addMagazine \"dasdsa\"; // .rpt: Given magazine[dasdsa] not found)", "server": true}, "processDiaryLink": {"reviewLevel": 1, "syntax": "processDiaryLink link", "local": false, "example": "", "docSyntax": "processDiaryLink link", "broadcasted": false, "description": "Open the diary screen on the record specified by link.", "server": false}, "ASLToATL": {"reviewLevel": 2, "syntax": "ASLToATL <array>", "local": false, "example": "ASLToATL (getPosASL player) isEqualTo getPosATL player", "docSyntax": "ASLToATL pos", "broadcasted": false, "description": "Converts a position from PositionASL to PositionATL", "server": false}, "landResult": {"reviewLevel": 1, "syntax": "landResult helicopter", "local": false, "example": "_result = landResult BIS_heli;", "docSyntax": "landResult helicopter", "broadcasted": false, "description": "Return the result of helicopter landing position searching (performed, after land command).", "server": false}, "sideUnknown": {"reviewLevel": 2, "syntax": "sideUnknown", "local": false, "example": "//soldier1 and soldier2 of different sides and out of sight soldier1 reveal soldier2; hint str (soldier1 nearTargets 1000); //returns: [[[1557.96,5047.4,1.32402],\"SoldierWB\",UNKNOWN,0.0155183,soldier2,5]] soldier1 reveal [soldier2,1.5]; //returns: [[[1556.52,5050.08,1.32402],\"SoldierWB\",WEST,0.0211193,soldier2,5]]", "docSyntax": "sideUnknown", "broadcasted": false, "description": "The unknown side.", "server": false}, "BIS_fnc_distance2Dsqr": {"reviewLevel": 2, "syntax": "[Point_1,Point_2] call BIS_fnc_distance2Dsqr;", "local": false, "example": "[ player, soldier_1 ] call BIS_fnc_distance2Dsqr", "docSyntax": "[Point_1,Point_2] call BIS_fnc_distance2Dsqr;", "broadcasted": false, "description": "Returns the SQUARE of the distance between the two objects or positions \"as the crow flies\" (ignoring elevation).", "server": false}, "removeTeamMember": {"reviewLevel": 1, "syntax": "team removeTeamMember <objUnit>", "local": true, "example": "_team removeTeamMember _teamMember;", "docSyntax": "team removeTeamMember member", "broadcasted": false, "description": "Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.", "server": false}, "hostMission": {"reviewLevel": 2, "syntax": "hostMission [pConfig,pDisplay]", "local": false, "example": "hostMission [configMissionName, display];", "docSyntax": "hostMission [pConfig, pDisplay]", "broadcasted": false, "description": "Host the mp mission described by config class. Should be called as reaction to some UI action in some dialog. For example you can start a MP scenario from a button. It creates a host and takes you to the lobby with the scenario loaded. You need to provide the display which is active when the hostMission command is called.", "server": false}, "ctrlSetAutoScrollRewind": {"reviewLevel": 1, "syntax": "<uiControl> ctrlSetAutoScrollRewind set", "local": false, "example": "_ctrlGroup ctrlSetAutoScrollRewind true;", "docSyntax": "control ctrlSetAutoScrollRewind set", "broadcasted": false, "description": "Defines if scroll should rewind when auto-scroll reach end. Setter for ctrlAutoScrollRewind.", "server": false}, "enableIRLasers": {"reviewLevel": 1, "syntax": "thing enableIRLasers <scalar>", "local": true, "example": "(units group player) enableIRLasers true", "docSyntax": "thing enableIRLasers value", "broadcasted": true, "description": "Allows the AI to use IR lasers", "server": false}, "BIS_fnc_spawnGroup": {"reviewLevel": 1, "syntax": "[position,<objSide>,character details,relative positions,list of ranks,skill range,ammo count range,randomization controls,azimuth] call BIS_fnc_spawnGroup", "local": false, "example": "Spawn five random EAST units at aPos: [ getPos aPos, EAST, 5] call BIS_fnc_spawnGroup", "docSyntax": "[position, side, character details, relative positions, list of ranks, skill range, ammo count range, randomization controls, azimuth] call BIS_fnc_spawnGroup", "broadcasted": false, "description": "Function which handles the spawning of a dynamic group of characters. The composition of the group can be passed to the function. Alternatively a number can be passed and the function will spawn that amount of characters with a random type. A side's Center must have been created before a group may be spawned. Either by using createCenter or an editor placed (0% Probability of Presence is fine) unit of the appropriate side.", "server": false}, "BIS_fnc_invCodeToArray": {"reviewLevel": 2, "syntax": "[configCode] call BIS_fnc_invCodeToArray", "local": false, "example": "[ call compile getText (configfile >> \"CfgVehicles\" >> typeOf player >> \"weaponSlots\")] call BIS_fnc_invCodeToArray;//Can return [1,0,0,0,0,0,0,0]", "docSyntax": "[configCode] call BIS_fnc_invCodeToArray", "broadcasted": false, "description": "Converts inventory code (used in configs) to array with numbers for weapons and magazines (and their counts).", "server": false}, "ppEffectCommitted": {"reviewLevel": 1, "syntax": "ppEffectCommitted effect", "local": false, "example": "ppEffectCommitted \"colorCorrection\";", "docSyntax": "ppEffectCommitted effect", "broadcasted": false, "description": "Check whether given post process effect is committed", "server": false}, "diag_fpsMin": {"reviewLevel": 2, "syntax": "diag_fpsMin", "local": false, "example": "_minfps = diag_fpsMin;", "docSyntax": "diag_fpsMin", "broadcasted": false, "description": "Returns minimal framerate. Calculated from the longest frame over last 16 frames.", "server": false}, "ppEffectCreate": {"reviewLevel": 2, "syntax": "ppEffectCreate [<string>,priority]", "local": false, "example": "_ppGrain = ppEffectCreate [\"filmGrain\", 2005];", "docSyntax": "ppEffectCreate [name, priority]", "broadcasted": false, "description": "Creates Post process effects specified by effect name and priority. Supported effects are:", "server": false}, "setMarkerAlpha": {"reviewLevel": 1, "syntax": "marker setMarkerAlpha alpha", "local": false, "example": "\"my_marker\" setMarkerAlpha 0.5;", "docSyntax": "marker setMarkerAlpha alpha", "broadcasted": true, "description": "Sets the marker alpha. The marker is modified on all computers in a network session.", "server": false}, "BIS_fnc_magnitudeSqr": {"reviewLevel": 1, "syntax": "vector call BIS_fnc_magnitudeSqr", "local": false, "example": "[5,3] call BIS_fnc_magnitudeSqr;", "docSyntax": "vector call BIS_fnc_magnitudeSqr", "broadcasted": false, "description": "Returns the square magnitude of an array of numbers. The vector can have any number of elements.", "server": false}, "reversedMouseY": {"reviewLevel": 2, "syntax": "reversedMouseY", "local": false, "example": "if (reversedMouseY) then { hint \"Dude!\" };", "docSyntax": "reversedMouseY", "broadcasted": false, "description": "Returns true if mouse vertical axe is inverted.", "server": false}, "BIS_fnc_getLineDist": {"reviewLevel": 2, "syntax": "[start1,length1,start2,length2] call BIS_fnc_getLineDist", "local": false, "example": "_distance = [0,5,15,20] call BIS_fnc_getLineDist; // returns 10", "docSyntax": "[start1, length1, start2, length2] call BIS_fnc_getLineDist", "broadcasted": false, "description": "Return the distance between two sections of a virtual straight line.", "server": false}, "BIS_fnc_variableSpaceRemove": {"reviewLevel": 2, "syntax": "[<object>,varName,element,global,inArray] call BIS_fnc_variableSpaceRemove", "local": false, "example": "[ player,\"someVar\",1337,true ] call BIS_fnc_variableSpaceRemove;", "docSyntax": "[object,varName,element,global,inArray] call BIS_fnc_variableSpaceRemove", "broadcasted": false, "description": "Remove element from variable from someone's variable space.", "server": false}, "disableTIEquipment": {"reviewLevel": 1, "syntax": "<objVehicle> disableTIEquipment state", "local": false, "example": "vehicle player disableTIEquipment true;", "docSyntax": "vehicle disableTIEquipment state", "broadcasted": true, "description": "Disables TI (Thermal Imaging) equipment for given vehicle. In older versions of Arma this command would also disable NV (Night Vision), but since Arma 3 v1.52.132676 this command disables only TI. Use disableNVGEquipment to disable NV.", "server": true}, "createAgent": {"reviewLevel": 2, "syntax": "createAgent [type,position,markers,placement,special]", "local": false, "example": "_agent = createAgent [\"SoldierWB\", position player, [], 0, \"FORM\"];", "docSyntax": "createAgent [type, position, markers, placement, special]", "broadcasted": false, "description": "Creates an (independent) agent (person) of the given type (type is a name of a subclass of CfgVehicles). An agent does not have a group or leader or the standard soldier FSM associated with it -- for instance, an enemy soldier spawned as an agent has limited AI and will stand stupidly when fired upon -- which can be useful to limit the amount of AI processing being done in a mission with very large numbers of \"AI\". If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The unit is placed inside a circle with this position as its center and placement as its radius.", "server": false}, "removeMagazineTurret": {"reviewLevel": 2, "syntax": "<objVehicle> removeMagazineTurret [magazineName,turretPath]", "local": true, "example": "vehicle player removeMagazineTurret [\"60rnd_cmflaremagazine\",[-1]]", "docSyntax": "vehicle removeMagazineTurret [magazineName, turretPath]", "broadcasted": true, "description": "Removes the magazine from the turret. Use turret path [-1] for driver's turret. Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.", "server": false}, "setGroupIconsVisible": {"reviewLevel": 2, "syntax": "setGroupIconsVisible [showOnMap,showOnHUD]", "local": false, "example": "setGroupIconsVisible [true, true]; // Show markers on map and on player HUD setGroupIconsVisible [true, false]; // Show only 2D setGroupIconsVisible [false, false]; // Don't show", "docSyntax": "setGroupIconsVisible [showOnMap, showOnHUD]", "broadcasted": false, "description": "Sets if group icons are visible.", "server": false}, "evalObjectArgument": {"reviewLevel": 2, "syntax": "<objMap> evalObjectArgument [<object>,argument]", "local": false, "example": "// returns string \"[1009.0351, 1319.4928]\" (findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"] // returns array [1009.0351, 1319.4928] (findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]", "docSyntax": "map evalObjectArgument [object, argument]", "broadcasted": false, "description": "Return argument in mission editor of a given object.", "server": false}, "owner": {"reviewLevel": 2, "syntax": "owner <object>", "local": false, "example": "_clientID = owner _someobject;", "docSyntax": "owner object", "broadcasted": false, "description": "On server machine, returns the ID of the client where the object is local. Otherwise returns 0. For use on clients clientOwner command is available. To find out the owner of a Group, use groupOwner.", "server": true}, "switchAction": {"reviewLevel": 1, "syntax": "soldier switchAction action", "local": false, "example": "soldierOne switchAction \"SitDown\"", "docSyntax": "soldier switchAction action", "broadcasted": false, "description": "When used on a person, the given action is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck.", "server": false}, "getBackpackCargo": {"reviewLevel": 1, "syntax": "result = getBackpackCargo <object>", "local": false, "example": "_content = getBackpackCargo carName;", "docSyntax": "result = getBackpackCargo object", "broadcasted": false, "description": "Returns all backpack types and count from the cargo space", "server": false}, "ppEffectCommit": {"reviewLevel": 1, "syntax": "effect ppEffectCommit commit", "local": false, "example": "\"colorCorrection\" ppEffectCommit 3;", "docSyntax": "effect ppEffectCommit commit", "broadcasted": false, "description": "Commit post process effect in given time.", "server": false}, "publicVariableClient": {"reviewLevel": 1, "syntax": "clientID publicVariableClient varName", "local": false, "example": "3 publicVariableClient \"CTFscoreOne\";", "docSyntax": "clientID publicVariableClient varName", "broadcasted": false, "description": "Send the variable value to the client computer - same limitations regarding variable type as publicVariable. The Client ID is the temporary ID given to a connected client for that session. You can find out this ID with the owner command (using it on a player's character, for example, will give you that players client ID).", "server": false}, "hcAllGroups": {"reviewLevel": 2, "syntax": "hcAllGroups <objUnit>", "local": false, "example": "hcAllGroups player;", "docSyntax": "hcAllGroups unit", "broadcasted": false, "description": "Returns selected groups in high command.", "server": false}, "lnbSetData": {"reviewLevel": 2, "syntax": "lnbSetData [<scalar>,[<scalar>,<scalar>],data]", "local": true, "example": "_ctrl lnbSetData [ [0,0],\"#1\"];", "docSyntax": "lnbSetData [idc, [row, column], data]", "broadcasted": false, "description": "Sets the additional text (invisible) in the item with the given position of the 2D listbox.", "server": false}, "show3DIcons": {"reviewLevel": 2, "syntax": "<objMap> show3DIcons <bool>", "local": false, "example": "", "docSyntax": "map show3DIcons bool", "broadcasted": false, "description": "Toggle the drawing of 3D icons.", "server": false}, "BIS_fnc_findSafePos": {"reviewLevel": 2, "syntax": "[center,minDist,maxDist,objDist,waterMode,maxGrad,shoreMode,blacklistPos,defaultPos] call BIS_fnc_findSafePos", "local": false, "example": "Find position minimum 1m from from player but not further than 150m, not closer than 3m to any other object, not in the water, maximum gradient of 20, not on the shoreline: _pos = [player, 1, 150, 3, 0, 20, 0] call BIS_fnc_findSafePos;", "docSyntax": "[center, minDist, maxDist, objDist, waterMode, maxGrad, shoreMode, blacklistPos, defaultPos] call BIS_fnc_findSafePos", "broadcasted": false, "description": "This function generates position on a map according to several given parameters (see diagram):", "server": false}, "lnbAddArray": {"reviewLevel": 2, "syntax": "lnbAddArray [<scalar>,[[[<string>,<string>],[<scalar>,..],[data,..]],[[<string>,<string>],[<scalar>,..],[data,..]],]]", "local": true, "example": "lnbAddArray [102,[[[\"#1\"],[1],[\"#1\"]]]];", "docSyntax": "lnbAddArray [idc, [[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]]", "broadcasted": false, "description": "Adds list of rows of strings.", "server": false}, "drawLink": {"reviewLevel": 2, "syntax": "<objMap> drawLink [from,to,param type,line type,<scalar>]", "local": false, "example": "", "docSyntax": "map drawLink [from,to,param type,line type,color]", "broadcasted": false, "description": "The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW.", "server": false}, "failMission": {"reviewLevel": 1, "syntax": "failMission endtype", "local": false, "example": "failMission \"LOSER\";", "docSyntax": "failMission endtype", "broadcasted": false, "description": "Finish the mission. If the server is set to run persistent mission, failMission will not end the mission when last player gets kicked to the lobby. Use endMission to end the mission. The end type can be:", "server": false}, "laserTarget": {"reviewLevel": 2, "syntax": "laserTarget <objUnit>", "local": false, "example": "_target = laserTarget gunner heli;", "docSyntax": "laserTarget unitName", "broadcasted": false, "description": "Returns laser target object created by given unit (gunner in vehicle or on foot) when using \"Laserdesignator\" or another laser targeting device. Laser target object is global and can be retrieved from any PC.", "server": true}, "surfaceNormal": {"reviewLevel": 1, "syntax": "surfaceNormal position", "local": false, "example": "_normal = surfaceNormal [300, 500];", "docSyntax": "surfaceNormal position", "broadcasted": false, "description": "Returns surface normal on given position.", "server": false}, "restartEditorCamera": {"reviewLevel": 2, "syntax": "restartEditorCamera <objMap>", "local": false, "example": "", "docSyntax": "restartEditorCamera map", "broadcasted": false, "description": "Restarts the mission editor camera (if it was deleted by a script,for example).", "server": false}, "ATLToASL": {"reviewLevel": 2, "syntax": "ATLToASL <array>", "local": false, "example": "ATLToASL (getPosATL player) isEqualTo getPosASL player", "docSyntax": "ATLToASL pos", "broadcasted": false, "description": "Converts a position from PositionATL to PositionASL", "server": false}, "ctrlMapCursor": {"reviewLevel": 2, "syntax": "<uiControl> ctrlMapCursor [defaultCursor,newCursor]", "local": false, "example": "_map ctrlMapCursor [\"Track\", \"Arrow\"];", "docSyntax": "control ctrlMapCursor [defaultCursor, newCursor]", "broadcasted": false, "description": "Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor. If the specified cursor does not exist, the default is used and no error is produced. ( NOT in case of ArmA 3. Using an empty string will result in an error: \"No entry 'bin\\config.bin/CfgWrapperUI/Cursors.' ). The cursor is the name of a config entry from CfgWrapperUI / Cursors. This command has the following specifics:", "server": false}, "BIS_fnc_nearestNum": {"reviewLevel": 2, "syntax": "[values,<scalar>] call BIS_fnc_nearestNum", "local": false, "example": "_closestValueTo4 = [[1,5,10], 4] call BIS_fnc_nearestNum; // returns 5", "docSyntax": "[values, value] call BIS_fnc_nearestNum", "broadcasted": false, "description": "Returns the provided set closest number to the target number.", "server": false}, "kbAddDatabase": {"reviewLevel": 1, "syntax": "<objUnit> kbAddDatabase fileName", "local": false, "example": "_hasBeenAdded = _unit kbAddDatabase \"chat.txt\"", "docSyntax": "person kbAddDatabase fileName", "broadcasted": false, "description": "Register knowledge base database to given person. See Conversations for more details.", "server": false}, "setPosASL2": {"reviewLevel": 2, "syntax": "<object> setPosASL2 <array>", "local": false, "example": "player setPosASL2 [getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2]", "docSyntax": "obj setPosASL2 pos", "broadcasted": false, "description": "Sets the object position. The pos array uses the PositionASL format. The version of the command does not offset based on object center.", "server": false}, "BIS_fnc_sceneCreateSceneTrigger": {"example": "", "server": false, "broadcasted": false, "description": "/******************************************************************************* * * version: 1.0 * name: * description: create trigger for scene which can interrupt scene with name passed during creating the trigger * parameters: described bellow *", "local": false}, "newOverlay": {"reviewLevel": 1, "syntax": "<objMap> newOverlay config", "local": false, "example": "", "docSyntax": "map newOverlay config", "broadcasted": false, "description": "Creates the new overlay dialog for the specified type of overlay.", "server": false}, "BIS_fnc_geometricMean": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_geometricMean", "local": false, "example": "[0,1,3] call BIS_fnc_geometricMean;//Returns 1.73205", "docSyntax": "array call BIS_fnc_geometricMean", "broadcasted": false, "description": "Returns the geometric mean of an array of numbers.", "server": false}, "BIS_fnc_zzRotate": {"example": "", "server": false, "broadcasted": false, "description": "/********************************************************************* Version: 1.6 Name: zzRotate DESCRIPTION: Rotate objects around given center about given angle PARAMETERS: center: [x,y,z]; angle: number; participants: [object, initPosX, initPosY, initPosZ, angle] RETURNED VALUE: Nothing **********************************************************************/", "local": false}, "canUnloadInCombat": {"reviewLevel": 2, "syntax": "canUnloadInCombat <objVehicle>", "local": false, "example": "if (canUnloadInCombat _vehicle) then {...};", "docSyntax": "canUnloadInCombat vehicle", "broadcasted": false, "description": "Check if cargo of this vehicle want to get out when in combat.", "server": false}, "setWind": {"reviewLevel": 2, "syntax": "setWind [x,y,forced]", "local": false, "example": "setWind [10, 10, true];", "docSyntax": "setWind [x, y, forced]", "broadcasted": true, "description": "Set current (forced == false) or permanent (forced == true) wind vector.", "server": false}, "endLoadingScreen": {"reviewLevel": 2, "syntax": "endLoadingScreen", "local": false, "example": "startLoadingScreen [\"Loading My Mission\"]; //Batch of code //Batch of code //Batch of code progressLoadingScreen 0.5; //Batch of code //Batch of code //Batch of code endLoadingScreen;", "docSyntax": "endLoadingScreen", "broadcasted": false, "description": "Finishes loading screen started by startLoadingScreen.", "server": false}, "setEditorObjectScope": {"reviewLevel": 2, "syntax": "<objMap> setEditorObjectScope [objects,editorType,condition,scope,subordinatesAlso]", "local": false, "example": "_map setEditorObjectScope [ [],\"vehicle\", \"side effectiveCommander _x\u00c2\u00a0!= side player\", \"HIDE\", false]", "docSyntax": "map setEditorObjectScope [objects, editorType, condition, scope, subordinatesAlso]", "broadcasted": false, "description": "This command defines the level of access a user has to editor objects. \"objects\" is an array of either Editor Objects (eg [\"_unit_0\"]) or actual Game Objects (eg [player]). If the array is empty then the command will automatically parse all editor objects. \"editorType\" is the editor type to effect (eg \"unit\", \"vehicle\", \"center\") or \"\" for all types. \"condition\" is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. \"_x\" can be used in the string as reference to the ingame representation of the currently processed array member. \"scope\" is one of \"HIDE\", \"VIEW\", \"SELECT\", \"LINKTO\", \"LINKFROM\", \"ALLNODRAG\", \"ALLNOTREE\", \"ALLNOCOPY\", \"ALLNOSELECT\" or \"ALL\". \"subordinatesAlso\" is a boolean value. If true then subordinates in the editor will be assigned the same scope as the parent.", "server": false}, "moveObjectToEnd": {"reviewLevel": 2, "syntax": "<objMap> moveObjectToEnd <object>", "local": false, "example": "", "docSyntax": "map moveObjectToEnd object", "broadcasted": false, "description": "Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects).", "server": false}, "BIS_fnc_dirTo": {"reviewLevel": 2, "syntax": "[param1,param2] call BIS_fnc_dirTo", "local": false, "example": "sets unit1 in the direction of unit2 unit1 setDir [unit1, unit2] call BIS_fnc_dirTo", "docSyntax": "[param1, param2] call BIS_fnc_dirTo", "broadcasted": false, "description": "Function which returns vector direction from pos1 to pos2.", "server": false}, "textLogFormat": {"reviewLevel": 2, "syntax": "textLogFormat [format,arg1,arg2,...]", "local": false, "example": "", "docSyntax": "textLogFormat [format, arg1, arg2, ...]", "broadcasted": false, "description": "Debugging output.", "server": false}, "removeSimpleTask": {"reviewLevel": 2, "syntax": "<objUnit> removeSimpleTask <objTask>", "local": false, "example": "player removeSimpleTask _tskKillSpongebob", "docSyntax": "person removeSimpleTask task", "broadcasted": false, "description": "Remove a simple task from the list of simple tasks.", "server": false}, "ctrlSetAutoScrollSpeed": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetAutoScrollSpeed <scalar>", "local": false, "example": "_ctrlGroup ctrlSetAutoScrollSpeed 0.1;", "docSyntax": "control ctrlSetAutoScrollSpeed speed", "broadcasted": false, "description": "Sets number of second required to scroll to next line. If speed < 0, auto-scroll is disabled. Setter for ctrlAutoScrollSpeed.", "server": false}, "getTerrainHeightASL": {"reviewLevel": 1, "syntax": "getTerrainHeightASL position", "local": false, "example": "_height = getTerrainHeightASL (position player);", "docSyntax": "getTerrainHeightASL position", "broadcasted": false, "description": "Returns the terrain height above the sea for the given position.", "server": false}, "BIS_fnc_arrayFindDeep": {"reviewLevel": 2, "syntax": "[<array>,<scalar>] call BIS_fnc_arrayFindDeep", "local": false, "example": "[ [1,2,3,4,5], 3 ] call BIS_fnc_arrayFindDeep;//Returns [2]", "docSyntax": "[array,value] call BIS_fnc_arrayFindDeep", "broadcasted": false, "description": "Searches an array for a specific value and returns its index.", "server": false}, "openMap": {"reviewLevel": 1, "syntax": "openMap show", "local": false, "example": "openMap true;", "docSyntax": "openMap show", "broadcasted": false, "description": "Shows in-game map. If forced, cannot be closed.", "server": false}, "ctrlSetAutoScrollDelay": {"reviewLevel": 2, "syntax": "<uiControl> ctrlSetAutoScrollDelay <scalar>", "local": false, "example": "_ctrlGroup ctrlSetAutoScrollDelay 5;", "docSyntax": "control ctrlSetAutoScrollDelay delay", "broadcasted": false, "description": "Sets number of second before auto-scroll starts/rewinds. Setter for ctrlAutoScrollDelay.", "server": false}, "updateObjectTree": {"reviewLevel": 2, "syntax": "updateObjectTree <objMap>", "local": false, "example": "", "docSyntax": "updateObjectTree map", "broadcasted": false, "description": "Update the editor object tree.", "server": false}, "addBackpack": {"reviewLevel": 1, "syntax": "<objUnit> addBackpack packClassName", "local": true, "example": "this addBackpack \"TK_RPG_Backpack_EP1\";", "docSyntax": "unit addBackpack packClassName", "broadcasted": true, "description": "Adds a backpack for a unit. If a unit already has a backpack, the old backpack will be placed on the ground under the unit. Classname list of available backpacks\u00c2\u00a0:", "server": false}, "BIS_fnc_getFactions": {"reviewLevel": 2, "syntax": "[parameter] call BIS_fnc_getFactions", "local": false, "example": "call BIS_fnc_getFactions; // returns all factions", "docSyntax": "[parameter] call BIS_fnc_getFactions", "broadcasted": false, "description": "Gets list and sides of current factions.", "server": false}, "BIS_fnc_commsMenuToggleAvailability": {"example": "", "server": false, "broadcasted": false, "description": "/* File: fn_commsMenuToggleAvailability.sqf Description: Enables or disables certain sections of the global communications menu. Parameter(s): _this select 0: index (Scalar) or list of indices (Array of Scalars) or section name (String) \"som\" - SecOps section \"wf\" - Warfare section _this select 1: mode (Scalar) 0 - disable 1 - enable Returns: Success flag (Boolean)", "local": false}, "teamMember": {"reviewLevel": 2, "syntax": "teamMember <objUnit>", "local": false, "example": "_agent = teamMember player;", "docSyntax": "teamMember person", "broadcasted": false, "description": "Return an agent for given person.", "server": false}, "allUnits": {"reviewLevel": 2, "syntax": "allUnits", "local": false, "example": "{_x setDamage 0.5; _x groupChat \"Braaains\"} forEach allUnits;", "docSyntax": "allUnits", "broadcasted": false, "description": "Return a list of all units (all persons except agents) outside and inside vehicles, created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. Dead units and units awaiting for respawn are also excluded.", "server": false}, "getElevationOffset": {"reviewLevel": 2, "syntax": "getElevationOffset", "local": false, "example": "_offset = getElevationOffset;", "docSyntax": "getElevationOffset", "broadcasted": false, "description": "Returns the map elevation offset from [map]/config.cpp. Returns 0 if there's no elevationOffset defined in the config of the current world.", "server": false}, "removeDrawLinks": {"reviewLevel": 2, "syntax": "<objMap> removeDrawLinks [from,param type]", "local": false, "example": "", "docSyntax": "map removeDrawLinks [from,param type]", "broadcasted": false, "description": "Remove all drawn links for the given editor object for the given editor,object type. Pass an empty string as param type to remove all draw,links for an object.", "server": false}, "taskHint": {"reviewLevel": 2, "syntax": "taskHint [hintText,[r,g,b,a],icon]", "local": false, "example": "taskhint [\"Task failed!\\nBad job!\", [1, 0, 0, 1], \"taskFailed\"]", "docSyntax": "taskHint [hintText, [r, g, b, a], icon]", "broadcasted": false, "description": "Shows info about new, changed or failed task. The text can contain several lines. \\n is used to indicate the end of a line.", "server": false}, "taskResult": {"reviewLevel": 2, "syntax": "taskResult <objTask>", "local": false, "example": "taskResult (player createSimpleTask [\"NewTask\"]);", "docSyntax": "taskResult task", "broadcasted": false, "description": "Send a result of the task to the task sender.", "server": false}, "boundingCenter": {"reviewLevel": 2, "syntax": "boundingCenter <object>", "local": false, "example": "_center = boundingCenter TruckOne", "docSyntax": "boundingCenter object", "broadcasted": false, "description": "Returns the position of original (loaded) center of object in model coordinates.", "server": false}, "camTarget": {"reviewLevel": 2, "syntax": "camTarget <objCamera>", "local": false, "example": "_someObject = camTarget _camera;", "docSyntax": "camTarget camera", "broadcasted": false, "description": "Returns camera's target.", "server": false}, "productVersion": {"reviewLevel": 2, "syntax": "productVersion", "local": false, "example": "hint str productVersion; //would return [\"Arma 2 OA\", \"arma2oa\", 162, 95208] on Arma 2 OA 1.62.95208", "docSyntax": "productVersion", "broadcasted": false, "description": "Returns the product's friendly name, identifier and version. In Arma 3 it also returns branch identifier, whether or not the game was launched using mods, and the platform.", "server": false}, "BIS_fnc_sceneIntruderDetector": {"example": "", "server": false, "broadcasted": false, "description": "/************************************************************************************************************************** Version: 1.0 Name: Intruder detector during scene DESCRIPTION: Checks if there are intruders during scene. All intruders during scene will be disabled if they will get into the detector trigger. Position of trigger is default on player, and default radius is [60,60] Checking is deactivated by passing BIS_sceneIntruderDetectorLogic setVariable [\"_detectInProgress\", false] PARAMETERS: _centerOfScene: POSITION - trigger position _Radius: ARRAY: [_xRadius, _yRadius] - size of trigger RETURNED VALUE: nothing ****************************************************************************************************************************/", "local": false}, "addEditorObject": {"reviewLevel": 2, "syntax": "<objMap> addEditorObject [type,[name1,value1,...],subtype class]", "local": false, "example": "", "docSyntax": "map addEditorObject [type,[name1,value1,...],subtype class]", "broadcasted": false, "description": "Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject.,Subtype class is optional.", "server": false}, "lnbData": {"reviewLevel": 2, "syntax": "lnbData [<scalar>,[<scalar>,<scalar>]]", "local": true, "example": "_ctrl lnbData [ lnbCurSelRow _ctrl,0]; //\"#1\"", "docSyntax": "lnbData [idc, [row, column]]", "broadcasted": false, "description": "Returns the additional text (invisible) in an item with the given position of the 2D listbox.", "server": false}, "waypointTimeout": {"reviewLevel": 1, "syntax": "waypointTimeout waypoint", "local": false, "example": "waypointTimeout [groupOne,1]", "docSyntax": "waypointTimeout waypoint", "broadcasted": false, "description": "Gets the waypoint timeout values.", "server": false}, "libraryCredits": {"reviewLevel": 2, "syntax": "libraryCredits", "local": false, "example": "hint str libraryCredits; // as in Arma2 OA 1.62.95208", "docSyntax": "libraryCredits", "broadcasted": false, "description": "Returns the credits for the libraries used by the game.", "server": false}, "BIS_fnc_diagAnim": {"reviewLevel": 2, "syntax": "[<object>] call BIS_fnc_diagAnim", "local": false, "example": "call BIS_fnc_diagAnim;", "docSyntax": "[target] call BIS_fnc_diagAnim", "broadcasted": false, "description": "Displays or logs animation states:", "server": false}, "isForcedWalk": {"reviewLevel": 2, "syntax": "isForcedWalk <objUnit>", "local": false, "example": "_bool = isForcedWalk player;", "docSyntax": "isForcedWalk unitName", "broadcasted": false, "description": "Returns true if player is forced to walk with forceWalk.", "server": false}, "BIS_fnc_inAngleSector": {"reviewLevel": 2, "syntax": "[center,centerAngle,sectorWidth,position] call BIS_fnc_inAngleSector", "local": false, "example": "[ position player, getDir player, 30, position enemy_tank ] call BIS_fnc_inAngleSector;", "docSyntax": "[center, centerAngle, sectorWidth, position] call BIS_fnc_inAngleSector", "broadcasted": false, "description": "Checks if a position lies within an angle sector.", "server": false}, "BIS_fnc_returnParents": {"reviewLevel": 2, "syntax": "[config,onlyClassNames] call BIS_fnc_returnParents", "local": false, "example": "[ configFile >> \"CfgVehicles\" >> \"Land_FirePlace_F\", true ] call BIS_fnc_returnParents; //Returns [\"Land_FirePlace_F\",\"House_F\",\"House\",\"HouseBase\",\"NonStrategic\",\"Building\",\"Static\",\"All\"]", "docSyntax": "[config, onlyClassNames] call BIS_fnc_returnParents", "broadcasted": false, "description": "Returns list of all parent classes.", "server": false}, "diag_tickTime": {"reviewLevel": 2, "syntax": "diag_tickTime", "local": false, "example": "_start = diag_tickTime; //code _stop = diag_tickTime; diag_log format [\"%1\",_stop - _start];", "docSyntax": "diag_tickTime", "broadcasted": false, "description": "Real time spent from the start of the game. Expressed in fractions of second. Resolution of 1 tick is 1 ms.", "server": false}, "kbHasTopic": {"reviewLevel": 1, "syntax": "<objUnit> kbHasTopic topicName", "local": false, "example": "_obiHasTopic = player kbHasTopic \"helloThereGeneralK\";", "docSyntax": "person kbHasTopic topicName", "broadcasted": false, "description": "Check if conversation topic was registered to given person. See Conversations for more details.", "server": false}, "groupSelectUnit": {"reviewLevel": 2, "syntax": "<objUnit> groupSelectUnit [<objUnit>,select]", "local": false, "example": "After leaving menu, deselect all units (command menu is not opened -> no selection){ player groupSelectUnit [_x, false]; } forEach (groupSelectedUnits player);", "docSyntax": "player groupSelectUnit [unit, select]", "broadcasted": false, "description": "Selects a unit from player's group. If player is the leader, the effect of this command is similar to player pressing F1, F2, F3... buttons to highlight units in his squad, after which the unit command menu is shown. If leader is AI, player will get usual communication menu to interact with the leader.", "server": false}, "addWeaponCargoGlobal": {"reviewLevel": 1, "syntax": "vehicleName addWeaponCargoGlobal [weaponName,count]", "local": false, "example": "_truck addWeaponCargoGlobal[\"M16\",5];", "docSyntax": "vehicleName addWeaponCargoGlobal [weaponName, count]", "broadcasted": true, "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. MP Synchronized", "server": true}, "BIS_fnc_miscanim": {"reviewLevel": 2, "syntax": "[anim,person1,<objVehicle>,person2,isOnBoard,<scalar>,doMove] call BIS_fnc_miscanim", "local": false, "example": "[\"twoTalking1\", unit1, myCar, unit2] call BIS_fnc_miscanim;", "docSyntax": "[anim, person1, vehicle, person2, isOnBoard, altitude, doMove] call BIS_fnc_miscanim", "broadcasted": false, "description": "Setting up the animations with correct positions for object - choose correct performance. For ex. fixingTowingTractor (read the description)", "server": false}, "lnbText": {"reviewLevel": 2, "syntax": "<uiControl> lnbText [<scalar>,<scalar>]", "local": true, "example": "_ctrl lnbText [0,0];", "docSyntax": "control lnbText [row,column]", "broadcasted": false, "description": "Returns the shown text in the item with the given position of the given 2D listbox.", "server": false}, "lockedCargo": {"reviewLevel": 1, "syntax": "<objVehicle> lockedCargo cargoIndex", "local": false, "example": "_result = vehicleName lockedCargo 0;", "docSyntax": "vehicle lockedCargo cargoIndex", "broadcasted": false, "description": "Check whether cargo position of the vehicle is locked.", "server": false}, "say2D": {"reviewLevel": 1, "syntax": "from say2D sound", "local": false, "example": "", "docSyntax": "from say2D sound", "broadcasted": false, "description": "Plays given sound in 2D", "server": true}, "nearestLocationWithDubbing": {"reviewLevel": 1, "syntax": "nearestLocationWithDubbing position", "local": false, "example": "", "docSyntax": "nearestLocationWithDubbing position", "broadcasted": false, "description": "Find the nearest location (to the given position) having it speech non-empty.", "server": false}, "BIS_fnc_randomNum": {"reviewLevel": 2, "syntax": "[min,max] call BIS_fnc_randomNum", "local": false, "example": "[1,3] call BIS_fnc_randomNum; // can be 1, 3 or any value in-between", "docSyntax": "[min, max] call BIS_fnc_randomNum", "broadcasted": false, "description": "Returns a random (float) number between the two passed numbers (inclusive). The order of parameters doesn't matter: it can be [min, max] or [max, min].", "server": false}, "lnbSetPicture": {"reviewLevel": 2, "syntax": "lnbSetPicture [<scalar>,[<scalar>,<scalar>],PicturePathOrPictureName]", "local": true, "example": "lnbSetPicture [1, [0, 0], \"Picture\"];", "docSyntax": "lnbSetPicture [IDC, [Row, Column], PicturePathOrPictureName]", "broadcasted": false, "description": "Sets the picture in the item with the given position of the 2D listbox.", "server": false}, "safeZoneX": {"reviewLevel": 1, "syntax": "SafeZoneX", "local": false, "example": "_screenLeftBorderX = safeZoneX; // returns a float value < 0", "docSyntax": "SafeZoneX", "broadcasted": false, "description": "", "server": false}, "triggerActivation": {"reviewLevel": 2, "syntax": "triggerActivation <objTrigger>", "local": false, "example": "_activation = triggerActivation someTrigger", "docSyntax": "triggerActivation trigger", "broadcasted": false, "description": "Returns trigger activation in the form [by, type, repeating]. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "server": true}, "priority": {"reviewLevel": 2, "syntax": "priority <objTask>", "local": false, "example": "_prioTsk01 = priority task01", "docSyntax": "priority task", "broadcasted": false, "description": "Return the priority of the task.", "server": false}, "addResources": {"reviewLevel": 1, "syntax": "teamMember addResources [resource1,resource2,...]", "local": false, "example": "", "docSyntax": "teamMember addResources [resource1, resource2, ...]", "broadcasted": false, "description": "Adds resources to a team member.", "server": true}, "uiNamespace": {"reviewLevel": 2, "syntax": "uiNamespace", "local": false, "example": "uiNamespace setVariable [\"LIB_interruptDisplay\", _display];", "docSyntax": "uiNamespace", "broadcasted": false, "description": "Returns the global namespace attached to user interface.", "server": false}, "hintSilent": {"reviewLevel": 2, "syntax": "hintSilent <string>", "local": false, "example": "hintSilent \"You texte comes here\u00c2\u00a0!\"", "docSyntax": "hintSilent text", "broadcasted": false, "description": "Same as hint, but without a sound.", "server": false}, "simpleTasks": {"reviewLevel": 2, "syntax": "simpleTasks <objUnit>", "local": false, "example": "_tasks = simpleTasks player;", "docSyntax": "simpleTasks person", "broadcasted": false, "description": "Return all simple tasks assigned to given person.", "server": false}, "BIS_fnc_swapVars": {"reviewLevel": 2, "syntax": "[variableName1,variableName2] call BIS_fnc_swapVars", "local": false, "example": "_a = 1; _b = 2; [\"_a\", \"_b\"] call BIS_fnc_swapVars; _a == 2; // true _b == 1; // true", "docSyntax": "[variableName1, variableName2] call BIS_fnc_swapVars", "broadcasted": false, "description": "Swaps the values of two variables passed as String.", "server": false}, "items": {"reviewLevel": 2, "syntax": "items <objUnit>", "local": false, "example": "_itemsplayer = items player;", "docSyntax": "items unit", "broadcasted": false, "description": "Returns an array of names of all special items of a vehicle or a soldier.", "server": true}, "waypointAttachedVehicle": {"reviewLevel": 1, "syntax": "waypointAttachedVehicle waypoint", "local": false, "example": "waypointAttachedVehicle [groupOne,1]", "docSyntax": "waypointAttachedVehicle waypoint", "broadcasted": false, "description": "Gets the vehicle attached to the waypoint.", "server": false}, "cameraView": {"reviewLevel": 2, "syntax": "cameraView", "local": false, "example": "if (cameraOn == _vehicle && cameraView == \"External\") then { _vehicle switchCamera \"Internal\"; };", "docSyntax": "cameraView", "broadcasted": false, "description": "Returns mode of active camera view. Mode is one of:", "server": false}, "getGroupIcons": {"reviewLevel": 2, "syntax": "getGroupIcons <objGroup>", "local": false, "example": "", "docSyntax": "getGroupIcons group", "broadcasted": false, "description": "Returns all group icons. [id,icon,[offsetx,offsety],[..],..]", "server": true}, "setSimpleTaskDestination": {"reviewLevel": 2, "syntax": "<objTask> setSimpleTaskDestination <array>", "local": false, "example": "_tskGoHere setSimpleTaskDestination (getMarkerPos \"obj1\");", "docSyntax": "task setSimpleTaskDestination pos", "broadcasted": false, "description": "Attach a destination to the simple task.", "server": false}, "actionKeysNamesArray": {"reviewLevel": 1, "syntax": "actionKeysNamesArray userAction", "local": false, "example": "list = actionKeysNamesArray \"ReloadMagazine\";", "docSyntax": "actionKeysNamesArray userAction", "broadcasted": false, "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.", "server": false}, "BIS_fnc_sceneSetAnimationsForGroup": {"reviewLevel": 1, "syntax": "param call BIS_fnc_sceneSetAnimationsForGroup;", "local": false, "example": "setAnims = [group player, [\"AmovPercMstpSrasWrflDnon\"]] call BIS_fnc_sceneSetAnimationsForGroup;", "docSyntax": "param call BIS_fnc_sceneSetAnimationsForGroup;", "broadcasted": false, "description": "Plays a range of animations for a specific set of units, intended for use during cutscenes.", "server": false}, "members": {"reviewLevel": 1, "syntax": "members team", "local": false, "example": "_members = members _team", "docSyntax": "members team", "broadcasted": false, "description": "Return a list of members in given team.", "server": false}, "getPlayerUID": {"reviewLevel": 2, "syntax": "getPlayerUID <objUnit>", "local": false, "example": "_uid = getPlayerUID player;", "docSyntax": "getPlayerUID unit", "broadcasted": false, "description": "Return an uniqueID of the given unit as string if it's player and empty value if it's AI. The unique ID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name).", "server": true}, "missionNamespace": {"reviewLevel": 2, "syntax": "missionNamespace", "local": false, "example": "missionNamespace setVariable [\"YourString\",3];//Same as: YourString = 3; _yourString = missionNamespace getVariable \"YourString\";", "docSyntax": "missionNamespace", "broadcasted": false, "description": "Returns the global namespace attached to mission.", "server": false}, "diag_log": {"reviewLevel": 1, "syntax": "diag_log anything", "local": false, "example": "diag_log time;", "docSyntax": "diag_log anything", "broadcasted": false, "description": "Dumps the argument's value to the report file. Each call creates a new line in the file.", "server": false}, "systemChat": {"reviewLevel": 2, "syntax": "systemChat <string>", "local": false, "example": "systemChat \"Hello world!\";", "docSyntax": "systemChat text", "broadcasted": false, "description": "Types text to the system radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "server": false}, "say3D": {"reviewLevel": 1, "syntax": "from say3D sound", "local": false, "example": "helicopter1 say3D \"Fortunateson\"", "docSyntax": "from say3D sound", "broadcasted": false, "description": "Unit or object will say given sound in 3D Space. This allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command. Compare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound. Sound is defined in \"CfgSounds\" of the Description.ext or main config.", "server": true}, "currentTask": {"reviewLevel": 2, "syntax": "currentTask <objUnit>", "local": false, "example": "_currTask = currentTask player;", "docSyntax": "currentTask person", "broadcasted": false, "description": "Return current task of given person.", "server": false}, "isFlatEmpty": {"reviewLevel": 1, "syntax": "position isFlatEmpty [minDistance,mode,maxGradient,maxGradientRadius,overLandOrWater,shoreLine,ignoreObject]", "local": false, "example": "Check if player position is over land:_overLand =\u00c2\u00a0!(position player isFlatEmpty [-1, -1, -1, -1, 0, false] isEqualTo []);", "docSyntax": "position isFlatEmpty [minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]", "broadcasted": false, "description": "Checks given position against given filter params. Filter includes checks for:", "server": false}, "serverCommandAvailable": {"reviewLevel": 1, "syntax": "serverCommandAvailable command", "local": false, "example": "_can = serverCommandAvailable \"#kick\";", "docSyntax": "serverCommandAvailable command", "broadcasted": false, "description": "Returns true if given serverCommand is available on current machine, false if not. Here is the general table of availability of Arma 3 server commands:", "server": false}, "unregisterTask": {"reviewLevel": 1, "syntax": "teamMember unregisterTask <string>", "local": false, "example": "player unregisterTask taskName;", "docSyntax": "teamMember unregisterTask name", "broadcasted": false, "description": "Unregister a task type.", "server": false}, "closeOverlay": {"reviewLevel": 2, "syntax": "closeOverlay <objMap>", "local": false, "example": "", "docSyntax": "closeOverlay map", "broadcasted": false, "description": "Closes the current overlay without committing.", "server": false}, "removeMenuItem": {"reviewLevel": 2, "syntax": "<objMap> removeMenuItem <scalar>", "local": false, "example": "", "docSyntax": "map removeMenuItem index", "broadcasted": false, "description": "Removes a previously added menu item.", "server": false}, "kbAddDatabaseTargets": {"reviewLevel": 1, "syntax": "<bool> = <objUnit> kbAddDatabaseTargets fileName", "local": false, "example": "_hasBeenAdded = _unit kbAddDatabaseTargets \"chat.txt\"", "docSyntax": "Boolean = person kbAddDatabaseTargets fileName", "broadcasted": false, "description": "Register target list knowledge base database to given person. See Conversations for more details.", "server": false}, "diag_frameNo": {"reviewLevel": 2, "syntax": "diag_frameNo", "local": false, "example": "_currFrameNo = diag_frameNo;", "docSyntax": "diag_frameNo", "broadcasted": false, "description": "Returns number of frame currently displayed.", "server": false}, "BIS_fnc_supplydrop": {"reviewLevel": 2, "syntax": "[airUnit,class] spawn BIS_fnc_supplydrop", "local": false, "example": "[ [BIS_airDropVeh, \"reammobox\"] spawn BIS_fnc_supplydrop;", "docSyntax": "[airUnit,class] spawn BIS_fnc_supplydrop", "broadcasted": false, "description": "Script for para-drop of objects. Spawns waitUntil that handles ground hit (detaching of object from parachute). Used by supplydrop service.", "server": false}, "createDiaryRecord": {"reviewLevel": 2, "syntax": "<objUnit> createDiaryRecord [<string>,<string>,<objTask>,state]", "local": false, "example": "player createDiaryRecord [\"Diary\", [\"Intel\", \"Enemy base is on grid <marker name='enemyBase'>161170</marker>\"]]", "docSyntax": "unitName createDiaryRecord [subject, text, task, state]", "broadcasted": false, "description": "Creates a diary entry. Supported tags and their parameters:", "server": false}, "BIS_fnc_crossProduct": {"reviewLevel": 2, "syntax": "[vector1,vector2] call BIS_fnc_crossProduct", "local": false, "example": "_product = [[1,2,3], [3,2,1]] call BIS_fnc_crossProduct;", "docSyntax": "[vector1, vector2] call BIS_fnc_crossProduct", "broadcasted": false, "description": "Return the cross product of two 3D vectors.", "server": false}, "onGroupIconClick": {"reviewLevel": 1, "syntax": "onGroupIconClick command", "local": false, "example": "onGroupIconClick { // Passed values for _this are: _is3D = _this select 0; _group = _this select 1; _wpID = _this select 2; _RMB = _this select 3; _posx = _this select 4; _posy = _this select 5; _shift = _this select 6; _ctrl = _this select 7; _alt = _this select 8; _message = format [\"____ Info ____\"]; {_message = _message + format [\"\\n\u00c2\u00a0%1\",_x]} forEach _this; hint _message; }", "docSyntax": "onGroupIconClick command", "broadcasted": false, "description": "Defines an action performed when player clicked on group marker (3D or in a map). The code executed once. This EH, unlike onGroupIconOverEnter and onGroupIconOverLeave, has one more param which returns 1 if RMB was pressed, 0 otherwise.", "server": false}, "isAgent": {"reviewLevel": 1, "syntax": "isAgent teamMember", "local": false, "example": "isAgent teamMember _unit;", "docSyntax": "isAgent teamMember", "broadcasted": false, "description": "Check if team member is an agent.", "server": false}, "assignedTeam": {"reviewLevel": 2, "syntax": "assignedTeam <objUnit>", "local": true, "example": "_team = assignedTeam player;", "docSyntax": "assignedTeam unitName", "broadcasted": false, "description": "Returns the team the unit belongs to. Possible values:", "server": false}, "diarySubjectExists": {"reviewLevel": 2, "syntax": "<objUnit> diarySubjectExists <string>", "local": false, "example": "_exists = player diarySubjectExists \"subjectName\"", "docSyntax": "person diarySubjectExists name", "broadcasted": false, "description": "Checks whether given subject is present in the diary of given person.", "server": false}, "BIS_fnc_taskAttack": {"reviewLevel": 2, "syntax": "[<objGroup>,position] call BIS_fnc_taskAttack", "local": false, "example": "[opforGroup, getPosATL player] call BIS_fnc_taskAttack;", "docSyntax": "[group, position] call BIS_fnc_taskAttack", "broadcasted": false, "description": "This function adds a Seek and Destroy waypoint on defined position to the group and set its behaviour to \"AWARE\". If the group has other waypoints, the waypoint will be added at the end of the list.", "server": false}, "displayRemoveEventHandler": {"returns": "void", "reviewLevel": 4, "syntax": "<uiDisplay> displayRemoveEventHandler [<string>,<scalar>]", "local": false, "example": "mod_keyDownEHId = (findDisplay 46) displayRemoveEventHandler [\"keyDown\",5];", "docSyntax": "display displayRemoveEventHandler [handler name,id]", "broadcasted": false, "description": "Remove a given event handler from the given display.", "server": false}, "lnbValue": {"reviewLevel": 2, "syntax": "lnbValue [<scalar>,[<scalar>,<scalar>]]", "local": false, "example": "_ctrl lnbValue [0,0];//1, default is 0 if value is String set by lnbSetValue", "docSyntax": "lnbValue [idc,[row, column]]", "broadcasted": false, "description": "Returns the additional integer value in the item with the given position of the 2D listbox.", "server": false}, "currentTasks": {"reviewLevel": 2, "syntax": "currentTasks <objUnit>", "local": false, "example": "_playerTasks = currentTasks teamMember player", "docSyntax": "currentTasks member", "broadcasted": false, "description": "List all uncompleted tasks.", "server": false}, "disableSerialization": {"reviewLevel": 2, "syntax": "disableSerialization", "local": false, "example": "disableSerialization; _display = findDisplay 46;", "docSyntax": "disableSerialization", "broadcasted": false, "description": "Disable saving of script containing this command. After this, the script can work with data types which do not support serialization (UI types).", "server": false}, "waypointVisible": {"reviewLevel": 1, "syntax": "waypointVisible waypoint", "local": false, "example": "_visible = waypointVisible [groupOne, 1];", "docSyntax": "waypointVisible waypoint", "broadcasted": false, "description": "Returns the visibility of the waypoint. Returns 0 (Number) for a non valid waypoint.", "server": false}, "currentMuzzle": {"reviewLevel": 1, "syntax": "currentMuzzle gunner", "local": false, "example": "_muzzle = currentMuzzle player;", "docSyntax": "currentMuzzle gunner", "broadcasted": false, "description": "Returns current muzzle of unit's weapon.", "server": false}, "onHCGroupSelectionChanged": {"reviewLevel": 1, "syntax": "onHCGroupSelectionChanged command", "local": false, "example": "onHCGroupSelectionChanged { if (_isSelected) then { hint format [\"Group\u00c2\u00a0%1 has been selected.\", _group]; } else { hint format [\"Group\u00c2\u00a0%1 has been deselected.\", _group]; }; };", "docSyntax": "onHCGroupSelectionChanged command", "broadcasted": false, "description": "Defines an action performed when high command group selection has been changed.", "server": false}, "rankId": {"reviewLevel": 2, "syntax": "rankId <objUnit>", "local": false, "example": "_myIdRank = rankId player;", "docSyntax": "rankId unit", "broadcasted": false, "description": "Return the rank of the given unit for comparison. Value may be\u00c2\u00a0:", "server": false}, "lineIntersects": {"reviewLevel": 2, "syntax": "lineIntersects [begPos,endPos,objIgnore1,objIgnore2]", "local": false, "example": "lineIntersects [ eyePos player, aimPos chopper, player, chopper]", "docSyntax": "lineIntersects [begPos, endPos, objIgnore1, objIgnore2]", "broadcasted": false, "description": "Checks for object intersection with a virtual line between two positions. Returns true if intersects with an object.", "server": true}, "BIS_fnc_commsMenuToggleVisibility": {"example": "", "server": false, "broadcasted": false, "description": "/* File: fn_commsMenuToggleVisibility.sqf Description: Shows or hides certain sections of the global communications menu. Parameter(s): _this select 0: index (Scalar) or list of indices (Array of Scalars) or section name (String) \"som\" - SecOps section \"wf\" - Warfare section _this select 1: mode (Scalar) 0 - hide 1 - show Returns: Success flag (Boolean)", "local": false}, "currentWeaponMode": {"reviewLevel": 1, "syntax": "currentWeaponMode gunner", "local": false, "example": "_weaponMode = currentWeaponMode player;", "docSyntax": "currentWeaponMode gunner", "broadcasted": false, "description": "Returns current weapon mode of unit's weapon. Result can be: \"Single\", \"Burst\", \"FullAuto\", \"manual\", \"player\"", "server": false}, "lnbSetCurSelRow": {"reviewLevel": 2, "syntax": "lnbSetCurSelRow [<scalar>,<scalar>]", "local": false, "example": "disableSerialization; _ctrl = (findDisplay 300) displayCtrl 304; _ctrl lnbSetCurSelRow 1;", "docSyntax": "lnbSetCurSelRow [idc, index]", "broadcasted": false, "description": "Selects the row with the given index of the 2D listbox.", "server": false}, "triggerType": {"reviewLevel": 2, "syntax": "triggerType <objTrigger>", "local": false, "example": "_type = triggerType tr1;", "docSyntax": "triggerType trigger", "broadcasted": false, "description": "Returns trigger type (see setTriggerType). Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "server": true}, "resources": {"reviewLevel": 2, "syntax": "resources <objUnit>", "local": false, "example": "resources teamMember _unit;", "docSyntax": "resources member", "broadcasted": false, "description": "Returns the resources of a team member. Results are local to the PC on which command was executed.", "server": true}, "playActionNow": {"reviewLevel": 1, "syntax": "soldier playActionNow action", "local": true, "example": "soldierOne playActionNow \"SitDown\";", "docSyntax": "soldier playActionNow action", "broadcasted": true, "description": "When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.", "server": false}, "BIS_fnc_areEqual": {"reviewLevel": 2, "syntax": "[anything1,anything2,\u00e2\u20ac\u00a6] call BIS_fnc_areEqual", "local": false, "example": "[0, \"0\"] call BIS_fnc_areEqual; // false [0, 1 + 1 - 2] call BIS_fnc_areEqual; // true [str 50, \"50\"] call BIS_fnc_areEqual; // true", "docSyntax": "[anything1, anything2, \u00e2\u20ac\u00a6] call BIS_fnc_areEqual", "broadcasted": false, "description": "This function returns true if all of the passed data elements are of the same type and value. One or more elements can be passed.", "server": false}, "waypointCombatMode": {"reviewLevel": 1, "syntax": "waypointCombatMode waypoint", "local": false, "example": "waypointCombatMode [groupOne,1]", "docSyntax": "waypointCombatMode waypoint", "broadcasted": false, "description": "Gets the waypoint combat mode.", "server": false}, "lnbSetColor": {"reviewLevel": 2, "syntax": "lnbSetColor [<scalar>,[<scalar>,<scalar>],<scalar>]", "local": true, "example": "_ctrl lnbSetColor [ [0,0], [1,0,0,1] ];", "docSyntax": "lnbSetColor [idc,[row,column],color]", "broadcasted": false, "description": "Sets the color of the item with the given position of the 2D listbox. Color is in format Color.", "server": false}, "isMultiplayer": {"reviewLevel": 2, "syntax": "isMultiplayer", "local": false, "example": "if (isMultiplayer) then { //...block }", "docSyntax": "isMultiplayer", "broadcasted": false, "description": "Return true if multiPlayer.", "server": false}, "createMenu": {"reviewLevel": 2, "syntax": "<objMap> createMenu <scalar>", "local": false, "example": "", "docSyntax": "map createMenu index", "broadcasted": false, "description": "Creates a previously added menu.", "server": false}, "BIS_fnc_greatestNum": {"reviewLevel": 1, "syntax": "numbers call BIS_fnc_greatestNum", "local": false, "example": "_result = [7,2,1,5,10] call BIS_fnc_greatestNum; //_result = 10", "docSyntax": "numbers call BIS_fnc_greatestNum", "broadcasted": false, "description": "Returns the greatest number out of the passed set.", "server": false}, "getResolution": {"reviewLevel": 2, "syntax": "getResolution", "local": false, "example": "_res = getResolution; //some single monitor setup [ 1360, //width 768, //height 867, //2D viewport width 653, //2D viewport height 1.77778, //aspect ratio 0.85 //UI scale ]", "docSyntax": "getResolution", "broadcasted": false, "description": "Returns an array containing all information about resolution.", "server": false}, "hasInterface": {"reviewLevel": 2, "syntax": "hasInterface", "local": false, "example": "_isHC =\u00c2\u00a0!(hasInterface || isDedicated);", "docSyntax": "hasInterface", "broadcasted": false, "description": "Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client.", "server": false}, "BIS_fnc_nearestPosition": {"reviewLevel": 2, "syntax": "[items,origin] call BIS_fnc_nearestPosition", "local": false, "example": "// Find the nearest marker from player _nearestMarker = [allMapMarkers, player] call BIS_fnc_nearestPosition;", "docSyntax": "[items, origin] call BIS_fnc_nearestPosition", "broadcasted": false, "description": "Function to find the nearest Object or position from a list, when compared to a given reference.", "server": false}, "groupSelectedUnits": {"reviewLevel": 2, "syntax": "groupSelectedUnits <objUnit>", "local": false, "example": "_selectedUnits = groupSelectedUnits player;", "docSyntax": "groupSelectedUnits unit", "broadcasted": false, "description": "Returns selected units in source group for normal commanding mode (individual units). For the High Command equivalent, see hcSelected.", "server": false}, "lnbGetColumnsPosition": {"reviewLevel": 2, "syntax": "lnbGetColumnsPosition _ctrl", "local": true, "example": "lnbGetColumnsPosition _ctrl;", "docSyntax": "lnbGetColumnsPosition _ctrl", "broadcasted": false, "description": "Returns relative screen X of ListNBox control columns position [0.1,0.3,0.6...]. Use lnbSetColumnsPos to set positions.", "server": false}, "setVehicleTiPars": {"reviewLevel": 1, "syntax": "<objVehicle> setVehicleTIPars [engine,wheels,<string>]", "local": false, "example": "vehicle player setVehicleTIPars [1,1,1];", "docSyntax": "vehicle setVehicleTIPars [engine, wheels, weapon]", "broadcasted": false, "description": "Sets the \"heat\" state of different vehicle parts (for TI detection). This allows simulation of heated up parts of a vehicle without it actually having to utilize them. (0: cold, 1: hot)", "server": false}, "onPreloadFinished": {"reviewLevel": 1, "syntax": "onPreloadFinished command", "local": false, "example": "onPreloadFinished {TAG_ReceivingScreenDone = true};", "docSyntax": "onPreloadFinished command", "broadcasted": false, "description": "Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start.", "server": false}, "isManualFire": {"reviewLevel": 1, "syntax": "isManualFire vehicleName", "local": false, "example": "_bool = isManualFire vehicle player;", "docSyntax": "isManualFire vehicleName", "broadcasted": false, "description": "Returns true if manual fire is on. Manual fire could either be selected in vehicle action menu (if available) or with action \"ManualFire\" and \"ManualFireCancel\". Always returns false for a soldier.", "server": true}, "setFromEditor": {"reviewLevel": 1, "syntax": "teamMember setFromEditor fromEditor", "local": false, "example": "_teamMember setFromEditor true", "docSyntax": "teamMember setFromEditor fromEditor", "broadcasted": false, "description": "Set if given team member was inserted directly from editor.", "server": false}, "hcSelected": {"reviewLevel": 2, "syntax": "hcSelected <objUnit>", "local": false, "example": "array = hcSelected unit;", "docSyntax": "hcSelected unit", "broadcasted": false, "description": "Returns selected groups in high command.", "server": false}, "deleteResources": {"reviewLevel": 1, "syntax": "teamMember deleteResources [resource1,resource2,...]", "local": false, "example": "teamMember _agent deleteResources [\"Legs\"];", "docSyntax": "teamMember deleteResources [resource1, resource2,...]", "broadcasted": false, "description": "Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive.", "server": true}, "getFSMVariable": {"reviewLevel": 1, "syntax": "FSMhandle getFSMVariable <string>", "local": false, "example": "_handle getFSMVariable \"_foo\";", "docSyntax": "FSMhandle getFSMVariable name", "broadcasted": false, "description": "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.", "server": false}, "setPosATL": {"reviewLevel": 2, "syntax": "<object> setPosATL <array>", "local": false, "example": "player setPosATL [getPosATL player select 0, (getPosATL player select 1) - 10, getPosATL player select 2];", "docSyntax": "object setPosATL pos", "broadcasted": true, "description": "Sets the position of an object relative to the terrain.", "server": true}, "currentMagazine": {"reviewLevel": 2, "syntax": "currentMagazine <objVehicle>", "local": false, "example": "_magazineClass = currentMagazine player;//Example: \"30Rnd_545x39_AK\"", "docSyntax": "currentMagazine vehicle", "broadcasted": false, "description": "Returns class name of currently loaded vehicle's magazine.", "server": false}, "hcShownBar": {"reviewLevel": 2, "syntax": "hcShownBar", "local": false, "example": "if (hcShownBar) then {hint \"HC bar is active\";};", "docSyntax": "hcShownBar", "broadcasted": false, "description": "Return true if the high command bar is shown/active.", "server": false}, "copyFromClipboard": {"returns": "string", "reviewLevel": 4, "local": false, "example": "hint copyFromClipboard;", "docSyntax": "copyFromClipboard", "broadcasted": false, "description": "Return the content of the (text) clipboard.", "server": false}, "BIS_fnc_magnitude": {"reviewLevel": 1, "syntax": "vector call BIS_fnc_magnitude", "local": false, "example": "[5,3] call BIS_fnc_magnitude;", "docSyntax": "vector call BIS_fnc_magnitude", "broadcasted": false, "description": "Returns the magnitude of an array of numbers. The vector can have any number of elements.", "server": false}, "synchronizeTrigger": {"reviewLevel": 2, "syntax": "<objTrigger> synchronizeTrigger [waypoint1,waypoint2,...]", "local": false, "example": "_trigger synchronizeTrigger []", "docSyntax": "trigger synchronizeTrigger [waypoint1, waypoint2, ...]", "broadcasted": false, "description": "Synchronizes the trigger with zero or more waypoints.", "server": false}, "ctrlAutoScrollDelay": {"reviewLevel": 2, "syntax": "ctrlAutoScrollDelay <uiControl>", "local": false, "example": "_ctrlDelay = ctrlAutoScrollDelay _ctrlGroup;", "docSyntax": "ctrlAutoScrollDelay control", "broadcasted": false, "description": "Returns number of seconds auto-scroll will wait before scroll and/or rewind. -2 if scrollbar not present.", "server": false}, "camConstuctionSetParams": {"reviewLevel": 2, "syntax": "<objCamera> camConstuctionSetParams [[x,y,z],radius,maxAboveLand]", "local": false, "example": "_camera camConstuctionSetParams [getPos player, 50, 20];", "docSyntax": "camera camConstuctionSetParams [[x,y,z], radius, maxAboveLand]", "broadcasted": false, "description": "Sets construction camera parameters. To work with \"camconstruct\" object.", "server": false}, "BIS_fnc_addEvidence": {"example": "", "server": false, "broadcasted": false, "description": "/******************************************************************************* * * version: 1.0 * name: Add evidence * description: add an evidence value to global campaign variable * paramater: evidence variable name (defined in init.sqf of campaign mission C1) or simply number (scalar) * return value: none *", "local": false}, "ctrlRemoveAllEventHandlers": {"reviewLevel": 1, "syntax": "<uiControl> ctrlRemoveAllEventHandlers handlerName", "local": false, "example": "", "docSyntax": "control ctrlRemoveAllEventHandlers handlerName", "broadcasted": false, "description": "Remove all event handlers from the given control.", "server": false}, "displayRemoveAllEventHandlers": {"reviewLevel": 1, "syntax": "<uiDisplay> displayRemoveAllEventHandlers handlerName", "local": false, "example": "", "docSyntax": "display displayRemoveAllEventHandlers handlerName", "broadcasted": false, "description": "Remove all event handlers from the given display.", "server": false}, "BIS_fnc_isInFrontOf": {"reviewLevel": 2, "syntax": "[reference,checked,offset] call BIS_fnc_isInFrontOf", "local": false, "example": "_isInstructorInFrontOfPlayer = [player, instructor, 0] call BIS_fnc_isInFrontOf;", "docSyntax": "[reference, checked, offset] call BIS_fnc_isInFrontOf", "broadcasted": false, "description": "Check if an object is in front of another object (in the front 180\u00c2\u00b0)", "server": false}, "resetCamShake": {"reviewLevel": 2, "syntax": "resetCamShake", "local": false, "example": "resetCamShake;", "docSyntax": "resetCamShake", "broadcasted": false, "description": "Stops any ongoing camera shake effects. Does not prevent new effects from being created. To disallow new effects altogether, enableCamShake should be used.", "server": false}, "playScriptedMission": {"reviewLevel": 2, "syntax": "playScriptedMission [world,expression,config,ignoreChildWindow]", "local": false, "example": "playScriptedMission [ \"desert_e\", { private[\"_handle\"]; _handle = execVM \"\\ca\\missions_e\\data\\scenes\\credits1\\init.sqf\"; }, configFile/\"CfgMissions\"/\"Cutscenes\"/\"Credits\" ];", "docSyntax": "playScriptedMission [world,expression,config,ignoreChildWindow]", "broadcasted": false, "description": "Load the given world, launch an empty mission and execute the given, expression. Config (optional) can reference to the config entry, replacing description.ext for this mission.", "server": false}, "BIS_fnc_flies": {"reviewLevel": 2, "syntax": "[position,interval,areaSize] call BIS_fnc_flies", "local": false, "example": "_flies = [position deadBody, 0.05, 1.5] call BIS_fnc_flies;", "docSyntax": "[position,interval,areaSize] call BIS_fnc_flies", "broadcasted": false, "description": "Spawns flies around position.", "server": false}, "cameraEffectEnableHUD": {"reviewLevel": 2, "syntax": "cameraEffectEnableHUD <bool>", "local": false, "example": "cameraEffectEnableHUD true;", "docSyntax": "cameraEffectEnableHUD enable", "broadcasted": false, "description": "Enable / disable showing of in-game UI during currently active camera effect. By default the HUD is off, which will make results of drawIcon3D invisible, for example.", "server": false}, "setSimpleTaskTarget": {"reviewLevel": 2, "syntax": "<objTask> setSimpleTaskTarget [<object>,precisePosition]", "local": false, "example": "task setSimpleTaskTarget [targetVehicle, true];", "docSyntax": "task setSimpleTaskTarget [target, precisePosition]", "broadcasted": false, "description": "Attach a target to the simple task.", "server": false}, "BIS_fnc_sceneCreateSoundEntities": {"example": "", "server": false, "broadcasted": false, "description": "Create sound entities and attaches them to an passed object.", "local": false}, "BIS_fnc_sceneSetObjects": {"reviewLevel": 2, "syntax": "[centre,objectsArray,applyOffset,stopped] call BIS_fnc_sceneSetObjects", "local": false, "example": "[player, _arrayOfObjects, false] call BIS_fnc_sceneSetObjects;", "docSyntax": "[centre, objectsArray, applyOffset, stopped] call BIS_fnc_sceneSetObjects", "broadcasted": false, "description": "This function sets objects positions and direction relative to the chosen object.", "server": false}, "progressPosition": {"reviewLevel": 2, "syntax": "progressPosition <uiControl>", "local": false, "example": "_pos = progressPosition _control;", "docSyntax": "progressPosition control", "broadcasted": false, "description": "Returns the current position in the progress bar.", "server": false}, "deleteTeam": {"reviewLevel": 1, "syntax": "deleteTeam team", "local": false, "example": "deleteTeam _team;", "docSyntax": "deleteTeam team", "broadcasted": false, "description": "Destroy given team.", "server": false}, "hcSelectGroup": {"reviewLevel": 2, "syntax": "<objUnit> hcSelectGroup <array>", "local": false, "example": "player hcSelectGroup [group_1,group_2];", "docSyntax": "unit hcSelectGroup array", "broadcasted": false, "description": "Select given group in high command bar.", "server": false}, "synchronizeObjectsRemove": {"reviewLevel": 2, "syntax": "<objUnit> synchronizeObjectsRemove [objects]", "local": false, "example": "", "docSyntax": "unit synchronizeObjectsRemove [objects]", "broadcasted": true, "description": "Remove given objects from the unit's list of synchronized objects.", "server": true}, "setVisibleIfTreeCollapsed": {"reviewLevel": 2, "syntax": "<objMap> setVisibleIfTreeCollapsed [<object>,visible]", "local": false, "example": "_map setVisibleIfTreeCollapsed [\"_unit_0\", true]", "docSyntax": "map setVisibleIfTreeCollapsed [object, visible]", "broadcasted": false, "description": "Sets whether or not the object is visible even if the tree is collapsed.", "server": false}, "BIS_fnc_taskPatrol": {"reviewLevel": 2, "syntax": "[<objGroup>,position,<scalar>,area blacklist] call BIS_fnc_taskPatrol", "local": false, "example": "[group this, getPos this, 1000] call bis_fnc_taskPatrol", "docSyntax": "[group,position,distance,area blacklist] call BIS_fnc_taskPatrol", "broadcasted": false, "description": "Create a random patrol of several waypoints around a given position.", "server": false}, "terrainIntersect": {"reviewLevel": 2, "syntax": "terrainIntersect [pos1,pos2]", "local": false, "example": "_intersects = terrainIntersect [getPos player, getPos chopper];", "docSyntax": "terrainIntersect [pos1, pos2]", "broadcasted": false, "description": "Checks for intersection of terrain between two AGL positions. Returns true if intersects with terrain. For ASL variant see terrainIntersectASL", "server": false}, "scriptName": {"reviewLevel": 2, "syntax": "scriptName <string>", "local": false, "example": "scriptName \"leetScript.sqf\";", "docSyntax": "scriptName name", "broadcasted": false, "description": "Assign a user friendly name to the VM script this command is executed from. Once name is assigned, it cannot be changed.", "server": false}, "BIS_fnc_arrayCompare": {"reviewLevel": 2, "syntax": "[array1,array2] call BIS_fnc_arrayCompare", "local": false, "example": "_array1 = [0,1,2]; _array2 = [0,1,2]; [_array1, _array2] call BIS_fnc_arrayCompare; // returns true", "docSyntax": "[array1, array2] call BIS_fnc_arrayCompare", "broadcasted": false, "description": "This function checks if two arrays are containing the same elements in the same order.", "server": false}, "copyWaypoints": {"reviewLevel": 1, "syntax": "groupTo copyWaypoints groupFrom", "local": false, "example": "group1 copyWaypoints group2;", "docSyntax": "groupTo copyWaypoints groupFrom", "broadcasted": false, "description": "Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one.", "server": false}, "setHit": {"reviewLevel": 2, "syntax": "<object> setHit [part,<scalar>,useEffects]", "local": true, "example": "vehicle player setHit [\"motor\", 1]", "docSyntax": "object setHit [part, damage, useEffects]", "broadcasted": true, "description": "Damage / repair part of object. The object must be local to the computer where command is executed. Damage 0 means fully functional, damage 1 means completely destroyed / dead. Note: Some part names are in Czech; see translation table.", "server": false}, "mapGridPosition": {"reviewLevel": 1, "syntax": "mapGridPosition param", "local": false, "example": "_gridPos = mapGridPosition player", "docSyntax": "mapGridPosition param", "broadcasted": false, "description": "Returns the map grid position of an object or position. The format is determined by the Grid format specified in the CfgWorlds for the current world. Eg: \"024577\" or \"De82\" or similar.", "server": false}, "moonIntensity": {"reviewLevel": 2, "syntax": "moonIntensity", "local": false, "example": "_intensity = moonIntensity;", "docSyntax": "moonIntensity", "broadcasted": false, "description": "Returns the intensity of the moon's brightness in range 0...1.", "server": false}, "setEditorMode": {"reviewLevel": 1, "syntax": "<objMap> setEditorMode mode", "local": false, "example": "", "docSyntax": "map setEditorMode mode", "broadcasted": false, "description": "Sets map mode to MAP,3D or PREVIEW.", "server": false}, "ppEffectDestroy": {"reviewLevel": 1, "syntax": "ppEffectDestroy effect", "local": false, "example": "ppEffectDestroy _hndl;", "docSyntax": "ppEffectDestroy effect", "broadcasted": false, "description": "Destroy Post process effects given by handle or array of handles.", "server": false}, "BIS_fnc_commsMenuCreate": {"reviewLevel": 2, "syntax": "call BIS_fnc_commsMenuCreate", "local": false, "example": "call BIS_fnc_commsMenuCreate;", "docSyntax": "call BIS_fnc_commsMenuCreate", "broadcasted": false, "description": "Creates the global communications menu, if it's not already created. All entries are invisible by default. Unhide appropriate sections by using BIS_fnc_commsMenuToggleVisibility.", "server": false}, "execFSM": {"reviewLevel": 1, "syntax": "arguments execFSM filename", "local": false, "example": "_id = player execFSM \"test.fsm\";", "docSyntax": "arguments execFSM filename", "broadcasted": false, "description": "Executes scripted FSM and returns the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in _this variable inside FSM. In Arma 3 FSM handle is also available in _thisFSM variable.", "server": false}, "BIS_fnc_sceneRotate": {"example": "", "server": false, "broadcasted": false, "description": "/********************************************************************* Version: 1.0 Name: sceneRotate DESCRIPTION: Compute new object coordinates from given center and angle from MOTION BUILDER PARAMETERS: center: [x,y,z]; angle: number; init pos [x, y, z] RETURNED VALUE: coordinates **********************************************************************/", "local": false}, "agents": {"reviewLevel": 2, "syntax": "agents", "local": false, "example": "{agent _x moveTo position player} forEach agents;", "docSyntax": "agents", "broadcasted": false, "description": "Return a list of agents in the current mission.", "server": false}, "BIS_fnc_ObjectsMapper": {"reviewLevel": 2, "syntax": "[position,azimuth,objectsArray,badChance] call BIS_fnc_ObjectsMapper", "local": false, "example": "_objectsArray = [ [\"B_UAV_01_F\",[-5.23706,-0.183594,-0.00126648],167.39,1,0,[],\"\",\"\",true,false], [\"C_Offroad_01_F\",[-4.25903,4.62158,0.0630951],224.14,1,0,[],\"\",\"\",true,false] ]; [getMarkerPos \"myBase\", 0, _objectsArray, 0.5] call BIS_fnc_objectsMapper;", "docSyntax": "[position, azimuth, objectsArray, badChance] call BIS_fnc_ObjectsMapper", "broadcasted": false, "description": "Takes an array of data about a dynamic object template and creates the objects.", "server": false}, "lnbCurSelRow": {"reviewLevel": 2, "syntax": "lnbCurSelRow <scalar>", "local": false, "example": "lnbCurSelRow _ctrl;", "docSyntax": "lnbCurSelRow idc", "broadcasted": false, "description": "Returns the index of the selected row id 2D listbox.", "server": false}, "insertEditorObject": {"reviewLevel": 2, "syntax": "<objMap> insertEditorObject [type,<scalar>,[name1,value1,...],subtype class]", "local": false, "example": "", "docSyntax": "map insertEditorObject [type,value,[name1,value1,...],subtype class]", "broadcasted": false, "description": "Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional.", "server": false}, "lockDriver": {"reviewLevel": 1, "syntax": "<objVehicle> lockDriver lock", "local": true, "example": "vehicleName lockDriver true;", "docSyntax": "vehicle lockDriver lock", "broadcasted": true, "description": "Lock the driver position of the vehicle. This command must be executed where vehicle is local. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike lock command", "server": false}, "libraryDisclaimers": {"reviewLevel": 2, "syntax": "libraryDisclaimers", "local": false, "example": "hint str libraryDisclaimers;", "docSyntax": "libraryDisclaimers", "broadcasted": false, "description": "Returns the library disclaimers.", "server": false}, "turretUnit": {"reviewLevel": 1, "syntax": "<objVehicle> turretUnit turretpath", "local": false, "example": "_vehicle turretUnit _thisTurret", "docSyntax": "vehicle turretUnit turretpath", "broadcasted": false, "description": "Returns the unit in the vehicle turret. Driver turret [-1] is supported since Arma 3 v1.57.135045", "server": false}, "BIS_fnc_PosToGrid": {"example": "", "server": false, "broadcasted": false, "description": "Converts array position to map grid position.", "local": false}, "hcGroupParams": {"reviewLevel": 2, "syntax": "<objUnit> hcGroupParams <objGroup>", "local": false, "example": "player hcGroupParams someGroup;", "docSyntax": "unit hcGroupParams group", "broadcasted": false, "description": "Returns parameters describing group in high command bar.", "server": false}, "detach": {"reviewLevel": 2, "syntax": "detach <object>", "local": false, "example": "obj1 attachTo [player]; detach obj1;", "docSyntax": "detach object", "broadcasted": true, "description": "Detaches previously attached with attachTo object.", "server": true}, "agent": {"reviewLevel": 1, "syntax": "agent teamMember", "local": false, "example": "_obj = agent teamMember _unit;", "docSyntax": "agent teamMember", "broadcasted": false, "description": "Return a person for a given agent.", "server": false}, "BIS_fnc_sceneCheckWeapons": {"example": "", "server": false, "broadcasted": false, "description": "/************************************************************************************************************************** Version: 1.0 Name: CheckWeaponsBefore scene DESCRIPTION: Checks if participants haven't missing weapon or haven't it selected before scene Function works as toggle - 1st run of script: running in SETUP mode - sets correct weapons for scene 2nd run of script: running in RESTORE mode - restore origin weapons(delete weapons after scene if character hadn't any) There is default SETUP: [[BIS_Cooper, \"primary\"],[BIS_Ohara, \"primary\"],[BIS_Rodriguez, \"primary\"],[BIS_Sykes, \"primary\"],[BIS_Miles, \"primary\"]] PARAMETERS: _participants: ARRAY of arrays in format [[character1, \"typeofweapon\"],[character2, \"typeofweapon\"],..,[characterx, \"typeofweapon\"]] where character is for example BIS_Cooper and typeofweapon is one of primary/pistol RETURNED VALUE: nothing ****************************************************************************************************************************/", "local": false}, "setMarkerAlphaLocal": {"reviewLevel": 1, "syntax": "marker setMarkerAlphaLocal alpha", "local": false, "example": "\"my_marker\" setMarkerAlphaLocal 0.5;", "docSyntax": "marker setMarkerAlphaLocal alpha", "broadcasted": false, "description": "Sets the marker alpha. The marker is only modified on the computer where the command is called.", "server": false}, "kbTell": {"reviewLevel": 2, "syntax": "<objUnit> kbTell [receiver,topicName,sentenceClass(,argumentArray1,argumentArray2,(\u00e2\u20ac\u00a6),forceRadio)]", "local": false, "example": "player kbTell [BIS_HQ, \"myTopic\", \"playerSentence1\"];", "docSyntax": "person kbTell [receiver, topicName, sentenceClass(, argumentArray1, argumentArray2, (\u00e2\u20ac\u00a6), forceRadio)]", "broadcasted": false, "description": "Make the person tell to the receiver the sentence. See Conversations for more details.", "server": false}, "moveOut": {"reviewLevel": 1, "syntax": "moveOut soldier", "local": false, "example": "{if (lifeState _x == \"UNCONSCIOUS\") then {moveOut _x}} forEach crew cursorTarget;", "docSyntax": "moveOut soldier", "broadcasted": true, "description": "Moves the soldier out of vehicle, immediately, without animation. Does not work on dead crew. Use setPos family of commands to move dead units out soon after they became dead. After awhile dead unit's group becomes grpNull and it cannot be moved out at all. This command will also fail to move AI out of a vehicle if the vehicle is locked but it will work for player", "server": true}, "BIS_fnc_invSlotType": {"reviewLevel": 2, "syntax": "[class] call BIS_fnc_invSlotType", "local": false, "example": "[ currentWeapon player ] call BIS_fnc_invSlotType;//Can return [1,0,0,0,0,0,0,0]", "docSyntax": "[class] call BIS_fnc_invSlotType", "broadcasted": false, "description": "Returns empty inventory slots of given unit.", "server": false}, "clearWeaponCargoGlobal": {"reviewLevel": 2, "syntax": "clearWeaponCargoGlobal <objUnit>", "local": false, "example": "clearWeaponCargoGlobal jeepOne;", "docSyntax": "clearWeaponCargoGlobal unit", "broadcasted": true, "description": "Removes all weapons from the vehicle cargo space. MP synchronized.", "server": true}, "captiveNum": {"reviewLevel": 2, "syntax": "captiveNum <objUnit>", "local": false, "example": "_captivity = captiveNum _unit;", "docSyntax": "captiveNum unit", "broadcasted": false, "description": "Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead. If a unit's captivity level was set as a Boolean, then the returned number is either 0 (for false) or 1 (for true).", "server": true}, "dateToNumber": {"reviewLevel": 1, "syntax": "dateToNumber date", "local": false, "example": "_float = dateToNumber [2035,7,6,12,0]; //0.510959", "docSyntax": "dateToNumber date", "broadcasted": false, "description": "Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31st 23:59:59 = 1. The same day and time in leap year will be different after 28th of February and 23:59 on 31st of December will be 1.00274", "server": false}, "BIS_fnc_help": {"reviewLevel": 2, "syntax": "[] call BIS_fnc_help", "local": false, "example": "[] call bis_fnc_help", "docSyntax": "[] call BIS_fnc_help", "broadcasted": false, "description": "Shows Function Library viewer, which contains list of all available functions, both official and unofficial.", "server": false}, "onCommandModeChanged": {"reviewLevel": 2, "syntax": "onCommandModeChanged <code>", "local": false, "example": "//Examples in-use can be found in: //ca\\modules\\HC\\data\\scripts\\HC_GUI.sqf //A3\\modules_f\\HC\\data\\scripts\\HC_GUI.sqf", "docSyntax": "onCommandModeChanged code", "broadcasted": false, "description": "Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or hcShowBar scripting command. Groups hc mode must contain at least one group for this command to work (see High Command). Attached code receives _isHighCommand boolean.", "server": false}, "getObjectChildren": {"reviewLevel": 2, "syntax": "<objMap> getObjectChildren <object>", "local": false, "example": "", "docSyntax": "map getObjectChildren object", "broadcasted": false, "description": "Return a list of all the children of the specified object.", "server": false}, "hcSetGroup": {"reviewLevel": 2, "syntax": "<objUnit> hcSetGroup <array>", "local": false, "example": "unit hcSetGroup [group, \"HQ\", teamred];", "docSyntax": "unit hcSetGroup array", "broadcasted": false, "description": "Add group to unit's high command bar.", "server": false}, "createSimpleTask": {"reviewLevel": 2, "syntax": "<objUnit> createSimpleTask [<string>,parentTask]", "local": false, "example": "_currentTask = player createSimpleTask [\"NewTask\"];", "docSyntax": "person createSimpleTask [name, parentTask]", "broadcasted": false, "description": "Creates a new Task. The task effect is local, it will only exist on the client it was added.", "server": true}, "completedFSM": {"reviewLevel": 1, "syntax": "completedFSM fsmHandle", "local": false, "example": "_completed = completedFSM _fsmHandle;", "docSyntax": "completedFSM fsmHandle", "broadcasted": false, "description": "Check whether the given FSM completes. The FSM handle is the number returned by the execFSM command.", "server": false}, "currentVisionMode": {"reviewLevel": 2, "syntax": "currentVisionMode <objUnit>", "local": false, "example": "_currMode = currentVisionMode gunner _tank", "docSyntax": "currentVisionMode unit", "broadcasted": false, "description": "Returns current vision mode of unit's weapon.", "server": true}, "deleteEditorObject": {"reviewLevel": 2, "syntax": "<objMap> deleteEditorObject <object>", "local": false, "example": "", "docSyntax": "map deleteEditorObject object", "broadcasted": false, "description": "Delete the editor object. Requires all editor object links to be removed prior.", "server": false}, "triggerActivated": {"reviewLevel": 2, "syntax": "triggerActivated <objTrigger>", "local": false, "example": "if (triggerActivated trg1) then { // Code };", "docSyntax": "triggerActivated trigger", "broadcasted": false, "description": "Returns true if the trigger has been activated. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "server": true}, "BIS_fnc_selectRandomWeighted": {"reviewLevel": 1, "syntax": "itemsAndWeights call BIS_fnc_selectRandomWeighted", "local": false, "example": "[\"apples\",.3,\"pears\",.2,\"bananas\",.4,\"diamonds\",.1,\"unicorns\",.00001] call BIS_fnc_selectRandomWeighted;", "docSyntax": "itemsAndWeights call BIS_fnc_selectRandomWeighted", "broadcasted": false, "description": "Selects a random item from an array, taking into account item weight. Note:", "server": false}, "editObject": {"reviewLevel": 2, "syntax": "<objMap> editObject <object>", "local": false, "example": "", "docSyntax": "map editObject object", "broadcasted": false, "description": "Show the edit object dialog for the given object.", "server": false}, "ctrlAutoScrollSpeed": {"reviewLevel": 2, "syntax": "ctrlAutoScrollSpeed <uiControl>", "local": false, "example": "_ctrlSpeed = ctrlAutoScrollSpeed _ctrlGroup;", "docSyntax": "ctrlAutoScrollSpeed control", "broadcasted": false, "description": "Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present.", "server": false}, "removeAllItems": {"reviewLevel": 2, "syntax": "removeAllItems <objUnit>", "local": true, "example": "removeAllItems unitName;", "docSyntax": "removeAllItems unit", "broadcasted": true, "description": "Removes all special items from the unit.", "server": false}, "inputAction": {"reviewLevel": 2, "syntax": "inputAction <string>", "local": false, "example": "inputAction \"leanLeft\" Returns 1 if the button mapped to \"leanLeft\" is pressed currently else 0.", "docSyntax": "inputAction name", "broadcasted": false, "description": "Return the state of input devices mapped to given input action.", "server": false}, "BIS_fnc_subSelect": {"reviewLevel": 2, "syntax": "[<array>,start,endOrLength] call BIS_fnc_subSelect", "local": false, "example": "_array = [\"a\",\"b\",true,3,8]; [_array, 2] call BIS_fnc_subSelect; // returns [true,3,8]", "docSyntax": "[array, start, endOrLength] call BIS_fnc_subSelect", "broadcasted": false, "description": "Returns a sub-selection of the passed array.", "server": false}, "showLegend": {"reviewLevel": 2, "syntax": "<objMap> showLegend <bool>", "local": false, "example": "", "docSyntax": "map showLegend bool", "broadcasted": false, "description": "Show/hide map legend.", "server": false}, "onPreloadStarted": {"reviewLevel": 1, "syntax": "onPreloadStarted command", "local": false, "example": "onPreloadStarted {diag_log \"preload started\"};", "docSyntax": "onPreloadStarted command", "broadcasted": false, "description": "Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start.", "server": false}, "addTeamMember": {"reviewLevel": 1, "syntax": "team addTeamMember <objUnit>", "local": true, "example": "_team addTeamMember _teamMember;", "docSyntax": "team addTeamMember member", "broadcasted": false, "description": "Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.", "server": false}, "addMenuItem": {"reviewLevel": 1, "syntax": "<objMap> addMenuItem [menu or <scalar>,<string>,command,priority]", "local": false, "example": "", "docSyntax": "map addMenuItem [menu or index,text,command,priority]", "broadcasted": false, "description": "Creates a new menu item. Menu can be \"file\" or \"view\",index is index,as returned from addMenu command. priority is optional and determines,where in the menu the item will reside (higher priority items first).", "server": false}, "lnbSetValue": {"reviewLevel": 2, "syntax": "lnbSetValue [<scalar>,[<scalar>,<scalar>],<scalar>]", "local": false, "example": "_ctrl lnbSetValue [[0,0],1];", "docSyntax": "lnbSetValue [idc, [row, column], value]", "broadcasted": false, "description": "Sets the additional integer value in the item with the position index of the 2D listbox.", "server": false}, "ctrlAutoScrollRewind": {"reviewLevel": 2, "syntax": "ctrlAutoScrollRewind <uiControl>", "local": false, "example": "_ctrlRewind = ctrlAutoScrollRewind _ctrlGroup;", "docSyntax": "ctrlAutoScrollRewind control", "broadcasted": false, "description": "Returns true if auto-scroll should move back to start after it reaches the end.", "server": false}, "BIS_fnc_createmenu": {"example": "", "server": false, "broadcasted": false, "description": "/* File: fn_createMenu.sqf Description: Create custom commanding menu (with multiple pages if necessary). Parameter(s): _this select 0 - STRING or ARRAY - Name of menu or [Name, Context sensitive] _this select 1 - STRING - Variable in which will be menu params stored (as variable_0, variable_1, ...) _this select 2 - ARRAY - Array with menu items (can be either [items] or [[items],[itemNames],[itemEnable]] if you want to set custom params (names, enable values)) _this select 3 - STRING - Name of submenu which will open when item is activated. Name of selected item is passed to string as\u00c2\u00a0%1 _this select 4 - STRING - Expression which is executed when item is activated. Name of selected item is passed to string as\u00c2\u00a0%1, ID is\u00c2\u00a0%2. _this select 5 - ANYTHING (Optional) - params passed to expression. Whole argument is passed as\u00c2\u00a0%3 _this select 6 - BOOLEAN - False to hide number shortcuts Returned value(s): True Example: c = [\"first\",\"second\"]; [\"Menu\", \"b\", c, \"\",\"hint 'ahoj'\"] call BIS_FNC_createmenu; showCommandingMenu \"#USER:b_0\" c = [[\"firstData\",\"secondData\"],[\"First\",\"Second\"]]; [\"Menu\", \"b\", c, \"\",\"hint (str '%1' + str '%2' + str '%3')\"] call BIS_FNC_createmenu; showCommandingMenu \"#USER:b_0\"; see news:g7p3po$gik$1@new-server.localdomain", "local": false}, "BIS_fnc_arithmeticMean": {"reviewLevel": 2, "syntax": "<array> call BIS_fnc_arithmeticMean", "local": false, "example": "[1,3] call BIS_fnc_arithmeticMean;//Returns 2", "docSyntax": "array call BIS_fnc_arithmeticMean", "broadcasted": false, "description": "Returns the arithmetic mean of an array of numbers.", "server": false}, "callExtension": {"reviewLevel": 1, "syntax": "extension callExtension function", "local": false, "example": "_return = \"myExtension\" callExtension \"stringToBeParsed\";", "docSyntax": "extension callExtension function", "broadcasted": false, "description": "Calls custom .dll also known as Extension. The name of the extension is the name of the extension .dll without \".dll\" part (or without \"_x64.dll\" part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be \"myExtension\". For 64-bit extensions, the name of the extension doesn't need to change and is still \"myExtension\". The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.", "server": false}, "BIS_fnc_sceneGetParticipants": {"reviewLevel": 2, "syntax": "[<objUnit>,maxDistance] call BIS_fnc_sceneGetParticipants", "local": false, "example": "[player, 20] call BIS_fnc_sceneGetParticipants;", "docSyntax": "[unit, maxDistance] call BIS_fnc_sceneGetParticipants", "broadcasted": false, "description": "gets members of unit's group who are in unit's range.", "server": false}, "allGroups": {"reviewLevel": 2, "syntax": "allGroups", "local": false, "example": "{(leader _x) sideChat \"Go\u00c2\u00a0! Go\u00c2\u00a0! Go\u00c2\u00a0!\"} forEach allGroups;", "docSyntax": "allGroups", "broadcasted": false, "description": "Return a list of all groups created on the following sides east, west, resistance/independent and civilian only. Does not contain groups of sideLogic.", "server": false}, "BIS_fnc_supplydropService": {"example": "", "server": false, "broadcasted": false, "description": "/* File: supplydropService.sqf Description: Supply drop service - controls approach and departure of transporting air vehicle and actual cargo drop. Used by Supply drop support request. Parameter(s): 1: <object> unit allowed to use the transport system 2: <object> vehicle providing transport 4: <array> positions to be cosen by player; accepted strings are \"pickup\" and \"unload\", the second position is defined by the next paramter (OPTIONAL) 5: <position> (NEEDED ONLY IF PARAMETER #4 IS USED) Returns: N/A */ //MP framework init (used for move command given to transporter vehicle)", "local": false}, "assignedDriver": {"reviewLevel": 2, "syntax": "assignedDriver <objVehicle>", "local": false, "example": "_driver= assignedDriver vehicleName", "docSyntax": "assignedDriver vehicle", "broadcasted": false, "description": "Returns the soldier assigned to the given vehicle as a driver.", "server": false}, "BIS_fnc_inTrigger": {"reviewLevel": 2, "syntax": "[area,position,returnDistance,includeFloorCeiling] call BIS_fnc_inTrigger", "local": false, "example": "_trigger = createTrigger [\"EmptyDetector\", getPosATL player]; _trigger setTriggerArea [10, 10, 0, false]; _inTrigger = [_trigger, player] call BIS_fnc_inTrigger; //_inTrigger = true", "docSyntax": "[area, position, returnDistance, includeFloorCeiling] call BIS_fnc_inTrigger", "broadcasted": false, "description": "Detects whether position is within area (Since Arma 3 v1.57 an engine solution is available inArea) or calculates distance to the nearest edge of trigger area by using optional params.", "server": false}, "kbWasSaid": {"reviewLevel": 2, "syntax": "<objUnit> kbWasSaid [receiver,topic,sentenceID,maxAge]", "local": false, "example": "player kbWasSaid [otherUnit, \"myTopic\", \"mySentenceID\", 3];", "docSyntax": "person kbWasSaid [receiver, topic, sentenceID, maxAge]", "broadcasted": false, "description": "Check if given item was said by person to someone. See Conversations for more details.", "server": false}, "hcRemoveAllGroups": {"reviewLevel": 2, "syntax": "hcRemoveAllGroups <objUnit>", "local": false, "example": "hcRemoveAllGroups player;", "docSyntax": "hcRemoveAllGroups unit", "broadcasted": false, "description": "Remove all groups from unit's high command bar.", "server": false}, "progressSetPosition": {"reviewLevel": 2, "syntax": "<uiControl> progressSetPosition <array>", "local": false, "example": "_control progressSetPosition 0.5", "docSyntax": "control progressSetPosition pos", "broadcasted": false, "description": "Sets progress position of the progress bar (DialogControls-ProgressBar)", "server": false}, "remoteControl": {"reviewLevel": 1, "syntax": "who remoteControl whom", "local": true, "example": "Set player remote control of driver:player remoteControl driver UAV; driver UAV switchCamera \"Internal\"; //switchCamera required //sometimes switchCamera is not needed player remoteControl driver UAV;", "docSyntax": "who remoteControl whom", "broadcasted": true, "description": "Switches on remote control of the unit. Command needs to be executed locally to the player. If driver is remote it will get transferred to players PC.", "server": false}, "ctrlAddEventHandler": {"reviewLevel": 2, "syntax": "<uiControl> ctrlAddEventHandler [handler,function]", "local": false, "example": "_map ctrlAddEventHandler [\"draw\",\"_this call BIS_fnc_strategicMapOpen_draw\"];", "docSyntax": "control ctrlAddEventHandler [handler,function]", "broadcasted": false, "description": "Add an event handler (User Interface Event Handlers) to the given control. Returns id of the handler or -1 when failed.", "server": false}, "deActivateKey": {"reviewLevel": 1, "syntax": "deActivateKey keyname", "local": false, "example": "deActivateKey \"Mission04Key\"", "docSyntax": "deActivateKey keyname", "broadcasted": false, "description": "Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns. See keys, keysLimit and doneKeys in the description.ext file of the missions.", "server": false}, "setWeaponReloadingTime": {"reviewLevel": 2, "syntax": "<objVehicle> setWeaponReloadingTime [gunner,muzzleName,reloadTime]", "local": false, "example": "_done = _vehicle setWeaponReloadingTime [gunner (vehicle player), currentMuzzle (gunner (vehicle player)), 0.5];", "docSyntax": "vehicle setWeaponReloadingTime [gunner, muzzleName, reloadTime]", "broadcasted": false, "description": "Sets states and/or makes an action of/on weapon. Reload time is between 0 and 1 inclusive, where 1 is 100% of maximum reloading time.", "server": false}, "enableSimulation": {"reviewLevel": 1, "syntax": "entity enableSimulation state", "local": false, "example": "player enableSimulation false;", "docSyntax": "entity enableSimulation state", "broadcasted": false, "description": "Enable / disable simulation for given entity.", "server": true}, "diag_fps": {"reviewLevel": 2, "syntax": "diag_fps", "local": false, "example": "diag_log diag_fps;", "docSyntax": "diag_fps", "broadcasted": false, "description": "Returns average framerate calculated over last 16 frames.", "server": false}, "BIS_fnc_returnVehicleTurrets": {"reviewLevel": 2, "syntax": "[configEntry] call BIS_fnc_returnVehicleTurrets", "local": false, "example": "[configFile >> \"CfgVehicles\" >> \"B_MBT_01_TUSK_F\"] call BIS_fnc_returnVehicleTurrets;", "docSyntax": "[configEntry] call BIS_fnc_returnVehicleTurrets", "broadcasted": false, "description": "Return the path to all turrets and sub-turrets in a vehicle.", "server": false}, "triggerText": {"reviewLevel": 2, "syntax": "triggerText <objTrigger>", "local": false, "example": "result = triggerText triggerName;", "docSyntax": "triggerText trigger", "broadcasted": false, "description": "Returns trigger text. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "server": true}, "waypointAttachedObject": {"reviewLevel": 1, "syntax": "waypointAttachedObject waypoint", "local": false, "example": "waypointAttachedObject [groupOne,1]", "docSyntax": "waypointAttachedObject waypoint", "broadcasted": false, "description": "Gets the object attached to the waypoint.", "server": false}, "diag_captureSlowFrame": {"reviewLevel": 2, "syntax": "diag_captureSlowFrame [section,threshold]", "local": false, "example": "diag_captureSlowFrame ['total',0.003];", "docSyntax": "diag_captureSlowFrame [section, threshold]", "broadcasted": false, "description": "Opens \"capture frame\" dialog if current frame exceeds set threshold in seconds. One can indicate to either capture duration of a specific profiling selection or the total duration of the frame. The selection names can be obtained by expanding the profiling tree. Clicking on a tree item will highlight the item on the graph and vice versa. The GUI also provides method of copying of the displayed data to clipboard. Some of the selections:", "server": false}, "lnbSetColumnsPos": {"reviewLevel": 2, "syntax": "lnbSetColumnsPos [<scalar>,positions]", "local": false, "example": "lnbSetColumnsPos [101, [0.1,0.5,0.7]];", "docSyntax": "lnbSetColumnsPos [idc, positions]", "broadcasted": false, "description": "Sets relative screen X for ListNBox control columns positions. Setter for lnbGetColumnsPosition", "server": false}, "BIS_fnc_vectorMultiply": {"reviewLevel": 2, "syntax": "[vector,factor] call BIS_fnc_vectorMultiply", "local": false, "example": "_newVector = [[1,2,3], 3] call BIS_fnc_vectorMultiply; // returns [3,6,9]", "docSyntax": "[vector, factor] call BIS_fnc_vectorMultiply", "broadcasted": false, "description": "Multiplies 3D vector by a scalar.", "server": false}, "playGesture": {"reviewLevel": 1, "syntax": "soldier playGesture moveName", "local": false, "example": "soldierOne playGesture \"Wave\"", "docSyntax": "soldier playGesture moveName", "broadcasted": false, "description": "When used on a person,a smooth transition to the given move will be initiated. Command doesn't seem to be functional", "server": false}, "showNewEditorObject": {"reviewLevel": 2, "syntax": "<objMap> showNewEditorObject [type,class,<objSide>,position]", "local": false, "example": "", "docSyntax": "map showNewEditorObject [type,class,side,position]", "broadcasted": false, "description": "Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is position to create the object.", "server": false}, "triggerTimeout": {"reviewLevel": 2, "syntax": "triggerTimeout <objTrigger>", "local": false, "example": "_timeOut = triggerTimeout someTrigger;", "docSyntax": "triggerTimeout trigger", "broadcasted": false, "description": "Returns trigger timeout in the form [min, mid, max, interruptable]. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "server": true}, "simulationEnabled": {"reviewLevel": 1, "syntax": "simulationEnabled entity", "local": false, "example": "simulationEnabled player;", "docSyntax": "simulationEnabled entity", "broadcasted": false, "description": "Check if the entity has enabled simulation.", "server": false}, "createDiarySubject": {"reviewLevel": 2, "syntax": "<objUnit> createDiarySubject [<string>,displayName,picture]", "local": false, "example": "_index =player createDiarySubject [\"myPage\",\"My page\"];", "docSyntax": "person createDiarySubject [subject, displayName, picture]", "broadcasted": false, "description": "Create a new subject page in a log.", "server": false}, "editorSetEventHandler": {"reviewLevel": 2, "syntax": "<objMap> editorSetEventHandler [handler <string>,function]", "local": false, "example": "_map editorSetEventHandler [\"SelectObject\",\"\"]", "docSyntax": "map editorSetEventHandler [handler name,function]", "broadcasted": false, "description": "Sets given event handler of given editor.", "server": false}, "waypointScript": {"reviewLevel": 1, "syntax": "waypointScript waypoint", "local": false, "example": "waypointScript [groupOne,1]", "docSyntax": "waypointScript waypoint", "broadcasted": false, "description": "Gets the waypoint script.", "server": false}, "unitRecoilCoefficient": {"reviewLevel": 1, "syntax": "unitRecoilCoefficient soldier", "local": false, "example": "_myRecoil = unitRecoilCoefficient player", "docSyntax": "unitRecoilCoefficient soldier", "broadcasted": false, "description": "Returns recoil coefficient of a soldier.", "server": false}, "setCurrentTask": {"reviewLevel": 2, "syntax": "<object> setCurrentTask <objTask>", "local": false, "example": "player setCurrentTask tskKillSpongebob;", "docSyntax": "object setCurrentTask task", "broadcasted": false, "description": "Set the task as a current task of the person.", "server": false}, "isDedicated": {"reviewLevel": 2, "syntax": "isDedicated", "local": false, "example": "if (isDedicated) then {diag_log \"Dedicated Server on the run\u00c2\u00a0!\";};", "docSyntax": "isDedicated", "broadcasted": false, "description": "Return true if the machine (executing the command) is a dedicated multiplayer server. In single player returns false.", "server": false}, "selectedEditorObjects": {"reviewLevel": 2, "syntax": "selectedEditorObjects <objMap>", "local": false, "example": "_selObjects = selectedEditorObjects _map", "docSyntax": "selectedEditorObjects map", "broadcasted": false, "description": "Returns a list of currently selected editor objects.", "server": false}, "lnbDeleteColumn": {"reviewLevel": 2, "syntax": "lnbDeleteColumn [<scalar>,<scalar>]", "local": true, "example": "_ctrl lnbDeleteColumn 1;", "docSyntax": "lnbDeleteColumn [idc,index]", "broadcasted": false, "description": "Removes column with given index from ListNBox control.", "server": false}, "teamName": {"reviewLevel": 1, "syntax": "teamName team", "local": false, "example": "_name = teamName _team;", "docSyntax": "teamName team", "broadcasted": false, "description": "Return a name of given team.", "server": false}, "BIS_fnc_ObjectsGrabber": {"reviewLevel": 2, "syntax": "[position,size,objectOrientation] call BIS_fnc_ObjectsGrabber", "local": false, "example": "[getPos player, 20, true] call BIS_fnc_ObjectsGrabber;", "docSyntax": "[position, size, objectOrientation] call BIS_fnc_ObjectsGrabber", "broadcasted": false, "description": "Converts a set of placed objects to an object array (as a String) for the DynO mapper.", "server": false}, "BIS_fnc_fps": {"reviewLevel": 2, "syntax": "[duration,sceneId,startDelay] call BIS_fnc_fps", "local": false, "example": "_scriptHandle = [10, \"50 units on screen\", 3] call BIS_fnc_fps;", "docSyntax": "[duration, sceneId, startDelay] call BIS_fnc_fps", "broadcasted": false, "description": "Function to measure FPS. Spawns code running for given time and displays result on screen via titleText, globalChat and diag_log. Variable BIS_fps_output is filled with diag_log content too.", "server": false}, "selectDiarySubject": {"reviewLevel": 2, "syntax": "<objUnit> selectDiarySubject <string>", "local": false, "example": "player selectDiarySubject \"someSubject\";", "docSyntax": "person selectDiarySubject subject", "broadcasted": false, "description": "Selects the subject page in a log.", "server": false}, "BIS_fnc_findNestedElement": {"reviewLevel": 2, "syntax": "[<array>,query] call BIS_fnc_findNestedElement", "local": false, "example": "_array = [[1, 2], [3, 4]]; _path = [_array, 3] call BIS_fnc_findNestedElement; // expected result: [1, 0] // ((_array select 1) select 0) == 3", "docSyntax": "[array, query] call BIS_fnc_findNestedElement", "broadcasted": false, "description": "Function to find item in nested arrays and return a path to the first match.", "server": false}, "lookAtPos": {"reviewLevel": 1, "syntax": "<objMap> lookAtPos position", "local": false, "example": "(findDisplay 12) lookAtPos [0,0,0];", "docSyntax": "map lookAtPos position", "broadcasted": false, "description": "Center the map on,and point the camera at,the position.", "server": false}, "getGroupIcon": {"reviewLevel": 2, "syntax": "<objGroup> getGroupIcon <scalar>", "local": false, "example": "_grpIconId = _group getVariable \"BIS_MARTA_ICON_TYPE\"; _grpIcon = _group getGroupIcon _grpIconId;", "docSyntax": "group getGroupIcon ID", "broadcasted": false, "description": "Get group icon properties.", "server": true}, "BIS_fnc_selectRandom": {"reviewLevel": 2, "syntax": "var1 call BIS_fnc_selectRandom", "local": false, "example": "_bestShooter = [_rento, _ben, _trit] call BIS_fnc_selectRandom; //returns one of the variables _bestSeries = [[\"halo1\",\"halo2\"],[\"ofp\",\"arma2\"]] call BIS_fnc_selectRandom; //returns one of the arrays", "docSyntax": "var1 call BIS_fnc_selectRandom", "broadcasted": false, "description": "Selects one of the arguments at random. There is now a dedicated script command selectRandom, use that instead.", "server": false}, "BIS_fnc_roundNum": {"reviewLevel": 2, "syntax": "[<scalar>,factor,secondary factor] call BIS_fnc_roundNum", "local": false, "example": "[10.254,2,3] call BIS_fnc_roundNum;//Returns 9", "docSyntax": "[number, factor, secondary factor] call BIS_fnc_roundNum", "broadcasted": false, "description": "Round a number to the provided factor.", "server": false}, "findEmptyPositionReady": {"reviewLevel": 1, "syntax": "center findEmptyPositionReady [radius,maxDistance]", "local": false, "example": "", "docSyntax": "center findEmptyPositionReady [radius,maxDistance]", "broadcasted": false, "description": "Check if findEmptyPosition command can be called without waiting for files.", "server": false}, "visiblePosition": {"reviewLevel": 2, "syntax": "visiblePosition <object>", "local": false, "example": "playerRenderedPos = visiblePosition player;", "docSyntax": "visiblePosition object", "broadcasted": false, "description": "Returns an object's rendered position (z value above surface underneath) in render time scope. Same as getPosVisual", "server": false}, "BIS_fnc_listPlayers": {"reviewLevel": 2, "syntax": "call BIS_fnc_listPlayers", "local": false, "example": "_allPlayers = call BIS_fnc_listPlayers;", "docSyntax": "call BIS_fnc_listPlayers", "broadcasted": false, "description": "Returns a list of currently played units, alive or dead.", "server": false}, "ctrlMapMouseOver": {"reviewLevel": 2, "syntax": "ctrlMapMouseOver <uiControl>", "local": false, "example": "(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overFriendly\"]; _mouseover = if (count (ctrlMapMouseOver (uiNamespace getVariable \"_map\")) > 0) then { ctrlMapMouseOver (uiNamespace getVariable \"_map\") } else { [\"\"] }; if (_mouseover select 0 == \"task\" && str(_logic getVariable \"onTaskAssigned\")\u00c2\u00a0!= str{}) then { //--- Task (uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overMission\"]; } else { //--- Waypoint (uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_move\"]; };", "docSyntax": "ctrlMapMouseOver control", "broadcasted": false, "description": "Returns description of map sign mouse cursor is over. Works with in-game map as well as 2D editor map in edit mode.", "server": false}, "buildingExit": {"reviewLevel": 1, "syntax": "building buildingExit <scalar>", "local": false, "example": "_building buildingExit 0", "docSyntax": "building buildingExit index", "broadcasted": false, "description": "Returns the given indexed exit in a building. The returned value is in format Position.", "server": false}, "isWalking": {"reviewLevel": 2, "syntax": "isWalking <objUnit>", "local": false, "example": "_bool = isWalking player;", "docSyntax": "isWalking unitName", "broadcasted": false, "description": "Returns true if walk is toggled (W+S in Arma 3).", "server": true}, "sunOrMoon": {"reviewLevel": 2, "syntax": "sunOrMoon", "local": false, "example": "_transitionState = sunOrMoon;", "docSyntax": "sunOrMoon", "broadcasted": false, "description": "Returns the sun to moon transition state in range 0...1", "server": false}, "execEditorScript": {"reviewLevel": 2, "syntax": "<objMap> execEditorScript [<object>,script]", "local": false, "example": "_map execEditorScript [\"_team_1\",\"create\"]", "docSyntax": "map execEditorScript [object,script]", "broadcasted": false, "description": "Execute an editor script for the specified object.", "server": false}, "BIS_fnc_setPitchBank": {"reviewLevel": 2, "syntax": "[<object>,pitch,bank] call BIS_fnc_setPitchBank", "local": false, "example": "[player, 45, -45] call BIS_fnc_setPitchBank;", "docSyntax": "[object, pitch, bank] call BIS_fnc_setPitchBank", "broadcasted": false, "description": "Rotate an object, giving it the specified pitch and bank, in degrees.", "server": false}, "kbAddTopic": {"reviewLevel": 2, "syntax": "<objUnit> kbAddTopic [topicName,conversationFile,fsmFile,eventHandler]", "local": false, "example": "player kbAddTopic [\"myTest\", \"myTest.bikb\", \"myTest.fsm\", compile preprocessFileLineNumbers \"myTest.sqf\"];", "docSyntax": "person kbAddTopic [topicName, conversationFile, fsmFile, eventHandler]", "broadcasted": false, "description": "Register conversation topic to given person. See Conversations for more details.", "server": false}, "markerBrush": {"reviewLevel": 2, "syntax": "markerBrush <string>", "local": false, "example": "if (markerBrush \"Marker1\" == \"Solid\") then {hint \"Marker1 is solid!\"}", "docSyntax": "markerBrush name", "broadcasted": false, "description": "Gets the marker brush. See setMarkerBrush.", "server": false}, "targetsQuery": {"reviewLevel": 1, "syntax": "enquirer targetsQuery [targetIgnore,targetSide,targetType,targetPosition,targetMaxAge]", "local": false, "example": "Return all known targets for player:_targets = player targetsQuery [objNull, sideUnknown, \"\", [], 0];", "docSyntax": "enquirer targetsQuery [targetIgnore, targetSide, targetType, targetPosition, targetMaxAge]", "broadcasted": false, "description": "Returns sorted array of targets, known to the enquirer (including own troops), where the accuracy coefficient reflects how close the result matches the query. This command could be CPU intensive.", "server": false}, "BIS_fnc_sceneGetPositionByAngle": {"example": "", "server": false, "broadcasted": false, "description": "/******************************************************************************* * * version: 1.0 * name: sceneGetPositionByAngle * description: returns new calculated position of object from angle and distance from specified object * parameters: described bellow * return value: array of new coordinates [x, y] *", "local": false}, "lockedTurret": {"reviewLevel": 1, "syntax": "<objVehicle> lockedTurret turretPath", "local": false, "example": "_locked = tank lockedTurret [0];", "docSyntax": "vehicle lockedTurret turretPath", "broadcasted": false, "description": "Check whether gunner position of the vehicle turret is locked.", "server": false}, "registerTask": {"reviewLevel": 1, "syntax": "teamMember registerTask entryName", "local": false, "example": "", "docSyntax": "teamMember registerTask entryName", "broadcasted": false, "description": "Register a new task type. Parameters are defined in the given config class (subclass of CfgTasks).", "server": false}, "BIS_fnc_classMagazine": {"reviewLevel": 1, "syntax": "magazineClass call BIS_fnc_classMagazine", "local": false, "example": "_magazineConfig = currentMagazine player call BIS_fnc_classMagazine;", "docSyntax": "magazineClass call BIS_fnc_classMagazine", "broadcasted": false, "description": "Returns class of magazine given by string.", "server": false}, "BIS_fnc_removeIndex": {"reviewLevel": 2, "syntax": "[<array>,startIndex,endIndex] call BIS_fnc_removeIndex", "local": false, "example": "_array = [0,1,2,3,4]; [array,0] call BIS_fnc_removeIndex;//Returns [1,2,3,4]", "docSyntax": "[array,startIndex,endIndex] call BIS_fnc_removeIndex", "broadcasted": false, "description": "Takes an array, and returns a new array with the specified index(es) removed. This takes the array passed in the first parameter, and returns an array that has the index number in the second parameter removed. If a third parameter is passed, then a range of indexes will be removed. Alternatively, you can pass an array of indexes to remove in the second parameter.", "server": false}, "BIS_fnc_dirIndicator": {"reviewLevel": 2, "syntax": "[origin,<object>,<scalar>,sizeCoef] call BIS_fnc_dirIndicator", "local": false, "example": "[player, TheBoss, [0.706, 0.0745, 0.0196, 1]] call BIS_fnc_dirIndicator;", "docSyntax": "[origin, target, color, sizeCoef] call BIS_fnc_dirIndicator", "broadcasted": false, "description": "Show a 4-directions indicator.", "server": false}, "safeZoneH": {"reviewLevel": 1, "syntax": "SafeZoneH", "local": false, "example": "_screenHeight = safeZoneH;", "docSyntax": "SafeZoneH", "broadcasted": false, "description": "", "server": false}, "removeMagazinesTurret": {"reviewLevel": 2, "syntax": "<objVehicle> removeMagazinesTurret [magazineName,turretPath]", "local": true, "example": "vehicle player removeMagazinesTurret [\"60rnd_cmflaremagazine\",[-1]]", "docSyntax": "vehicle removeMagazinesTurret [magazineName, turretPath]", "broadcasted": true, "description": "Removes all magazines of the given type from given vehicle. Use turret path [-1] for driver's turret.", "server": false}, "getEditorCamera": {"reviewLevel": 2, "syntax": "getEditorCamera <objMap>", "local": false, "example": "", "docSyntax": "getEditorCamera map", "broadcasted": false, "description": "Fetches a reference to the mission editor camera.", "server": false}, "teamType": {"reviewLevel": 1, "syntax": "teamType team", "local": false, "example": "_type = teamType _team;", "docSyntax": "teamType team", "broadcasted": false, "description": "Returns a type of given team.", "server": false}, "directSay": {"reviewLevel": 1, "syntax": "<objUnit> directSay radioName", "local": false, "example": "player directSay configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));", "docSyntax": "unit directSay radioName", "broadcasted": false, "description": "Sends given audio message to the direct channel. Command operates just like xxxxRadio commands, but the sound is played over direct channel and is independent of fadeRadio. The message is defined in CfgRadio in the description.ext file or config radio protocol or a kbAddTopic. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "server": true}, "suppressFor": {"reviewLevel": 1, "syntax": "<objUnit> suppressFor duration", "local": false, "example": "_soldier1 suppressFor 10 Will force soldier1 to do suppressive fire to known enemies during 10 seconds", "docSyntax": "unit suppressFor duration", "broadcasted": false, "description": "Force suppressive fire from the unit.", "server": false}, "BIS_fnc_arrayInsert": {"reviewLevel": 2, "syntax": "[array1,array2,<scalar>] call BIS_fnc_arrayInsert", "local": false, "example": "_result = [[0,1,2,3,4], [\"a\",\"b\",\"c\"], 1] call BIS_fnc_arrayInsert; // returns [0,\"a\",\"b\",\"c\",1,2,3,4]", "docSyntax": "[array1, array2, index] call BIS_fnc_arrayInsert", "broadcasted": false, "description": "Inserts the elements of one array into another, at a specified index. Neither arrays are touched by reference, a new array is returned.", "server": false}, "getPlayerUIDOld": {"reviewLevel": 2, "syntax": "getPlayerUIDOld <objUnit>", "local": false, "example": "_uid = getPlayerUIDOld player;", "docSyntax": "getPlayerUIDOld unit", "broadcasted": false, "description": "Returns the old UniqueID of Arma 2 OA of the given unit as string if it's player and empty value if it's AI. The uniqueID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name). Note: while for ArmA 2 or ArmA 2: Operation Arrowhead until version 1.60 the result always contains a number, it should be always handled as an opaque string. Converting it to a Number can cause precision problems, as Number cannot accurately represent integers above 16777216 (2^24). Moreover, game versions since ArmA 2: Operation Arrowhead 1.61 provide a non-numeric value as a result.", "server": false}, "loadMagazine": {"reviewLevel": 1, "syntax": "transport loadMagazine [turretPath,weaponName,magazineName]", "local": false, "example": "vehicle player loadMagazine [[0],\"m256\",\"20Rnd_120mmHE_M1A2\"];", "docSyntax": "transport loadMagazine [turretPath, weaponName, magazineName]", "broadcasted": false, "description": "Initiates the loading action on given weapon of the turret of a transport. So the new magazine is not available instantly, yet according to the reloadTime. The turret has to be manned. One can also change the magazine if its respective weapon is not selected.", "server": false}, "morale": {"reviewLevel": 2, "syntax": "morale <objUnit>", "local": false, "example": "morale (leader player);//result is 0.5", "docSyntax": "morale unit", "broadcasted": false, "description": "Checks a current morale level of the unit (-1..+1).", "server": false}, "listObjects": {"reviewLevel": 1, "syntax": "<objMap> listObjects type", "local": false, "example": "", "docSyntax": "map listObjects type", "broadcasted": false, "description": "Return the list of all objects of given type.", "server": false}, "setDrawIcon": {"reviewLevel": 2, "syntax": "<objMap> setDrawIcon [<object>,<string>,<scalar>,offset,width,height,maintain size?,angle,<string> identifier,shadow,is3D,draw line?,priority]", "local": false, "example": "", "docSyntax": "map setDrawIcon [object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]", "broadcasted": false, "description": "Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map. If maintain size is a number,the icon will maintain size,if map scale is below that number. is3D,show line and priority are,optional.", "server": false}, "isRealTime": {"reviewLevel": 2, "syntax": "isRealTime <objMap>", "local": false, "example": "_isRealTime = isRealTime _map", "docSyntax": "isRealTime map", "broadcasted": false, "description": "Returns true if the mission editor is operating in real time mode.", "server": false}, "getEditorMode": {"reviewLevel": 2, "syntax": "getEditorMode <objMap>", "local": false, "example": "", "docSyntax": "getEditorMode map", "broadcasted": false, "description": "Returns the current mode of the editor.", "server": false}, "publicVariableServer": {"reviewLevel": 1, "syntax": "publicVariableServer varName", "local": false, "example": "publicVariableServer \"CTFscoreOne\";", "docSyntax": "publicVariableServer varName", "broadcasted": false, "description": "Send the variable value to the server - same limitations regarding variable type as publicVariable.", "server": false}, "setGroupIconParams": {"reviewLevel": 1, "syntax": "<objGroup> setGroupIconParams properties", "local": false, "example": "_grp setGroupIconParams [_color,_text,_scale,_visible]; _grp setGroupIconParams [[0,0,0,0],\"\",1,false];", "docSyntax": "group setGroupIconParams properties", "broadcasted": false, "description": "Set group icons parameters. [color,string,float,bool]", "server": false}, "diag_captureFrame": {"reviewLevel": 1, "syntax": "diag_captureFrame frame", "local": false, "example": "diag_captureFrame 1; //capture the first frame after command execution", "docSyntax": "diag_captureFrame frame", "broadcasted": false, "description": "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and captured data UI dialog appears, similar to diag_captureSlowFrame.", "server": false}, "BIS_fnc_sceneSetPosFormation": {"reviewLevel": 1, "syntax": "param spawn BIS_fnc_sceneSetPosFormation;", "local": false, "example": "0 = [units group player, bluforCommander, player, \"HALFCIRCLE\",0] spawn BIS_fnc_sceneSetPosFormation;", "docSyntax": "param spawn BIS_fnc_sceneSetPosFormation;", "broadcasted": false, "description": "Adjusts units into a pre-determined formation, using a few variables. Part of S.C.E.N.E.S function group.", "server": false}, "joinAs": {"reviewLevel": 2, "syntax": "<objUnit> joinAs [<objGroup>,<scalar>]", "local": false, "example": "player joinAs [_group, 4];", "docSyntax": "unit joinAs [group, id]", "broadcasted": true, "description": "Joins the unit to the given group, if position id is available, this one is used.", "server": true}, "taskCompleted": {"reviewLevel": 2, "syntax": "taskCompleted <objTask>", "local": false, "example": "_done = taskCompleted \"someTask\";", "docSyntax": "taskCompleted task", "broadcasted": false, "description": "Return if task is completed. (state Succeeded, Failed or Canceled)", "server": false}, "enableSentences": {"reviewLevel": 2, "syntax": "enableSentences <bool>", "local": false, "example": "enableSentences false;", "docSyntax": "enableSentences enable", "broadcasted": false, "description": "Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations.", "server": false}, "BIS_fnc_colorRGBtoHTML": {"reviewLevel": 1, "syntax": "colorArray call BIS_fnc_colorRGBtoHTML", "local": false, "example": "_htmlColor = [0,0,0,1] call BIS_fnc_colorRGBtoHTML; // will return #000000", "docSyntax": "colorArray call BIS_fnc_colorRGBtoHTML", "broadcasted": false, "description": "Converts RGB color format to HTML color format.", "server": false}, "waypointDescription": {"reviewLevel": 1, "syntax": "waypointDescription waypoint", "local": false, "example": "waypointDescription [groupOne,1]", "docSyntax": "waypointDescription waypoint", "broadcasted": false, "description": "Gets the waypoint description.", "server": false}, "loadOverlay": {"reviewLevel": 1, "syntax": "<objMap> loadOverlay config", "local": false, "example": "", "docSyntax": "map loadOverlay config", "broadcasted": false, "description": "Creates the load overlay dialog for the specified type of overlay.", "server": false}, "onDoubleClick": {"reviewLevel": 1, "syntax": "<objMap> onDoubleClick command", "local": false, "example": "", "docSyntax": "map onDoubleClick command", "broadcasted": false, "description": "Defines an action performed when the user double clicks on the map. Command receives:,_pos array position,_units array selected units,_shift,_alt bool key state", "server": false}, "checkAIFeature": {"reviewLevel": 1, "syntax": "checkAIFeature feature", "local": false, "example": "_featureUsed = checkAIFeature \"AwareFormationSoft\"", "docSyntax": "checkAIFeature feature", "broadcasted": false, "description": "Check if given AI feature is currently enabled. Feature may be one of: \"AwareFormationSoft\", \"CombatFormationSoft\".", "server": false}, "selectBestPlaces": {"reviewLevel": 2, "syntax": "selectBestPlaces [position,radius,expression,precision,sourcesCount]", "local": false, "example": "myPlaces = selectBestPlaces [position player, 50, \"meadow + 2*hills\", 1, 5];", "docSyntax": "selectBestPlaces [position, radius, expression, precision, sourcesCount]", "broadcasted": false, "description": "Find the places with the maximum value of expression in the given area. Places can be on water. Results are sorted by value. Search pattern is randomised every command execution.", "server": false}, "screenToWorld": {"reviewLevel": 1, "syntax": "screenToWorld screen", "local": false, "example": "_wPos = screenToWorld [0.5,0.5];", "docSyntax": "screenToWorld screen", "broadcasted": false, "description": "Returns the position on landscape (PositionAGL) corresponding to the given point on screen (in UI coordinates).", "server": false}, "waypointStatements": {"reviewLevel": 1, "syntax": "waypointStatements waypoint", "local": false, "example": "waypointStatements [groupOne,1]", "docSyntax": "waypointStatements waypoint", "broadcasted": false, "description": "Gets the waypoint statements.", "server": false}, "addBackpackCargoGlobal": {"reviewLevel": 2, "syntax": "<objVehicle> addBackpackCargoGlobal [packClassName,count]", "local": false, "example": "this addBackpackCargoGlobal [\"TK_RPG_Backpack_EP1\",2];", "docSyntax": "vehicle addBackpackCargoGlobal [packClassName, count]", "broadcasted": true, "description": "Add backpack(s) to the cargo space of vehicle. MP synchronized. Classname list of available backpacks is here", "server": true}, "createTask": {"reviewLevel": 1, "syntax": "teamMember createTask [[type,parentTask],priority,name1,value1...nameN,valueN]", "local": false, "example": "", "docSyntax": "teamMember createTask [[type, parentTask], priority, name1, value1...nameN, valueN]", "broadcasted": false, "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.", "server": false}, "updateMenuItem": {"reviewLevel": 2, "syntax": "<objMap> updateMenuItem [menu <objItem> <scalar>,<string>,command]", "local": false, "example": "", "docSyntax": "map updateMenuItem [menu item index,text,command]", "broadcasted": false, "description": "Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional.", "server": false}, "BIS_fnc_sceneMiscStuff": {"example": "", "server": false, "broadcasted": false, "description": "/********************************************************************* Version: 1.0 Name: sceneMiscStuff DESCRIPTION: Does the basic minor stuff for scene - cinema borders, map is denied etc. PARAMETERS: 1) _cameraPositions - [[cameraTarget],[cameraPos]] - Coordinates. If BIS_debugScene is true then external camera is activated 2) _skipInitBlackout - BOOL - if true, initial blackout is skipped 3) _skipFinalBlackout - BOOL - if true, final blackout is skipped 4) _noUseCheckTheWeapons - BOOL - if true, checking of weapon before scene is skipped 5) _noUseLoadingScreen - BOOL - if true, loadingscreen is bypassed 6) __excludedObjectsForIntruderDetector - ARRAY of objects - objects will be excluded from intruder detector RETURNED VALUE: **********************************************************************/", "local": false}, "WFSideText": {"reviewLevel": 1, "syntax": "WFSideText param", "local": false, "example": "WFSideText player;", "docSyntax": "WFSideText param", "broadcasted": false, "description": "Returns the unlocalized text value of an object's side / a group's side or a side as:", "server": false}, "addMPEventHandler": {"reviewLevel": 2, "syntax": "<object> addMPEventHandler [type,expression]", "local": false, "example": "_index = player addMPEventHandler [\"mpkilled\", {Null = _this execVM \"playerkilled.sqf\";}];", "docSyntax": "object addMPEventHandler [type, expression]", "broadcasted": true, "description": "Adds MP event handler (EH) to the given object and returns EH handle. MP event handlers are added globally to every client on network in multiplayer and will fire on every client too upon event. If EH has some data to return upon event (e.g. the \"MPKilled\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.", "server": true}, "setCamShakeDefParams": {"reviewLevel": 2, "syntax": "setCamShakeDefParams [power,duration,frequency,minSpeed,minMass,caliberCoefHit,vehicleCoef]", "local": false, "example": "setCamShakeDefParams [1, 2, 3, 4, 5, .5, .5];", "docSyntax": "setCamShakeDefParams [power, duration, frequency, minSpeed, minMass, caliberCoefHit, vehicleCoef]", "broadcasted": false, "description": "Sets camera shake default params, the default camshake when, for example, you freelook at your character shooting a 12.7mm sniper rifle or firing tank cannon. Would also work in 1st person.", "server": false}, "onEachFrame": {"reviewLevel": 1, "syntax": "onEachFrame statement", "local": false, "example": "onEachFrame { hintSilent str position player}; //Hints position every frame", "docSyntax": "onEachFrame statement", "broadcasted": false, "description": "Runs given statement every frame.", "server": false}, "setArmoryPoints": {"reviewLevel": 2, "syntax": "setArmoryPoints <scalar>", "local": false, "example": "setArmoryPoints (armoryPoints + 20);", "docSyntax": "setArmoryPoints points", "broadcasted": false, "description": "Stores passed number into [USERNAME].ArmaXProfile file, where it assigns it as a value to armoryPoints entry. If entry doesn't exist, it is created.", "server": false}, "BIS_fnc_setNestedElement": {"reviewLevel": 2, "syntax": "[<array>,path,<scalar>] call BIS_fnc_setNestedElement", "local": false, "example": "_array = [[1, 2], [3, 4]]; _bool = [_array, [0, 0], 0] call BIS_fnc_setNestedElement; // _array is now [[0, 2], [3, 4]]", "docSyntax": "[array, path, value] call BIS_fnc_setNestedElement", "broadcasted": false, "description": "Function to set an item in a nested array using a path. Modifies the array by reference.", "server": false}, "BIS_fnc_getPitchBank": {"reviewLevel": 2, "syntax": "<object> call BIS_fnc_getPitchBank", "local": false, "example": "_pitchBank = vehicle player call BIS_fnc_getPitchBank;", "docSyntax": "object call BIS_fnc_getPitchBank", "broadcasted": false, "description": "Returns the pitch and bank of an object, in degrees. Yaw can be found using the getDir command.", "server": false}, "registeredTasks": {"reviewLevel": 2, "syntax": "registeredTasks <objUnit>", "local": false, "example": "tasklist = registeredTasks teamMember player;", "docSyntax": "registeredTasks member", "broadcasted": false, "description": "List all registered task types.", "server": false}, "lnbColor": {"reviewLevel": 2, "syntax": "lnbColor [<scalar>,[<scalar>,<scalar>]]", "local": false, "example": "_ctrl lnbColor [0,0];", "docSyntax": "lnbColor [idc, [row, column]]", "broadcasted": false, "description": "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color.", "server": false}, "allowCrewInImmobile": {"reviewLevel": 2, "syntax": "<objVehicle> allowCrewInImmobile <bool>", "local": false, "example": "_vehicle allowCrewInImmobile true;", "docSyntax": "vehicle allowCrewInImmobile bool", "broadcasted": false, "description": "If true, units can be in a vehicle with broken tracks/wheels.", "server": false}, "sendTask": {"reviewLevel": 1, "syntax": "sender sendTask [receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]", "local": false, "example": "", "docSyntax": "sender sendTask [receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]", "broadcasted": false, "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.", "server": false}, "switchGesture": {"reviewLevel": 1, "syntax": "soldier switchGesture moveName", "local": false, "example": "soldierOne switchGesture \"Wave\";", "docSyntax": "soldier switchGesture moveName", "broadcasted": false, "description": "When used on a person,the given move is started immediately (there is no transition).", "server": false}, "AISFinishHeal": {"reviewLevel": 2, "syntax": "AISFinishHeal [<objUnit>,healer,healercanheal]", "local": false, "example": "AISFinishHeal [_wounded, _medic, true];", "docSyntax": "AISFinishHeal [unit, healer, healercanheal]", "broadcasted": false, "description": "Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using \"HandleHeal\" event handler.", "server": false}, "allowFileOperations": {"reviewLevel": 2, "syntax": "<objMap> allowFileOperations <bool>", "local": false, "example": "", "docSyntax": "map allowFileOperations bool", "broadcasted": false, "description": "Allow/dissallow file ops (load/save etc).", "server": false}, "hcLeader": {"reviewLevel": 2, "syntax": "hcLeader <objGroup>", "local": false, "example": "_leader = hcLeader groupName;", "docSyntax": "hcLeader group", "broadcasted": false, "description": "Returns group's high command commander.", "server": false}, "synchronizedObjects": {"reviewLevel": 2, "syntax": "synchronizedObjects <objUnit>", "local": true, "example": "_objects = synchronizedObjects _logic;", "docSyntax": "synchronizedObjects unit", "broadcasted": false, "description": "Return the list of objects synchronized with the given unit.", "server": false}, "BIS_fnc_sceneAreaClearance": {"reviewLevel": 1, "syntax": "param spawn BIS_fnc_sceneAreaClearance;", "local": false, "example": "0 = [triggerArea1] spawn BIS_fnc_sceneAreaClearance;", "docSyntax": "param spawn BIS_fnc_sceneAreaClearance;", "broadcasted": false, "description": "Removes object clutter within a set trigger, for use within cutscenes.", "server": false}, "lineIntersectsWith": {"reviewLevel": 2, "syntax": "lineIntersectsWith [begPos,endPos,objIgnore1,objIgnore2,sortByDistance]", "local": false, "example": "_objects = lineIntersectsWith [eyePos player, AGLtoASL screenToWorld [0.5,0.5]];", "docSyntax": "lineIntersectsWith [begPos, endPos, objIgnore1, objIgnore2, sortByDistance]", "broadcasted": false, "description": "Returns objects intersecting with the virtual line from begPos to endPos. By default resulting array of intersecting objects is unsorted. To sort by distance set sortByDistance param to true.", "server": true}, "onGroupIconOverEnter": {"reviewLevel": 1, "syntax": "onGroupIconOverEnter command", "local": false, "example": "onGroupIconOverEnter { // Passed values for _this are: _is3D = _this select 0; _group = _this select 1; _wpID = _this select 2; _posx = _this select 3; _posy = _this select 4; _shift = _this select 5; _ctrl = _this select 6; _alt = _this select 7; _message = format [\"____ Info ____\"]; {_message = _message + format [\"\\n\u00c2\u00a0%1\",_x]} forEach _this; hint _message; }", "docSyntax": "onGroupIconOverEnter command", "broadcasted": false, "description": "Defines an action performed when player moves pointer over group marker (3D or in a map). The code will execute continuously while pointer is over icon.", "server": false}, "eyePos": {"reviewLevel": 2, "syntax": "eyePos <object>", "local": false, "example": "eyePos player", "docSyntax": "eyePos object", "broadcasted": false, "description": "Returns the object's eyes / main turret position.", "server": true}, "BIS_fnc_recompile": {"reviewLevel": 2, "syntax": "[] call BIS_fnc_recompile", "local": false, "example": "[] call BIS_fnc_recompile;", "docSyntax": "[] call BIS_fnc_recompile", "broadcasted": false, "description": "Recompiles all functions.", "server": false}, "aimPos": {"reviewLevel": 2, "syntax": "aimPos <object>", "local": false, "example": "aimPos player", "docSyntax": "aimPos object", "broadcasted": false, "description": "Returns the position of the object other units can aim to.", "server": true}, "addCamShake": {"reviewLevel": 2, "syntax": "addCamShake [power,duration,frequency]", "local": false, "example": "addCamShake [10, 1, 25];", "docSyntax": "addCamShake [power, duration, frequency]", "broadcasted": false, "description": "Creates the camera shaking effect, like when you are near an explosion", "server": false}, "BIS_fnc_AAN": {"reviewLevel": 2, "syntax": "[parseText \"Headline\",parseText \"Rolling <string>\"] spawn BIS_fnc_AAN;", "local": false, "example": "0 = [parseText \"AAN live in Takistan\", parseText \"Weather coming up hot and steamy - Takistan shelled again from border area\"] spawn BIS_fnc_AAN;", "docSyntax": "[parseText \"Headline\", parseText \"Rolling Text\"] spawn BIS_fnc_AAN;", "broadcasted": false, "description": "Function that adds an AAN overlay to the screen, with one headline and a rolling text on the bottom.", "server": false}}}